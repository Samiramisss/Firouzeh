{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/192 168 220 10;DW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.220.10",
            "database": "DW"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.220.10;DW",
          "Username": "reportuser",
          "EncryptConnection": false
        }
      },
      {
        "type": "structured",
        "name": "SQL/192 168 221 10;BI",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.221.10",
            "database": "BI"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.221.10;BI",
          "Username": "Sa",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "DimFundAssets",
        "columns": [
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "FundAsset",
            "dataType": "string",
            "sourceColumn": "FundAsset"
          },
          {
            "name": "EnName",
            "dataType": "string",
            "sourceColumn": "EnName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundAssets = Source{[Schema=\"dbo\",Item=\"DimFundAssets\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundAssets,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFundDataTypes",
        "columns": [
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundDataType",
            "dataType": "string",
            "sourceColumn": "FundDataType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundDataTypes = Source{[Schema=\"dbo\",Item=\"DimFundDataTypes\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundDataTypes,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "FundName",
            "dataType": "string",
            "sourceColumn": "FundName"
          },
          {
            "name": "FundEnName",
            "dataType": "string",
            "sourceColumn": "FundEnName"
          },
          {
            "name": "FundShortName",
            "dataType": "string",
            "sourceColumn": "FundShortName"
          },
          {
            "name": "FundEnShortName",
            "dataType": "string",
            "sourceColumn": "FundEnShortName"
          },
          {
            "name": "FundType",
            "dataType": "string",
            "sourceColumn": "FundType"
          },
          {
            "name": "FundTypeEn",
            "dataType": "string",
            "sourceColumn": "FundTypeEn"
          },
          {
            "name": "FundLink",
            "dataType": "string",
            "sourceColumn": "FundLink"
          },
          {
            "name": "TypeOfInvest",
            "dataType": "boolean",
            "sourceColumn": "TypeOfInvest"
          },
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Guarantor",
            "dataType": "string",
            "sourceColumn": "Guarantor"
          },
          {
            "name": "InitiationDate",
            "dataType": "string",
            "sourceColumn": "InitiationDate"
          },
          {
            "name": "MarketMaker",
            "dataType": "string",
            "sourceColumn": "MarketMaker"
          },
          {
            "name": "Custodian",
            "dataType": "string",
            "sourceColumn": "Custodian"
          },
          {
            "name": "InvestmentManager",
            "dataType": "string",
            "sourceColumn": "InvestmentManager"
          },
          {
            "name": "FiscalYear",
            "dataType": "string",
            "sourceColumn": "FiscalYear"
          },
          {
            "name": "FundSubType",
            "dataType": "string",
            "sourceColumn": "FundSubType"
          },
          {
            "name": "FundSubTypeEn",
            "dataType": "string",
            "sourceColumn": "FundSubTypeEn"
          },
          {
            "type": "calculated",
            "name": "ColorCode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED(DimManager[ColorCode])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFunds = Source{[Schema=\"dbo\",Item=\"DimFunds\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFunds,{\"DimManager\", \"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimTimeTable",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "description": "تاریخ میلادی",
            "sourceColumn": "Date"
          },
          {
            "name": "DateKey",
            "dataType": "string",
            "sourceColumn": "DateKey"
          },
          {
            "name": "FDATE",
            "dataType": "string",
            "sourceColumn": "FDATE"
          },
          {
            "name": "EDATE",
            "dataType": "string",
            "sourceColumn": "EDATE"
          },
          {
            "name": "EDATE1",
            "dataType": "string",
            "sourceColumn": "EDATE1"
          },
          {
            "name": "NormDate",
            "dataType": "int64",
            "sourceColumn": "NormDate"
          },
          {
            "name": "DateNumber",
            "dataType": "int64",
            "sourceColumn": "DateNumber"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "QuarterOfYear",
            "dataType": "string",
            "sourceColumn": "QuarterOfYear"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter"
          },
          {
            "name": "MonthOfYear",
            "dataType": "string",
            "sourceColumn": "MonthOfYear"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Month2",
            "dataType": "string",
            "sourceColumn": "Month2"
          },
          {
            "name": "WeekNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "WeekNumberOfYear"
          },
          {
            "name": "DayNumberOfMonth",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfMonth"
          },
          {
            "name": "DayNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfYear"
          },
          {
            "name": "DayNumberOfWeek",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfWeek"
          },
          {
            "name": "DayNameOfWeek",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek"
          },
          {
            "name": "DayNameOfWeek2",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek2"
          },
          {
            "name": "SixMonths",
            "dataType": "int64",
            "sourceColumn": "SixMonths"
          },
          {
            "name": "IsNonWorking",
            "dataType": "boolean",
            "sourceColumn": "IsNonWorking"
          },
          {
            "name": "WeekNumber",
            "dataType": "int64",
            "sourceColumn": "WeekNumber"
          },
          {
            "type": "calculated",
            "name": "FYearMonth",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "left('DimTimeTable'[DateKey], 7)"
            ]
          },
          {
            "type": "calculated",
            "name": "FYearMonthNum",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " INT(LEFT('DimTimeTable'[FYearMonth],4) & RIGHT('DimTimeTable'[FYearMonth],2))"
          },
          {
            "type": "calculated",
            "name": "IsBeforeTheDayBeforeYesterday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] <TODAY() - 2, TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeToday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] < TODAY(), TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeYesterday",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimTimeTable = Source{[Schema=\"dbo\",Item=\"DimTimeTable\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimTimeTable,{\"FactCurrency\", \"FactFunds\", \"FactShareHolders\", \"FactTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimManager",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Manager",
            "dataType": "string",
            "sourceColumn": "Manager"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "ManagerEnName",
            "dataType": "string",
            "sourceColumn": "ManagerEnName"
          },
          {
            "name": "ENShortName",
            "dataType": "string",
            "sourceColumn": "ENShortName"
          },
          {
            "name": "FinancialGroupName",
            "dataType": "string",
            "sourceColumn": "FinancialGroupName"
          },
          {
            "name": "FinancialGroupNameEN",
            "dataType": "string",
            "sourceColumn": "FinancialGroupNameEN"
          },
          {
            "name": "IsBanking",
            "dataType": "boolean",
            "sourceColumn": "IsBanking"
          },
          {
            "name": "PrivateSector",
            "dataType": "boolean",
            "sourceColumn": "PrivateSector"
          },
          {
            "name": "ColorCode",
            "dataType": "string",
            "sourceColumn": "ColorCode"
          },
          {
            "name": "FoundDate",
            "dataType": "dateTime",
            "sourceColumn": "FoundDate"
          },
          {
            "name": "IsCompetitor",
            "dataType": "boolean",
            "sourceColumn": "IsCompetitor"
          },
          {
            "type": "calculated",
            "name": "AUM",
            "dataType": "unknown",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR m = 'DimManager'[FinancialGroupName]",
              "VAR T = ",
              "FILTER(",
              "    ALL('DimManager'),",
              "    DimManager[FinancialGroupName] = m",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    SUMX(",
              "        T",
              "        , CALCULATE([AUM]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Column",
            "dataType": "unknown",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR t = CALCULATE(max('DimTimeTable'[Date]), all(), ALLSELECTED('DimTimeTable'))",
              "// 'DimManager'[Manager Shorter Name] ",
              "// & \", \"  & unichar(10240) &",
              "// FORMAT([AUM including Private Portfolios]/10^12, \"#,0#\") ",
              "return CALCULATE([AUM including Private Portfolios], 'DimTimeTable'[Date] = t)",
              "//  \" ,\" & ",
              "//  FORMAT(CALCULATE([AUM % of Total]), \"0%\") ",
              "// // & \" ,#\" & CALCULATE(rankx(ALLSELECTED('DimManager'), [AUM]))",
              "// // & \" ,\" ",
              "// // & ",
              "// // 'DimManager'[Manager Shorter Name]"
            ]
          },
          {
            "type": "calculated",
            "name": "Competitors Only",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[IsCompetitor],",
              "    \"Competitiors Only\",",
              "    BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "IsCompetitor1",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    [ManagerId] IN {124, 126, 45, 68, 31, 38},",
              "    TRUE(),",
              "    FALSE()",
              ")"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Manager Group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimManager'[IsCompetitor1], \"Competitor\",",
              "    'DimManager'[ManagerId] = 55, \"Turquoise\",",
              "    \"Other\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Short Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"س.گ.\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"س.گ.\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"ک.گ.\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"ک.گ.\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"ت.س.\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"م.س.\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"س.\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"گ.س.\")",
              "RETURN S8"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Shorter Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"\")",
              "RETURN IF(CONTAINSSTRING(S8, \"کاریزما\") , \"کاریزما\", S8)"
            ]
          },
          {
            "type": "calculated",
            "name": "Non Bank Affiliated",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    NOT('DimManager'[IsBanking]),",
              "    \"Non Bank Affiliated\",",
              "    --BLANK()",
              "    \"Bank Affiliated\"",
              ")",
              "    "
            ]
          },
          {
            "type": "calculated",
            "name": "Private",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[PrivateSector],",
              "    \"Private\",",
              "    --BLANK()",
              "    \"Non-Private\"",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimManager = Source{[Schema=\"dbo\",Item=\"DimManager\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimManager,{\"DimFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimShareHoldersProfile",
        "columns": [
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "BourseCode",
            "dataType": "string",
            "sourceColumn": "BourseCode"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "sourceColumn": "FullName"
          },
          {
            "name": "BirthDate",
            "dataType": "string",
            "sourceColumn": "BirthDate"
          },
          {
            "name": "IdNo",
            "dataType": "string",
            "sourceColumn": "IdNo"
          },
          {
            "name": "Born",
            "dataType": "string",
            "sourceColumn": "Born"
          },
          {
            "name": "NationalId",
            "dataType": "string",
            "sourceColumn": "NationalId"
          },
          {
            "name": "FatherName",
            "dataType": "string",
            "sourceColumn": "FatherName"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "KindCategory",
            "dataType": "string",
            "sourceColumn": "KindCategory"
          },
          {
            "name": "KindId",
            "dataType": "int64",
            "sourceColumn": "KindId"
          },
          {
            "name": "KindDesc",
            "dataType": "string",
            "sourceColumn": "KindDesc"
          },
          {
            "name": "IsAffiliated",
            "dataType": "boolean",
            "sourceColumn": "IsAffiliated"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimShareHoldersProfile = Source{[Schema=\"dbo\",Item=\"DimShareHoldersProfile\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimShareHoldersProfile,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimCompany",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "Company",
            "dataType": "string",
            "sourceColumn": "Company"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "IsETF",
            "dataType": "boolean",
            "sourceColumn": "IsETF"
          },
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimCompany = Source{[Schema=\"dbo\",Item=\"DimCompany\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimCompany,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactManagerAUM",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "DDate",
            "dataType": "string",
            "sourceColumn": "DDate"
          },
          {
            "name": "AUM",
            "dataType": "double",
            "sourceColumn": "AUM"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactManagerAUM = Source{[Schema=\"dbo\",Item=\"FactManagerAUM\"]}[Data]",
                "in",
                "    dbo_FactManagerAUM"
              ]
            }
          }
        ]
      },
      {
        "name": "FactFundsSplit",
        "columns": [
          {
            "name": "Id",
            "dataType": "int64",
            "sourceColumn": "Id"
          },
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "IsSplit",
            "dataType": "int64",
            "sourceColumn": "IsSplit"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "UnitIssueSubDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueSubDay"
          },
          {
            "name": "UnitIssueRedDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueRedDay"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactFundsSplit = Source{[Schema=\"dbo\",Item=\"FactFundsSplit\"]}[Data]",
                "in",
                "    dbo_FactFundsSplit"
              ]
            }
          }
        ]
      },
      {
        "name": "FactShareHoldersTrade",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "TradeSide",
            "dataType": "boolean",
            "sourceColumn": "TradeSide"
          },
          {
            "name": "ShareKindId",
            "dataType": "int64",
            "sourceColumn": "ShareKindId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Price",
            "dataType": "int64",
            "sourceColumn": "Price"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume"
          },
          {
            "name": "VolumeBalance",
            "dataType": "double",
            "sourceColumn": "VolumeBalance"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactShareHoldersTrade = Source{[Schema=\"dbo\",Item=\"FactShareHoldersTrade\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_FactShareHoldersTrade,{\"DimCompany\", \"DimShareHoldersProfile\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "1YearRank",
            "dataType": "double",
            "sourceColumn": "1YearRank"
          },
          {
            "name": "3 YearRank",
            "dataType": "double",
            "sourceColumn": "3 YearRank"
          },
          {
            "name": "5YearRank",
            "dataType": "double",
            "sourceColumn": "5YearRank"
          },
          {
            "name": "6MonthReturn",
            "dataType": "double",
            "sourceColumn": "6MonthReturn"
          },
          {
            "name": "Alpha",
            "dataType": "double",
            "sourceColumn": "Alpha"
          },
          {
            "name": "AUM",
            "dataType": "double",
            "sourceColumn": "AUM"
          },
          {
            "name": "BankDeposite",
            "dataType": "double",
            "sourceColumn": "BankDeposite"
          },
          {
            "name": "Beta",
            "dataType": "double",
            "sourceColumn": "Beta"
          },
          {
            "name": "Bonds",
            "dataType": "double",
            "sourceColumn": "Bonds"
          },
          {
            "name": "CommodityCD",
            "dataType": "double",
            "sourceColumn": "CommodityCD"
          },
          {
            "name": "DayReturn",
            "dataType": "double",
            "sourceColumn": "DayReturn"
          },
          {
            "name": "DividendDuration",
            "dataType": "double",
            "sourceColumn": "DividendDuration"
          },
          {
            "name": "Efficiency",
            "dataType": "double",
            "sourceColumn": "Efficiency"
          },
          {
            "name": "EstimatedEarningRate",
            "dataType": "double",
            "sourceColumn": "EstimatedEarningRate"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "MonthReturn",
            "dataType": "double",
            "sourceColumn": "MonthReturn"
          },
          {
            "name": "OtherAssets",
            "dataType": "double",
            "sourceColumn": "OtherAssets"
          },
          {
            "name": "OtherShares",
            "dataType": "double",
            "sourceColumn": "OtherShares"
          },
          {
            "name": "QuarterReturn",
            "dataType": "double",
            "sourceColumn": "QuarterReturn"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "Top5shares",
            "dataType": "double",
            "sourceColumn": "Top5shares"
          },
          {
            "name": "Units",
            "dataType": "double",
            "sourceColumn": "Units"
          },
          {
            "name": "UnitsRedDay",
            "dataType": "double",
            "sourceColumn": "UnitsRedDay"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubDay",
            "dataType": "double",
            "sourceColumn": "UnitsSubDay"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "WeekReturn",
            "dataType": "double",
            "sourceColumn": "WeekReturn"
          },
          {
            "name": "YearReturn",
            "dataType": "double",
            "sourceColumn": "YearReturn"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"-- Create a temporary table with dynamic SQL#(lf)DECLARE @columns NVARCHAR(MAX), @query NVARCHAR(MAX);#(lf)#(lf)-- Get the distinct values of EnName to use as columns in PIVOT#(lf)SELECT @columns = STRING_AGG(QUOTENAME(EnName), ',')#(lf)FROM (SELECT DISTINCT EnName FROM [DW].[dbo].[DimFundAssets]) AS DistinctEnNames;#(lf)#(lf)-- Build the dynamic SQL query for PIVOT#(lf)SET @query = N'#(lf)SELECT *#(lf)FROM (#(lf)    SELECT#(lf)        A.[FundId],#(lf)        A.[Date],#(lf)        A.[FundDataTypeId],#(lf)        B.[EnName],#(lf)        A.[Value]#(lf)    FROM#(lf)        [DW].[dbo].[FactFunds] A#(lf)    INNER JOIN#(lf)        [DW].[dbo].[DimFundAssets] B ON A.FundAssetId = B.FundAssetId#(lf)    WHERE#(lf)        A.[FundDataTypeId] = 4#(lf)) AS SourceTable#(lf)PIVOT (#(lf)    MAX(Value) FOR EnName IN (' + @columns + ')#(lf)) AS PivotTable;';#(lf)#(lf)-- Execute the dynamic SQL query#(lf)EXEC sp_executesql @query;#(lf)\"])",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "1 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[1YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[1YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "3 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[3 YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[3 YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "5 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[5YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[5YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          }
        ]
      },
      {
        "name": "FactFunds (Asset Allocation)",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"SELECT#(lf)    A.[FundId],#(lf)    A.[Date],#(lf)    A.[FundDataTypeId],#(lf)    A.[FundAssetId],#(lf)    A.[Value]#(lf)FROM#(lf)    [DW].[dbo].[FactFunds] A#(lf)WHERE#(lf)    A.[FundDataTypeId] = 2;\"])",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Fipiran Measures",
        "columns": [
          {
            "name": "Column1",
            "dataType": "string",
            "sourceColumn": "Column1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% 6 Month Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[6MonthReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[6MonthReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[6MonthReturn])), 'FactFunds'[6MonthReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% 6 Month Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[6MonthReturn]),",
              "                'FactFunds'[6MonthReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[6MonthReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Annual Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[YearReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0)",
              "RETURN r "
            ]
          },
          {
            "name": "% Annual Return (Average) old",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[YearReturn]),",
              "                'FactFunds'[YearReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[YearReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable'), not(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0",
              ")",
              "",
              ""
            ]
          }
        ]
      },
      {
        "name": "@TopX",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {5, 10, 20, COUNTROWS('DimFunds')}"
            }
          }
        ],
        "measures": [
          {
            "name": "@TopX",
            "expression": " SELECTEDVALUE('@TopX'[Value])"
          }
        ]
      },
      {
        "name": "@Include Private Potfolios",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Include Private Portfos",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Value],",
              "    \"Include Private Portfos\",",
              "    BLANK()",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {True(), FALSE()}"
            }
          }
        ],
        "measures": [
          {
            "name": "AUM by parameter",
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Include Private Potfolios],",
              "    [AUM including Private Portfolios],",
              "    [AUM]",
              ")"
            ]
          },
          {
            "name": "Include Private Potfolios",
            "expression": " SELECTEDVALUE('@Include Private Potfolios'[Value])"
          }
        ]
      },
      {
        "name": "@Period",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "@Period",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 6, 12}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Period Value",
            "expression": " SELECTEDVALUE('@Period'[@Period])"
          },
          {
            "name": "% Period Return Weighted",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = DIVIDE(",
              "CALCULATE(",
              "    SUMX(",
              "        FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0)),",
              "        [AUM] * [Period Return])),",
              "        CALCULATE([AUM], FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0))))",
              "RETURN r "
            ]
          },
          {
            "name": "Period Return",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    '@Period'[@Period Value] = 1, [% Month Return],",
              "    '@Period'[@Period Value] = 3, [% Quarter Return],",
              "    '@Period'[@Period Value] = 6, [% 6 Month Return],",
              "    '@Period'[@Period Value] = 12, [% Annual Return],",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "@Ranking",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 5}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Ranking",
            "expression": " SELECTEDVALUE('@Ranking'[Value])"
          },
          {
            "name": "Average Ranking",
            "expression": [
              " ",
              "AVERAGEX(",
              "    'DimManager',",
              "    [Ranking]",
              ")"
            ]
          },
          {
            "name": "Ranking",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    [@Ranking] = 1, [1 Year Rank],",
              "    [@Ranking] = 3, [3 Year Rank],",
              "    [@Ranking] = 5, [5 Year Rank],",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Clients Measures",
        "columns": [
          {
            "name": "Clients Measures",
            "dataType": "string",
            "sourceColumn": "Clients Measures"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Client Assets",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactShareHoldersTrade'[Value])) ",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactShareHoldersTrade'[Value]),'DimTimeTable'[Date] = MaxDate)",
              "RETURN NAV"
            ]
          },
          {
            "name": "Net Subscription",
            "expression": [
              " ",
              "[Subscriptions (Rivarz)] - [Redemptions (Rivarz)]"
            ]
          },
          {
            "name": "Net Unit Subscriptions",
            "expression": [
              " ",
              "[Units Subscriptions (Rivarz)] - [Units Redemptions (Rivarz)]"
            ]
          },
          {
            "name": "Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ]
          },
          {
            "name": "Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ]
          },
          {
            "name": "Units Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    -SUM('FactShareHoldersTrade'[Volume]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ]
          },
          {
            "name": "Units Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Volume]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ]
          }
        ]
      },
      {
        "name": "Competitors",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Competitors",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, 1, 1)"
            }
          }
        ],
        "measures": [
          {
            "name": "Competitors Value",
            "expression": " SELECTEDVALUE('Competitors'[Competitors], 0)"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "653d436e-826a-4021-a18c-5559f14b41a0",
        "fromTable": "DimFunds",
        "fromColumn": "ManagerId",
        "toTable": "DimManager",
        "toColumn": "ManagerId"
      },
      {
        "name": "d619a5ef-c1df-4cb9-818d-eafc003123f9",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "ShareHolderId",
        "toTable": "DimShareHoldersProfile",
        "toColumn": "ShareHolderId"
      },
      {
        "name": "713095e2-a744-4ca0-9886-cc42fba986cb",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "CompanyId",
        "toTable": "DimCompany",
        "toColumn": "CompanyId"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}