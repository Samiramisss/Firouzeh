{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/192 168 220 10;DW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.220.10",
            "database": "DW"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.220.10;DW",
          "Username": "reportuser",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "DimFundAssets",
        "columns": [
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "FundAsset",
            "dataType": "string",
            "sourceColumn": "FundAsset"
          },
          {
            "name": "EnName",
            "dataType": "string",
            "sourceColumn": "EnName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundAssets = Source{[Schema=\"dbo\",Item=\"DimFundAssets\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundAssets,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFundDataTypes",
        "columns": [
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundDataType",
            "dataType": "string",
            "sourceColumn": "FundDataType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundDataTypes = Source{[Schema=\"dbo\",Item=\"DimFundDataTypes\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundDataTypes,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "FundName",
            "dataType": "string",
            "sourceColumn": "FundName"
          },
          {
            "name": "FundEnName",
            "dataType": "string",
            "sourceColumn": "FundEnName"
          },
          {
            "name": "FundShortName",
            "dataType": "string",
            "sourceColumn": "FundShortName"
          },
          {
            "name": "FundEnShortName",
            "dataType": "string",
            "sourceColumn": "FundEnShortName"
          },
          {
            "name": "FundType",
            "dataType": "string",
            "sourceColumn": "FundType"
          },
          {
            "name": "FundTypeEn",
            "dataType": "string",
            "sourceColumn": "FundTypeEn"
          },
          {
            "name": "FundLink",
            "dataType": "string",
            "sourceColumn": "FundLink",
            "dataCategory": "WebUrl"
          },
          {
            "name": "TypeOfInvest",
            "dataType": "boolean",
            "sourceColumn": "TypeOfInvest"
          },
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Guarantor",
            "dataType": "string",
            "sourceColumn": "Guarantor"
          },
          {
            "name": "InitiationDate",
            "dataType": "string",
            "sourceColumn": "InitiationDate"
          },
          {
            "name": "MarketMaker",
            "dataType": "string",
            "sourceColumn": "MarketMaker"
          },
          {
            "name": "Custodian",
            "dataType": "string",
            "sourceColumn": "Custodian"
          },
          {
            "name": "InvestmentManager",
            "dataType": "string",
            "sourceColumn": "InvestmentManager"
          },
          {
            "name": "FiscalYear",
            "dataType": "string",
            "sourceColumn": "FiscalYear"
          },
          {
            "name": "FundSubType",
            "dataType": "string",
            "sourceColumn": "FundSubType"
          },
          {
            "name": "FundSubTypeEn",
            "dataType": "string",
            "sourceColumn": "FundSubTypeEn"
          },
          {
            "type": "calculated",
            "name": "ColorCode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED(DimManager[ColorCode])"
          },
          {
            "type": "calculated",
            "name": "AUM",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "CALCULATE(",
              "    [AUM],",
              "    'DimTimeTable'[IsBeforeTheDayBeforeYesterday], NOT DimFunds[FundType] in {\"اختصاصی بازارگردانی\", \"جسورانه\", \"خصوصی\", \"پروژه‌ای\", \"املاک و مستغلات\"}",
              ")"
            ]
          },
          {
            "name": "InstrumentId",
            "dataType": "double",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "BourseCode",
            "dataType": "string",
            "sourceColumn": "BourseCode"
          },
          {
            "type": "calculated",
            "name": "ETF",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(",
              "    'DimFunds'[TypeOfInvest],",
              "    \"ETF\",",
              "    \"Non-ETF\"",
              ")"
            ]
          },
          {
            "name": "DividendIntervalPeriod",
            "dataType": "int64",
            "sourceColumn": "DividendIntervalPeriod"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFunds = Source{[Schema=\"dbo\",Item=\"DimFunds\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFunds,{\"DimManager\", \"FactFunds\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",null,0,Replacer.ReplaceValue,{\"InstrumentId\"})",
                "in",
                "    #\"Replaced Value\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimTimeTable",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "description": "تاریخ میلادی",
            "isKey": true,
            "sourceColumn": "Date"
          },
          {
            "name": "DateKey",
            "dataType": "string",
            "sourceColumn": "DateKey"
          },
          {
            "name": "FDATE",
            "dataType": "string",
            "sourceColumn": "FDATE"
          },
          {
            "name": "EDATE",
            "dataType": "string",
            "sourceColumn": "EDATE"
          },
          {
            "name": "EDATE1",
            "dataType": "string",
            "sourceColumn": "EDATE1"
          },
          {
            "name": "NormDate",
            "dataType": "int64",
            "sourceColumn": "NormDate"
          },
          {
            "name": "DateNumber",
            "dataType": "int64",
            "sourceColumn": "DateNumber"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "QuarterOfYear",
            "dataType": "string",
            "sourceColumn": "QuarterOfYear"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter"
          },
          {
            "name": "MonthOfYear",
            "dataType": "string",
            "sourceColumn": "MonthOfYear"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Month2",
            "dataType": "string",
            "sourceColumn": "Month2",
            "sortByColumn": "Month"
          },
          {
            "name": "WeekNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "WeekNumberOfYear"
          },
          {
            "name": "DayNumberOfMonth",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfMonth"
          },
          {
            "name": "DayNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfYear"
          },
          {
            "name": "DayNumberOfWeek",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfWeek"
          },
          {
            "name": "DayNameOfWeek",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek"
          },
          {
            "name": "DayNameOfWeek2",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek2"
          },
          {
            "name": "SixMonths",
            "dataType": "int64",
            "sourceColumn": "SixMonths"
          },
          {
            "name": "IsNonWorking",
            "dataType": "boolean",
            "sourceColumn": "IsNonWorking"
          },
          {
            "name": "WeekNumber",
            "dataType": "int64",
            "sourceColumn": "WeekNumber"
          },
          {
            "type": "calculated",
            "name": "FYearMonth",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "left('DimTimeTable'[DateKey], 7)"
            ]
          },
          {
            "type": "calculated",
            "name": "FYearMonthNum",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " INT(LEFT('DimTimeTable'[FYearMonth],4) & RIGHT('DimTimeTable'[FYearMonth],2))"
          },
          {
            "type": "calculated",
            "name": "IsBeforeTheDayBeforeYesterday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] <TODAY() - 2, TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeToday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] < TODAY(), TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeYesterday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] <TODAY() - 1, TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "GYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " YEAR('DimTimeTable'[Date])"
          },
          {
            "type": "calculated",
            "name": "GMonth",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " MONTH('DimTimeTable'[Date])"
          },
          {
            "type": "calculated",
            "name": "GDay",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " DAY('DimTimeTable'[Date])"
          },
          {
            "type": "calculated",
            "name": "Slicer Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR LastTradeDay = MAX('FactTradeDetails'[Date])",
              "RETURN ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimTimeTable'[Date] = LastTradeDay, \"Last Day\",",
              "    'DimTimeTable'[Date] > LastTradeDay, BLANK(),",
              "    'DimTimeTable'[DateKey]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Slicer Date (TheDateBeforeYesterday)",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR LastTradeDay = CALCULATE(MAX('FactTradeDetails'[Date]), FILTER('DimTimeTable', 'DimTimeTable'[IsBeforeTheDayBeforeYesterday]))",
              "",
              "RETURN ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimTimeTable'[Date] = LastTradeDay, \"Last Day\",",
              "    'DimTimeTable'[Date] > LastTradeDay, BLANK(),",
              "    'DimTimeTable'[DateKey]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "GQuarter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " FORMAT ( 'DimTimeTable'[Date], \"q\")"
          },
          {
            "type": "calculated",
            "name": "IsTodayOrBefore",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] <= TODAY(), TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "GMonthName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "FORMAT('DimTimeTable'[Date], \"MMM\")"
            ],
            "sortByColumn": "GMonth"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimTimeTable = Source{[Schema=\"dbo\",Item=\"DimTimeTable\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimTimeTable,{\"FactCurrency\", \"FactFunds\", \"FactShareHolders\", \"FactTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "levels": [
              {
                "name": "GYear",
                "ordinal": 0,
                "column": "GYear"
              },
              {
                "name": "GMonth",
                "ordinal": 2,
                "column": "GMonth"
              },
              {
                "name": "GDay",
                "ordinal": 3,
                "column": "GDay"
              },
              {
                "name": "GQuarter",
                "ordinal": 1,
                "column": "GQuarter"
              }
            ]
          }
        ]
      },
      {
        "name": "DimManager",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Manager",
            "dataType": "string",
            "sourceColumn": "Manager"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "ManagerEnName",
            "dataType": "string",
            "sourceColumn": "ManagerEnName"
          },
          {
            "name": "ENShortName",
            "dataType": "string",
            "sourceColumn": "ENShortName"
          },
          {
            "name": "FinancialGroupName",
            "dataType": "string",
            "sourceColumn": "FinancialGroupName"
          },
          {
            "name": "FinancialGroupNameEN",
            "dataType": "string",
            "sourceColumn": "FinancialGroupNameEN"
          },
          {
            "name": "IsBanking",
            "dataType": "boolean",
            "sourceColumn": "IsBanking"
          },
          {
            "name": "PrivateSector",
            "dataType": "boolean",
            "sourceColumn": "PrivateSector"
          },
          {
            "name": "ColorCode",
            "dataType": "string",
            "sourceColumn": "ColorCode"
          },
          {
            "name": "FoundDate",
            "dataType": "dateTime",
            "sourceColumn": "FoundDate"
          },
          {
            "name": "IsCompetitor",
            "dataType": "boolean",
            "sourceColumn": "IsCompetitor"
          },
          {
            "type": "calculated",
            "name": "Column",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR t = CALCULATE(max('DimTimeTable'[Date]), all(), ALLSELECTED('DimTimeTable'))",
              "// 'DimManager'[Manager Shorter Name] ",
              "// & \", \"  & unichar(10240) &",
              "// FORMAT([AUM including Private Portfolios]/10^12, \"#,0#\") ",
              "return CALCULATE([AUM including Private Portfolios], 'DimTimeTable'[Date] = t)",
              "//  \" ,\" & ",
              "//  FORMAT(CALCULATE([AUM % of Total]), \"0%\") ",
              "// // & \" ,#\" & CALCULATE(rankx(ALLSELECTED('DimManager'), [AUM]))",
              "// // & \" ,\" ",
              "// // & ",
              "// // 'DimManager'[Manager Shorter Name]"
            ]
          },
          {
            "type": "calculated",
            "name": "Competitors Only",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[IsCompetitor],",
              "    \"Competitiors Only\",",
              "    BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "IsCompetitor1",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    [ManagerId] IN {124, 126, 45, 68, 31, 38},",
              "    TRUE(),",
              "    FALSE()",
              ")"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Manager Group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimManager'[IsCompetitor1], \"Competitor\",",
              "    'DimManager'[ManagerId] = 55, \"Turquoise\",",
              "    \"Other\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Short Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"س.گ.\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"س.گ.\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"ک.گ.\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"ک.گ.\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"ت.س.\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"م.س.\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"س.\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"گ.س.\")",
              "RETURN S8"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Shorter Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"\")",
              "RETURN IF(CONTAINSSTRING(S8, \"کاریزما\") , \"کاریزما\", S8)"
            ]
          },
          {
            "type": "calculated",
            "name": "Non Bank Affiliated",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    NOT('DimManager'[IsBanking]),",
              "    \"Non Bank Affiliated\",",
              "    --BLANK()",
              "    \"Bank Affiliated\"",
              ")",
              "    "
            ]
          },
          {
            "type": "calculated",
            "name": "Private",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[PrivateSector],",
              "    \"Private\",",
              "    --BLANK()",
              "    \"Non-Private\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "AUM",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR m = 'DimManager'[FinancialGroupName]",
              "VAR T = ",
              "FILTER(",
              "    ALL('DimManager'),",
              "    DimManager[FinancialGroupName] = m",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    SUMX(",
              "        T",
              "        , CALCULATE([AUM]",
              "        )",
              "    )",
              "    , 'DimTimeTable'[IsBeforeTheDayBeforeYesterday], NOT DimFunds[FundType] in {\"اختصاصی بازارگردانی\", \"جسورانه\", \"خصوصی\", \"پروژه‌ای\", \"املاک و مستغلات\"}",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimManager = Source{[Schema=\"dbo\",Item=\"DimManager\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimManager,{\"DimFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimShareHoldersProfile",
        "columns": [
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "BourseCode",
            "dataType": "string",
            "sourceColumn": "BourseCode"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "sourceColumn": "FullName"
          },
          {
            "name": "BirthDate",
            "dataType": "string",
            "sourceColumn": "BirthDate"
          },
          {
            "name": "IdNo",
            "dataType": "string",
            "sourceColumn": "IdNo"
          },
          {
            "name": "Born",
            "dataType": "string",
            "sourceColumn": "Born"
          },
          {
            "name": "NationalId",
            "dataType": "string",
            "sourceColumn": "NationalId"
          },
          {
            "name": "FatherName",
            "dataType": "string",
            "sourceColumn": "FatherName"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "KindCategory",
            "dataType": "string",
            "sourceColumn": "KindCategory"
          },
          {
            "name": "KindId",
            "dataType": "int64",
            "sourceColumn": "KindId"
          },
          {
            "name": "KindDesc",
            "dataType": "string",
            "sourceColumn": "KindDesc"
          },
          {
            "name": "IsAffiliated",
            "dataType": "boolean",
            "sourceColumn": "IsAffiliated"
          },
          {
            "type": "calculated",
            "name": "Affiliated",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimShareHoldersProfile'[IsAffiliated], \"Affiliated\",",
              "    \"Non-Affiliated\"",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimShareHoldersProfile = Source{[Schema=\"dbo\",Item=\"DimShareHoldersProfile\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimShareHoldersProfile,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimCompany",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "Company",
            "dataType": "string",
            "sourceColumn": "Company"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "IsETF",
            "dataType": "boolean",
            "sourceColumn": "IsETF"
          },
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimCompany = Source{[Schema=\"dbo\",Item=\"DimCompany\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimCompany,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactManagerAUM",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "DDate",
            "dataType": "string",
            "sourceColumn": "DDate"
          },
          {
            "name": "AUM2",
            "dataType": "double",
            "sourceColumn": "AUM"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactManagerAUM = Source{[Schema=\"dbo\",Item=\"FactManagerAUM\"]}[Data]",
                "in",
                "    dbo_FactManagerAUM"
              ]
            }
          }
        ]
      },
      {
        "name": "FactFundsSplit",
        "columns": [
          {
            "name": "Id",
            "dataType": "int64",
            "sourceColumn": "Id"
          },
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "IsSplit",
            "dataType": "int64",
            "sourceColumn": "IsSplit"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "UnitIssueSubDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueSubDay"
          },
          {
            "name": "UnitIssueRedDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueRedDay"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactFundsSplit = Source{[Schema=\"dbo\",Item=\"FactFundsSplit\"]}[Data]",
                "in",
                "    dbo_FactFundsSplit"
              ]
            }
          }
        ]
      },
      {
        "name": "FactShareHoldersTrade",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "TradeSide",
            "dataType": "boolean",
            "sourceColumn": "TradeSide"
          },
          {
            "name": "ShareKindId",
            "dataType": "int64",
            "sourceColumn": "ShareKindId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Price",
            "dataType": "int64",
            "sourceColumn": "Price"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume"
          },
          {
            "name": "VolumeBalance",
            "dataType": "double",
            "sourceColumn": "VolumeBalance"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          },
          {
            "type": "calculated",
            "name": "Trade Side Desc",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('FactShareHoldersTrade'[TradeSide], \"خرید\", \"فروش\")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactShareHoldersTrade = Source{[Schema=\"dbo\",Item=\"FactShareHoldersTrade\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_FactShareHoldersTrade,{\"DimCompany\", \"DimShareHoldersProfile\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "1YearRank",
            "dataType": "double",
            "sourceColumn": "1YearRank"
          },
          {
            "name": "3 YearRank",
            "dataType": "double",
            "sourceColumn": "3 YearRank"
          },
          {
            "name": "5YearRank",
            "dataType": "double",
            "sourceColumn": "5YearRank"
          },
          {
            "name": "6MonthReturn",
            "dataType": "double",
            "sourceColumn": "6MonthReturn"
          },
          {
            "name": "Alpha",
            "dataType": "double",
            "sourceColumn": "Alpha"
          },
          {
            "name": "AUM2",
            "dataType": "int64",
            "sourceColumn": "AUM"
          },
          {
            "name": "BankDeposite",
            "dataType": "double",
            "sourceColumn": "BankDeposite"
          },
          {
            "name": "Beta",
            "dataType": "double",
            "sourceColumn": "Beta"
          },
          {
            "name": "Bonds",
            "dataType": "double",
            "sourceColumn": "Bonds"
          },
          {
            "name": "CommodityCD",
            "dataType": "double",
            "sourceColumn": "CommodityCD"
          },
          {
            "name": "DayReturn",
            "dataType": "double",
            "sourceColumn": "DayReturn"
          },
          {
            "name": "DividendDuration",
            "dataType": "double",
            "sourceColumn": "DividendDuration"
          },
          {
            "name": "Efficiency",
            "dataType": "double",
            "sourceColumn": "Efficiency"
          },
          {
            "name": "EstimatedEarningRate",
            "dataType": "double",
            "sourceColumn": "EstimatedEarningRate"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "MonthReturn",
            "dataType": "double",
            "sourceColumn": "MonthReturn"
          },
          {
            "name": "OtherAssets",
            "dataType": "double",
            "sourceColumn": "OtherAssets"
          },
          {
            "name": "OtherShares",
            "dataType": "double",
            "sourceColumn": "OtherShares"
          },
          {
            "name": "QuarterReturn",
            "dataType": "double",
            "sourceColumn": "QuarterReturn"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "Top5shares",
            "dataType": "double",
            "sourceColumn": "Top5shares"
          },
          {
            "name": "Units",
            "dataType": "double",
            "sourceColumn": "Units"
          },
          {
            "name": "UnitsRedDay",
            "dataType": "double",
            "sourceColumn": "UnitsRedDay"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubDay",
            "dataType": "double",
            "sourceColumn": "UnitsSubDay"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "WeekReturn",
            "dataType": "double",
            "sourceColumn": "WeekReturn"
          },
          {
            "name": "YearReturn",
            "dataType": "double",
            "sourceColumn": "YearReturn"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"-- Create a temporary table with dynamic SQL#(lf)DECLARE @columns NVARCHAR(MAX), @query NVARCHAR(MAX);#(lf)#(lf)-- Get the distinct values of EnName to use as columns in PIVOT#(lf)SELECT @columns = STRING_AGG(QUOTENAME(EnName), ',')#(lf)FROM (SELECT DISTINCT EnName FROM [DW].[dbo].[DimFundAssets]) AS DistinctEnNames;#(lf)#(lf)-- Build the dynamic SQL query for PIVOT#(lf)SET @query = N'#(lf)SELECT *#(lf)FROM (#(lf)    SELECT#(lf)        A.[FundId],#(lf)        A.[Date],#(lf)        A.[FundDataTypeId],#(lf)        B.[EnName],#(lf)        A.[Value]#(lf)    FROM#(lf)        [DW].[dbo].[FactFunds] A#(lf)    INNER JOIN#(lf)        [DW].[dbo].[DimFundAssets] B ON A.FundAssetId = B.FundAssetId#(lf)    WHERE#(lf)        A.[FundDataTypeId] = 4#(lf)) AS SourceTable#(lf)PIVOT (#(lf)    MAX(Value) FOR EnName IN (' + @columns + ')#(lf)) AS PivotTable;';#(lf)#(lf)-- Execute the dynamic SQL query#(lf)EXEC sp_executesql @query;#(lf)\"])",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "1 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[1YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[1YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "3 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[3 YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[3 YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "5 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[5YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[5YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "AUM Old",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactFunds'[AUM2]),'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "RETURN NAV"
            ],
            "displayFolder": "AUM"
          }
        ]
      },
      {
        "name": "FactFunds (Asset Allocation)",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"SELECT#(lf)    A.[FundId],#(lf)    A.[Date],#(lf)    A.[FundDataTypeId],#(lf)    A.[FundAssetId],#(lf)    A.[Value]#(lf)FROM#(lf)    [DW].[dbo].[FactFunds] A#(lf)WHERE#(lf)    A.[FundDataTypeId] = 2;\"])",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Fipiran Measures",
        "columns": [
          {
            "name": "Column1",
            "dataType": "string",
            "sourceColumn": "Column1"
          },
          {
            "type": "calculated",
            "name": "Calculated Column 1",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " 1",
              ""
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% 6 Month Return",
            "expression": [
              "",
              "VAR MaxDate =",
              "    MAX ( DimTimeTable[Date] ) ",
              "VAR r =",
              "    CALCULATE (",
              "        AVERAGE ( 'FactFunds'[6MonthReturn] ),",
              "        'DimTimeTable'[Date] = MaxDate,",
              "        NOT ( ISBLANK ( 'FactFunds'[6MonthReturn] ) ),",
              "        'FactFunds'[6MonthReturn] <> 0",
              "    )",
              "RETURN",
              "    r"
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "% 6 Month Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[6MonthReturn]),",
              "                'FactFunds'[6MonthReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[6MonthReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              ""
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "% Annual Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[YearReturn]), 'DimTimeTable'[Date] = MaxDate,  NOT(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0)",
              "RETURN r "
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "% Annual Return (Average) old",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[YearReturn]),",
              "                'FactFunds'[YearReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[YearReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable'), not(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0",
              ")",
              "",
              ""
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "AUM",
            "expression": [
              " ",
              "SUMX(",
              "    VALUES ( 'DimFunds'[FundId] ),",
              "    VAR LastDay = ",
              "    CALCULATE(",
              "        LASTNONBLANK(",
              "            DATESBETWEEN(",
              "                'DimTimeTable'[Date],",
              "                BLANK(),",
              "                CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "            ),",
              "            CALCULATE(COUNT('FactFunds'[AUM2]))",
              "        )",
              "    )",
              "    RETURN",
              "    CALCULATE (SELECTEDVALUE( 'FactFunds'[AUM2] ), 'DimTimeTable'[Date] = LastDay )",
              ")",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "AUM"
          },
          {
            "name": "% Annual Return Weighted",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    SUMX(",
              "        'DimFunds',",
              "        [AUM] * [% Annual Return]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'FactFunds'[FundDataTypeId] = 4",
              ") / ",
              "CALCULATE([AUM], 'DimTimeTable'[Date] = MaxDate, ",
              "    'FactFunds'[FundDataTypeId] = 4)",
              "RETURN r "
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "% Average 6 Month Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% 6 Month Return]),",
              "                [% 6 Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% 6 Month Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ],
            "displayFolder": "Returns"
          },
          {
            "name": "% Average 6 Month Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% 6 Month Return]),",
              "                [% 6 Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% 6 Month Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average 6 Month Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average 6 Month Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([6 Month Rank + Firouzeh Funds])     <= [@TopX])",
              ")",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Average Annual Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType], 'DimFunds'[FundName])",
              "    ",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Annual Return]),",
              "                [% Annual Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Annual Return]",
              "        )",
              "    )",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundEnName])",
              "//     --, ALLSELECTED('DimManager')",
              "//  -- , '@TopX'[Value] = 1000",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Annual Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType], 'DimFunds'[FundName])",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Annual Return]),",
              "                [% Annual Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Annual Return]",
              "        )",
              "    )",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundEnName])",
              "//     --, ALLSELECTED('DimManager')",
              "//  -- , '@TopX'[Value] = 1000",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Annual Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Annual Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Annual Rank + Firouzeh Funds])     <= [@TopX])",
              ")",
              ""
            ]
          },
          {
            "name": "% Average Month Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Month Return]),",
              "                [% Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Month Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Month Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Month Return]),",
              "                [% Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Month Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Month Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Month Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Month Rank + Firouzeh Funds]) <= [@TopX])",
              ")",
              ""
            ]
          },
          {
            "name": "% Average Quarter Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Quarter Return]),",
              "                [% Quarter Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Quarter Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Quarter Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Quarter Return]),",
              "                [% Quarter Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Quarter Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Quarter Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Quarter Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Quarter Rank + Firouzeh Funds])     <= [@TopX])",
              ")",
              ""
            ]
          },
          {
            "name": "% Day Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[DayReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[DayReturn]), 'FactFunds'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "RETURN r"
            ]
          },
          {
            "name": "% Day Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    // AVERAGE('FactFunds'[DayReturn]),",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[DayReturn]),",
              "                'FactFunds'[DayReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[DayReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Fund Type AUM Ratio",
            "expression": [
              " ",
              "[AUM]/CALCULATE([AUM], ALL('DimFunds'[FundType]))"
            ]
          },
          {
            "name": "% Month Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[MonthReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[MonthReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[MonthReturn])), 'FactFunds'[MonthReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% Month Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[MonthReturn]),",
              "                'FactFunds'[MonthReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[MonthReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              ""
            ]
          },
          {
            "name": "% Net Subscription Value",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "RETURN ",
              "DIVIDE(",
              "    [Net Subscription Value], ",
              "    CALCULATE([AUM], 'DimTimeTable'[Date] = BaseDate), ",
              "    BLANK()",
              ") "
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Subscriptions"
          },
          {
            "name": "% Quarter Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[QuarterReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[QuarterReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[QuarterReturn])), 'FactFunds'[QuarterReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% Quarter Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[QuarterReturn]),",
              "                'FactFunds'[QuarterReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[QuarterReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Return on NAV",
            "expression": [
              " ",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "// added filter:",
              "// FactFunds'[FundId] = Fund",
              "// to all Calculate functions so that if a fund and an index are selected in FactReturns, it would calculate funds performance only",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFundsSplit'[RedemptionPrice]))",
              "    )",
              ")",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactFundsSplit'[RedemptionPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFundsSplit'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFundsSplit'[RedemptionPrice]), 'DimTimeTable'[Date] = MaxDate)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Return on Statistical NAV",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[StatisticalPrice]))",
              "    )",
              ")",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[StatisticalPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[StatisticalPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[StatisticalPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ]
          },
          {
            "name": "6 Month Rank",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "",
              "RETURN ",
              "IF(ISBLANK([% 6 Month Return]),",
              "    BLANK(),",
              "    CALCULATE(",
              "        RANKX(",
              "            FILTER(",
              "                ALL('DimFunds'),",
              "                NOT(ISBLANK([% 6 Month Return])) && 'DimFunds'[FundType] = CurrentFundType  ",
              "                && 'DimFunds'[AUM] <= MaxAUM && 'DimFunds'[AUM] >= MinAUM",
              "            )",
              "            , [% 6 Month Return]",
              "            ,",
              "            , DESC",
              "            , Skip",
              "        )",
              "    )    ",
              ")"
            ]
          },
          {
            "name": "6 Month Rank + Firouzeh Funds",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% 6 Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                --FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% 6 Month Return])))",
              "                FILTER(ALLSELECTED('DimFunds'), NOT(ISBLANK([% 6 Month Return])))",
              "                , [% 6 Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Annual Rank",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "",
              "RETURN ",
              "IF(ISBLANK([% Annual Return]),",
              "    BLANK(),",
              "    CALCULATE(",
              "        RANKX(",
              "            FILTER(",
              "                ALL('DimFunds'),",
              "                NOT(ISBLANK([% Annual Return])) && 'DimFunds'[FundType] = CurrentFundType  ",
              "                && 'DimFunds'[AUM] <= MaxAUM && 'DimFunds'[AUM] >= MinAUM",
              "            )",
              "            , [% Annual Return]",
              "            ,",
              "            , DESC",
              "            , Skip",
              "        )",
              "    )    ",
              ")"
            ]
          },
          {
            "name": "Annual Rank + Firouzeh Funds",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Annual Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                --FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Annual Return])))",
              "                FILTER(ALLSELECTED('DimFunds'), NOT(ISBLANK([% Annual Return])))",
              "                , [% Annual Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "annual rank new",
            "expression": [
              " ",
              "VAR T =",
              "    calculateTable(",
              "        DimFunds,",
              "        AllSelected('DimFunds')",
              "    )",
              "VAR rnk = ",
              "    RANKX(",
              "        T,",
              "        [% Annual Return],",
              "        ,",
              "        DESC,",
              "        Dense",
              "    )",
              "RETURN",
              "rnk"
            ]
          },
          {
            "name": "AUM (Currency)",
            "expression": [
              " ",
              "[AUM]"
            ],
            "formatString": "\"IRR\" #,0.00;-\"IRR\" #,0.00;\"IRR\" #,0.00",
            "displayFolder": "AUM",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4096\" DisplayName=\"IRR Mazanderani (Iran)\" Symbol=\"IRR\" PositivePattern=\"2\" NegativePattern=\"9\" /></Format>"
              }
            ]
          },
          {
            "name": "AUM % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM],",
              "    CALCULATE([AUM], ALLSELECTED('DimFunds'))",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "AUM"
          },
          {
            "name": "AUM by Asset Class",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds (Asset Allocation)'[Value])) ",
              "        )",
              ")",
              "",
              "VAR AUM =",
              "CALCULATE(SUMX('FactFunds (Asset Allocation)',[AUM] * 'FactFunds (Asset Allocation)'[Value]/100),'DimTimeTable'[Date] = MaxDate)",
              "RETURN AUM"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM by Asset Class % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM by Asset Class],",
              "    CALCULATE([AUM by Asset Class], ALLSELECTED('DimFundAssets'))",
              ")"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM including Private Portfolios",
            "expression": [
              " ",
              "[AUM] + [AUM of Private Porfolios]"
            ],
            "formatString": "#,0",
            "displayFolder": "AUM"
          },
          {
            "name": "AUM Including Private Portfolios % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM],",
              "    CALCULATE([AUM including Private Portfolios], ALLSELECTED('DimFunds'))",
              ")"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM Including Private Portfolios Rank (Selected Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "         ALLSELECTED('DimManager'[FinancialGroupName]),",
              "        [AUM including Private Portfolios]",
              "    )"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM Line",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE((FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "RETURN",
              "IF(",
              "    OR(",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = BaseDate,",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = EndDate",
              "    ),",
              "    [AUM],",
              "    BLANK()",
              ")"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM New 3",
            "expression": [
              " ",
              "SUMX(",
              "    VALUES('FactFunds'[FundId]),",
              "    VAR LastDay = CALCULATE(MAX('FactFunds'[Date]), NOT(ISBLANK('FactFunds'[AUM2])))",
              "    RETURN CALCULATE(",
              "        SUM('FactFunds'[AUM2]),",
              " 'FactFunds'[Date] = LastDay",
              "",
              ")",
              ")"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM of Private Porfolios",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNTROWS('FactManagerAUM'))",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactManagerAUM'[AUM2]),'DimTimeTable'[Date] = MaxDate)",
              "RETURN NAV"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM Rank (All Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "        ALL('DimManager'[FinancialGroupName]),",
              "        [AUM including Private Portfolios]",
              "    )"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "AUM Rank (Selected Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "         ALLSELECTED('DimManager'[FinancialGroupName]),",
              "        [AUM]",
              "    )"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "Average 6 Month Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% 6 Month Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average All Fund AUM",
            "expression": [
              " ",
              "CALCULATE([AUM] / CALCULATE(count('DimFunds'[FundId])), ALL('DimManager'), ALLEXCEPT('DimFunds','DimFunds'[FundType], 'DimFunds'[FundTypeEn]))"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "Average All Return",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [Return]),",
              "    ALL('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Average Fund AUM",
            "expression": [
              " ",
              "[AUM] / CALCULATE(count('DimFunds'[FundId]))"
            ]
          },
          {
            "name": "Average Fund AUM per Unit Holde",
            "expression": [
              " ",
              "[AUM] / CALCULATE(SUM('FactFunds'[InvestedUnits]))"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "Average Month Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Month Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average Quarter Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Quarter Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average Return on NAV",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [% Return on NAV]),",
              "    ALL('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ]
          },
          {
            "name": "Average Selected Return",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [Return]),",
              "    ALLSELECTED('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ],
            "formatString": "0.0"
          },
          {
            "name": "Manager Color Code",
            "expression": [
              " ",
              "IF(",
              "    COUNTROWS('DimFunds') > 0,",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[ColorCode])),",
              "    \"#BBC4C5\"",
              ")"
            ]
          },
          {
            "name": "Market Share %",
            "expression": [
              " ",
              " VAR MaxDate = ",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('ViwFund_All'[AUM]), 'ViwFund_All'[FundDataTypeId] = 4) ",
              "//         ) , ALLSELECTED('DimTimeTable')",
              "// )",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN ",
              "DIVIDE(",
              "    CALCULATE([aum])--CALCULATE([AUM], 'DimTimeTable'[Date] = MaxDate, ALLSELECTED('DimTimeTable'))",
              "    ,",
              "    CALCULATE([AUM], ALLSELECTED('DimFunds'), ALLSELECTED('FactFunds'), ALLSELECTED('DimManager'), ALLSELECTED('DimFunds'),'DimTimeTable'[Date] = MaxDate),",
              "    0",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Market Share % of Non Bank-Affiliated",
            "expression": [
              "",
              "DIVIDE (",
              "    CALCULATE ( [AUM] ),",
              "    CALCULATE ( [AUM], ALL ( 'DimManager' ), NOT ( 'DimManager'[IsBanking] ) ),",
              "    0",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Market Share % of Non Bank-Affiliated (including Private Portfos)",
            "expression": [
              " ",
              "DIVIDE(",
              "    CALCULATE([AUM including Private Portfolios]),",
              "    CALCULATE([AUM including Private Portfolios], ALL('DimManager'), NOT('DimManager'[IsBanking])),",
              "    0",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Month Rank",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]--CALCULATE(MAX('DimFunds'[AUM]), ALLSELECTED('DimFunds'))",
              "",
              "RETURN ",
              "IF (",
              "    [Month Rank + Firouzeh Funds] = 0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                FILTER(",
              "                    ALL('DimFunds'),",
              "                    NOT(ISBLANK([% Month Return])) && 'DimFunds'[FundType] = CurrentFundType  ",
              "                    && 'DimFunds'[AUM] <= MaxAUM && 'DimFunds'[AUM] >= MinAUM",
              "                )",
              "                , [% Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    ),",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                ALLEXCEPT('DimFunds', 'DimFunds'[FundType], 'DimFunds'[AUM])",
              "                , [% Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Month Rank + Firouzeh Funds",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                --FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Month Return])))",
              "                FILTER(ALLSELECTED('DimFunds'), NOT(ISBLANK([% Month Return])))",
              "                , [% Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "NAV i BT",
            "expression": " [AUM] / 10 ^ 10"
          },
          {
            "name": "Net Subscription Value",
            "expression": [
              " ",
              "[Subscriptions Value] - [Redemptions Value]"
            ],
            "formatString": "#,0",
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Net Subscriptions Value Cum",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    [Net Subscription Value],",
              "    'DimTimeTable'[Date] >= BaseDate,",
              "    'DimTimeTable'[Date] <= EndDate",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Subscriptions"
          },
          {
            "name": "New Units %",
            "expression": [
              " ",
              "VAR PeriodStartDate =",
              "    CALCULATE (",
              "        LASTNONBLANK (",
              "            DATESBETWEEN (",
              "                'DimTimeTable'[Date],",
              "                BLANK (),",
              "                CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "            ),",
              "            CALCULATE ( COUNT ( 'FactFunds'[AUM2] ) )",
              "        ),",
              "        ALLSELECTED ( 'DimTimeTable' )",
              "    )",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[AUM2]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[AUM2] ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        )",
              "    )",
              "VAR BaseUnits =",
              "CALCULATE(",
              "    SUMX(",
              "        'FactFunds',",
              "        'FactFunds'[AUM2] * 'FactFunds'[SubscriptionPrice]),",
              "        'FactFunds'[Date] = PeriodStartDate,",
              "        ALLSELECTED('DimTimeTable'),",
              "        'FactFunds'[FundDataTypeId] = 4",
              ")",
              "RETURN DIVIDE(IF(ISBLANK(NewUnits), 0, NewUnits) , BaseUnits, 0)"
            ]
          },
          {
            "name": "Quarter Rank",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "",
              "RETURN ",
              "IF(ISBLANK([% Quarter Return]),",
              "    BLANK(),",
              "    CALCULATE(",
              "        RANKX(",
              "            FILTER(",
              "                ALL('DimFunds'),",
              "                NOT(ISBLANK([% Quarter Return])) && 'DimFunds'[FundType] = CurrentFundType  ",
              "                && 'DimFunds'[AUM] <= MaxAUM && 'DimFunds'[AUM] >= MinAUM",
              "            )",
              "            , [% Quarter Return]",
              "            ,",
              "            , DESC",
              "            , Skip",
              "        )",
              "    )    ",
              ")"
            ]
          },
          {
            "name": "Quarter Rank + Firouzeh Funds",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Quarter Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                --FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Quarter Return])))",
              "                FILTER(ALLSELECTED('DimFunds'), NOT(ISBLANK([% Quarter Return])))",
              "                , [% Quarter Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Rank (by AUM) 1",
            "expression": [
              " ",
              "        CALCULATE(countrows(VALUES('DimManager'[FinancialGroupName])), ALLSELECTED('DimManager'))"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "Rebased 100 NAV",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR BaseClose = CALCULATE(SUM('FactFunds'[AUM2]), 'DimTimeTable'[Date] = BaseDate)",
              "VAR CurrentDate = CALCULATE(SELECTEDVALUE('DimTimeTable'[Date]))",
              "VAR FinalClose = CALCULATE(SUM('FactFunds'[AUM2]), 'DimTimeTable'[Date] = CurrentDate)",
              "VAR Rebased = DIVIDE(FinalClose, BaseClose) * 100",
              "",
              "RETURN IF(CurrentDate = CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable')), 100, Rebased)"
            ]
          },
          {
            "name": "Rebased 100 NAV Line",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE((FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "RETURN",
              "IF(",
              "    OR(",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = BaseDate,",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = EndDate",
              "    ),",
              "    [Rebased 100 NAV],",
              "    BLANK()",
              ")"
            ]
          },
          {
            "name": "Rebased 100 Units",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR BaseClose = CALCULATE(SELECTEDVALUE('FactFunds'[AUM2]), 'DimTimeTable'[Date] = BaseDate)",
              "VAR CurrentDate = CALCULATE(SELECTEDVALUE('DimTimeTable'[Date]))",
              "VAR FinalClose = CALCULATE(SELECTEDVALUE('FactFunds'[AUM2]))",
              "VAR Rebased = DIVIDE(FinalClose, BaseClose) * 100",
              "",
              "RETURN IF(CurrentDate = CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable')), 100, Rebased)"
            ]
          },
          {
            "name": "Redemptions",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactFunds'[UnitsRedDay])",
              ")"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Redemptions Value",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('FactFunds', 'FactFunds'[UnitsRedDay] * 'FactFunds'[RedemptionPrice])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Return",
            "expression": [
              " ",
              "",
              "VAR BaseDate = CALCULATE(MIN('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable'))",
              "",
              "VAR CurrentDate = CALCULATE(max('DimTimeTable'[Date]))",
              "",
              "VAR R = ",
              "",
              "    CALCULATE(",
              "        PRODUCTX(",
              "            'FactFunds', ",
              "            1 + [% Day Return] / 100), ",
              "            'DimTimeTable'[Date] <= CurrentDate,",
              "            'DimTimeTable'[Date] >= BaseDate",
              "",
              "    ) ",
              "",
              "RETURN IF(ISBLANK(R), BLANK(), (R-1) * 100) "
            ]
          },
          {
            "name": "Subscriptions",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactFunds'[UnitsSubDay])",
              ")"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Subscriptions Value",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('FactFunds', 'FactFunds'[UnitsSubDay] * 'FactFunds'[SubscriptionPrice])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Top X 6 Month Return",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "RETURN",
              "IF (",
              "    CALCULATE(",
              "        [6 Month Rank + Firouzeh Funds], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType) <= [@TopX]",
              "    , CALCULATE([% 6 Month Return], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType)",
              "    , BLANK()",
              ")"
            ]
          },
          {
            "name": "Top X Annual Return",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "RETURN",
              "IF (",
              "    CALCULATE(",
              "        [Annual Rank + Firouzeh Funds], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType) <= [@TopX]",
              "    , CALCULATE([% Annual Return], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType)",
              "    , blank()",
              ")"
            ]
          },
          {
            "name": "Top X Month Return",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "RETURN",
              "IF (",
              "    CALCULATE(",
              "        [Month Rank + Firouzeh Funds], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType) <= [@TopX]",
              "    , CALCULATE([% Month Return], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType)",
              "    , BLANK()",
              ")"
            ]
          },
          {
            "name": "Top X Quarter Return",
            "expression": [
              " ",
              "VAR CurrentFundType = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "RETURN",
              "IF (",
              "    CALCULATE([Quarter Rank + Firouzeh Funds], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType) <= [@TopX]",
              "    ,CALCULATE([% Quarter Return], 'DimFunds'[AUM] <= MaxAUM, 'DimFunds'[AUM] >= MinAUM, 'DimFunds'[FundType] = CurrentFundType)",
              "    , BLANK()",
              ")"
            ]
          },
          {
            "name": "Market Share % (All)",
            "expression": [
              " ",
              "DIVIDE(",
              "    CALCULATE([AUM New 3]),",
              "    CALCULATE([AUM New 3], ALL('DimManager')),",
              "    0",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Market Share % (All) (including Private Portfos)",
            "expression": [
              " ",
              "DIVIDE(",
              "    CALCULATE([AUM including Private Portfolios]),",
              "    CALCULATE([AUM including Private Portfolios], ALL('DimManager')),",
              "    0",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Market Share Growth % (All)",
            "expression": [
              " ",
              "VAR BaseDate = CALCULATE(MIN('DimTimeTable'[Date]))",
              "",
              "VAR CurrentDate = CALCULATE(MAX('DimTimeTable'[Date]))",
              "",
              "VAR CurrentShare = ",
              "CALCULATE(",
              "    [Market Share % (All) by parameter],",
              "    'DimTimeTable'[Date] = CurrentDate",
              ")",
              "",
              "VAR BaseShare = ",
              "CALCULATE(",
              "    [Market Share % (All) by parameter],",
              "    'DimTimeTable'[Date] = BaseDate",
              ")",
              "",
              "",
              "VAR ShareGrowth =",
              "DIVIDE(    ",
              "    CurrentShare,",
              "    BaseShare",
              ") - 1",
              "",
              "RETURN ShareGrowth"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Market Share"
          },
          {
            "name": "Market Share Growth % (All) YoY",
            "expression": [
              " ",
              "",
              "VAR CurrentDate = CALCULATE(MAX('DimTimeTable'[Date]))",
              "",
              "VAR BaseDate = EDATE(CurrentDate, -12) + 1",
              "",
              "VAR CurrentShare = ",
              "CALCULATE(",
              "    [Market Share % (All) by parameter],",
              "    'DimTimeTable'[Date] = CurrentDate",
              ")",
              "",
              "VAR BaseShare = ",
              "CALCULATE(",
              "    [Market Share % (All) by parameter],",
              "    'DimTimeTable'[Date] = BaseDate",
              ")",
              "",
              "",
              "VAR ShareGrowth =",
              "DIVIDE(",
              "    CurrentShare,",
              "    BaseShare",
              ") - 1",
              "",
              "RETURN ShareGrowth"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Market Share"
          },
          {
            "name": "AUM Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable'[Date])",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    SELECTEDVALUE('DimTimeTable'[Date]) = MaxDate,",
              "    [AUM], ",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ]
          },
          {
            "name": "Fund Surplus / Deficit",
            "expression": [
              "",
              "VAR MaxDate = CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "VAR PriceDate = -- Latest date that has price in FactTrade table, since there is no price in holidays",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            MaxDate",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[Date]))",
              "    )",
              ")",
              "VAR Ins = SELECTEDVALUE('DimFunds'[InstrumentId]) -- The instrument selected in the report",
              "",
              "VAR Price = -- price of selected instrument in PriceDate",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTradeDetails'[AdjPrice]), ",
              "    'DimTimeTable'[Date] = PriceDate,",
              "    'FactTradeDetails'[InstrumentId] = Ins",
              ")",
              "",
              "VAR RedPrice = -- If the fund is ETF then we use price for calculating delta, otherwise we use redemption price",
              "IF (",
              "    SELECTEDVALUE('DimFunds'[TypeOfInvest]),",
              "    Price,",
              "    CALCULATE(",
              "        SELECTEDVALUE('FactFunds'[RedemptionPrice]),",
              "        'DimTimeTable'[Date] = MaxDate,",
              "        'DimFunds'[InstrumentId] = Ins",
              "    ) ",
              ")",
              "",
              "VAR Delta = -- is the sum of difference between statistical and redemption price (fore ETF's trade price) multiplied by total number of units",
              "IF(",
              "    ISBLANK(RedPrice) || ISBLANK(SELECTEDVALUE('FactFunds'[StatisticalPrice])) || ISBLANK(SELECTEDVALUE('FactFunds'[InvestedUnits])),",
              "    BLANK(),",
              "    CALCULATE(",
              "        (SELECTEDVALUE('FactFunds'[StatisticalPrice]) - RedPrice) * SELECTEDVALUE('FactFunds'[InvestedUnits]), ",
              "        'DimTimeTable'[Date] = MaxDate",
              "    )",
              ")",
              "RETURN Delta",
              ""
            ],
            "formatString": "#,0",
            "kpi": {
              "targetExpression": "0",
              "targetFormatString": "#,0",
              "statusExpression": [
                "var x='Fipiran Measures'[Fund Surplus / Deficit]/'Fipiran Measures'[_Fund Surplus / Deficit Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.33,-1,",
                "\t                If(x<0.66,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "StaticValue"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "33"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "66"
                }
              ]
            }
          },
          {
            "name": "Fund Surplus / Deficit Label",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable'[Date])",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    SELECTEDVALUE('DimTimeTable'[Date]) = MaxDate,",
              "    [Fund Surplus / Deficit], ",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "name": "Fund Surplus / Deficit to AUM Ratio",
            "expression": [
              "",
              "DIVIDE(",
              "    [Fund Surplus / Deficit],",
              "    [AUM]",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "kpi": {
              "targetExpression": "0",
              "targetFormatString": "0.00%;-0.00%;0.00%",
              "statusExpression": [
                "var x='Fipiran Measures'[Fund Surplus / Deficit to AUM Ratio]/'Fipiran Measures'[_Fund Surplus / Deficit to AUM Ratio Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.33,-1,",
                "\t                If(x<0.66,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "StaticValue"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "33"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "66"
                }
              ]
            }
          },
          {
            "name": "Fund Surplus / Deficit to AUM Ratio Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable'[Date])",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    SELECTEDVALUE('DimTimeTable'[Date]) = MaxDate,",
              "    [Fund Surplus / Deficit to AUM Ratio], ",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Fixed Income Effective Annual Return",
            "expression": [
              " ",
              "VAR d = SELECTEDVALUE('DimTimeTable'[Date])",
              "VAR r = CALCULATE([Return on Price (average 3 weeks)], 'DimTimeTable'[Date] = d) / 100",
              "VAR t = SELECTEDVALUE('DimFunds'[FundType])",
              "VAR ETF = SELECTEDVALUE('DimFunds'[TypeOfInvest])",
              "VAR Period = SELECTEDVALUE('DimFunds'[DividendIntervalPeriod])",
              "VAR RFixed =",
              "IF(",
              "    t = \"درآمد ثابت\" && r < .0017 && r > -.0017 ,",
              "    (((1 + r) ^ 365) -1)  * 100",
              ")",
              "RETURN ",
              "IF(",
              "    ETF && Period = 0,",
              "    RFixed,",
              "    BLANK()",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Return on Price (average 3 weeks)",
            "expression": [
              " ",
              "VAR CurrentDate = SELECTEDVALUE('DimTimeTable'[Date])",
              "VAR PreviousDate = --CurrentDate - 14",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CurrentDate - 21",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[ClosePrice])) ",
              "        )",
              ")",
              "VAR CurrentPrice = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTradeDetails'[ClosePrice]),",
              "    'DimTimeTable'[Date] = CurrentDate",
              ")",
              "VAR PreviousPrice = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTradeDetails'[ClosePrice]),",
              "    'DimTimeTable'[Date] = PreviousDate",
              ")",
              "VAR R = ",
              "DIVIDE(CurrentPrice-PreviousPrice, PreviousPrice)",
              "",
              "RETURN (((1 + R) ^ (1/21) ) - 1) * 100",
              "--CurrentPrice - PreviousPrice",
              "-- (DIVIDE(DIVIDE(CurrentPrice-PreviousPrice, PreviousPrice), VALUE(CurrentDate-PreviousDate)))",
              "--VALUE(CurrentDate-PreviousDate))"
            ]
          },
          {
            "name": "Fund Delta trade",
            "expression": [
              "",
              "VAR MaxDate = CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "VAR PriceDate = -- Latest date that has price in FactTrade table, since there is no price in holidays",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            MaxDate",
              "        ),",
              "        CALCULATE(COUNT('FactTrade'[Date]))",
              "    )",
              ")",
              "VAR Ins = SELECTEDVALUE('DimFunds'[InstrumentId]) -- The instrument selected in the report",
              "",
              "VAR Price = -- price of selected instrument in PriceDate",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTrade'[ClosePrice]), ",
              "    'DimTimeTable'[Date] = PriceDate,",
              "    'FactTrade'[InstrumentId] = Ins",
              ")",
              "",
              "VAR RedPrice = -- If the fund is ETF then we use price for calculating delta, otherwise we use redemption price",
              "IF (",
              "    SELECTEDVALUE('DimFunds'[TypeOfInvest]),",
              "    Price,",
              "    CALCULATE(",
              "        SELECTEDVALUE('FactFunds'[RedemptionPrice]),",
              "        'DimTimeTable'[Date] = MaxDate,",
              "        'DimFunds'[InstrumentId] = Ins",
              "    ) ",
              ")",
              "",
              "VAR Delta = -- is the sum of difference between statistical and redemption price (fore ETF's trade price) multiplied by total number of units",
              "IF(",
              "    ISBLANK(RedPrice) || ISBLANK(SELECTEDVALUE('FactFunds'[StatisticalPrice])) || ISBLANK(SELECTEDVALUE('FactFunds'[InvestedUnits])),",
              "    BLANK(),",
              "    CALCULATE(",
              "        (SELECTEDVALUE('FactFunds'[StatisticalPrice]) - RedPrice) * SELECTEDVALUE('FactFunds'[InvestedUnits]), ",
              "        'DimTimeTable'[Date] = MaxDate",
              "    )",
              ")",
              "RETURN Delta",
              ""
            ]
          },
          {
            "name": "Return Percentile Value Old Version (Wrong)",
            "expression": [
              " ",
              "VAR Period = '@Period'[@Period Value]",
              "VAR MinAUM = '@AUM'[Min AUM]",
              "VAR MaxAUM = '@AUM'[Max AUM]",
              "VAR T0 = ",
              "CALCULATETABLE(",
              "    VALUES(DimFunds[FundId]),",
              "    NOT(ISBLANK('FactFunds'[YearReturn]) || 'FactFunds'[YearReturn] = 0),",
              "    All('DimFunds')",
              ")",
              "VAR T1 =",
              "CALCULATETABLE(",
              "    FILTER(ALL('DimFunds'), [Filter Percentile] = 1)",
              "//    'DimFunds'[AUM] <= MaxAUM, ",
              "//    'DimFunds'[AUM] >= MinAUM,",
              "    , 'DimFunds'[FundId] IN T0",
              ")",
              "VAR T2 = ",
              "ADDCOLUMNS(",
              "FILTER(",
              "    T1,",
              "    VAR r =",
              "    SWITCH(",
              "        TRUE(),",
              "        Period = 1, [Month Rank],",
              "        Period = 3, [Quarter Rank],",
              "        Period = 6, [6 Month Rank],",
              "        Period = 12, [Annual Rank]",
              "    )",
              "    RETURN",
              "    CALCULATE((r-1)/COUNTROWS(T1)) <= (1-[@Percentile]/100)",
              "),",
              "\"Rank11\", ",
              "SWITCH(",
              "    TRUE(),",
              "    Period = 1, [Month Rank],",
              "    Period = 3, [Quarter Rank],",
              "    Period = 6, [6 Month Rank],",
              "    Period = 12, [Annual Rank]",
              ")",
              ")",
              "VAR T3 =",
              "ADDCOLUMNS(",
              "    T2,",
              "    \"PeriodReturn\", ",
              "    SWITCH(",
              "        TRUE(),",
              "        Period = 1, [% Month Return],",
              "        Period = 3, [% Quarter Return],",
              "        Period = 6, [% 6 Month Return],",
              "        Period = 12, [% Annual Return]",
              "    )",
              ")",
              "RETURN",
              "--period",
              "--CALCULATE(CONCATENATEX('DimFunds', 'DimFunds'[FundName], \", \"), FILTER(T2, ISBLANK([Rank11]) ))",
              "--MAXX(T2, [Rank11])",
              "--COUNTROWS(T3)",
              "--CALCULATE(COUNTROWS(T2), FILTER(T2, False() && [Rank11] =-5))",
              "--CALCULATE(COUNTROWS(T1))",
              "CALCULATE(MINX(T3, [PeriodReturn]))",
              ""
            ]
          },
          {
            "name": "Filter Percentile",
            "expression": [
              " ",
              "VAR BaseDate = MIN('DimTimeTable'[Date])",
              "VAR BaseAUM = CALCULATE([AUM], 'DimTimeTable'[Date] = BaseDate, 'DimFunds'[FundId] = 10789)",
              "VAR AUM = CALCULATE([AUM], 'DimTimeTable'[Date] = BaseDate)",
              "",
              "VAR b = ",
              "(",
              "    CALCULATE(",
              "        SELECTEDVALUE('DimManager'[FinancialGroupName]), ",
              "        CROSSFILTER('DimManager'[ManagerId], 'DimFunds'[ManagerId], Both)",
              "    )",
              "    in {\"کیان\", \"ترنج\", \"مفید\", \"آگاه\", \"کاریزما\", \"فارابی\"}",
              "|| ",
              "    (AUM >= .5 * BaseAUM && AUM <= 2 * BaseAUM)",
              ") ",
              "&& SELECTEDVALUE('DimFunds'[FundSubType]) <> \"اهرمی\"",
              "&& SELECTEDVALUE('DimFunds'[FundType]) = \"در سهام\"",
              "return ",
              "if (b, 1, 0) ",
              ""
            ]
          },
          {
            "name": "Equity Funds Return Percentile Value",
            "expression": [
              " ",
              "",
              "VAR Period = '@Months'[Months Value]--'@Period'[@Period Value]",
              "",
              "VAR LastDay = CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "VAR BaseDay = ",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(FIRSTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "",
              "",
              "VAR BaseAUM = CALCULATE([AUM], ALL(), 'DimTimeTable'[Date] = BaseDay,  'DimFunds'[FundId] = 10789)",
              "",
              "VAR T1 =",
              "CALCULATETABLE(",
              "    VALUES('DimFunds'[FundId])",
              ",",
              "    filter(",
              "        ALL('DimFunds'),",
              "        VAR AUM = CALCULATE([AUM], 'DimTimeTable'[Date] <= BaseDay)",
              "        RETURN",
              "        CALCULATE(",
              "        selectedvalue('dimmanager'[financialgroupname]) ",
              "        , crossfilter('dimmanager'[managerid], 'dimfunds'[managerid], both)",
              "        )   ",
              "        in {\"کیان\", \"ترنج\", \"مفید\", \"آگاه\", \"کاریزما\", \"فارابی\"}",
              "        || ",
              "        (aum >= .5 * baseaum && aum <= 2 * baseaum)",
              "        )",
              ", ",
              "    FILTER(",
              "        ALL('dimfunds')",
              "        , 'dimfunds'[fundsubtype] <> \"اهرمی\"",
              "        && 'dimfunds'[fundtype] = \"در سهام\"",
              "    )",
              "    //, ALL('dimfunds')",
              "    , REMOVEFILTERS('DimFunds')",
              "    , NOT (ISBLANK('factfunds'[yearreturn]) || 'factfunds'[yearreturn] = 0)",
              ")",
              "",
              "VAR T2 =",
              "ADDCOLUMNS(",
              "    T1,",
              "    \"PeriodReturn\",",
              "    VAR Fund = 'DimFunds'[FundId]",
              "    RETURN ",
              "    CALCULATE(",
              "        SWITCH(",
              "            TRUE(),",
              "            Period = 1, [% Month Return],",
              "            Period = 3, [% Quarter Return],",
              "            Period = 6, [% 6 Month Return],",
              "            Period = 12, [% Annual Return],",
              "            [% Return on NAV] * 100",
              "        ),",
              "        'DimTimeTable'[Date] <=LastDay,",
              "        'DimTimeTable'[Date] >=BaseDay",
              "//        ALL('FactReturns')",
              "    )",
              ")",
              "",
              "VAR T3 = ",
              "ADDCOLUMNS(",
              "    T2,",
              "    \"Rank\",",
              "    RANKX(T2, [PeriodReturn],,DESC, Skip)",
              ")",
              "",
              "VAR T4 = ",
              "FILTER(",
              "    T3,",
              "    ([Rank]-0) / COUNTROWS(T3) <= (1 - [@Percentile] / 100)",
              ")",
              "",
              "RETURN",
              "CALCULATE(MINX(T4, [PeriodReturn]))/100",
              "// CALCULATE(COUNTROWS(t4), filter(T4, ISBLANK([PeriodReturn])))",
              "//calculate(averagex(T4, [rank]))",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "aum OLD VERSION",
            "expression": [
              "",
              "SUMX (",
              "    VALUES ( 'FactFunds'[FundId] ),",
              "//    VAR LastDay =",
              "//        CALCULATE ( MAX ( 'FactFunds'[Date] ), NOT ( ISBLANK ( 'FactFunds'[AUM2] ) ) )",
              "    VAR LastDay = ",
              "    CALCULATE(",
              "        LASTNONBLANK(",
              "            DATESBETWEEN(",
              "                'DimTimeTable'[Date],",
              "                BLANK(),",
              "                CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "            ),",
              "            CALCULATE(COUNT('FactFunds'[AUM2]))",
              "        )",
              "    )",
              "    RETURN",
              "    CALCULATE (SUM( 'FactFunds'[AUM2] ), 'FactFunds'[Date] = LastDay )",
              ")"
            ]
          },
          {
            "name": "Equity Funds Return Percentile Value Range",
            "expression": [
              " ",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "VAR Y = if(year(EDATE(MaxDate, -'@Months'[Months Value])) < year(MaxDate), YEAR(MaxDate)-1, year(maxdate))",
              "VAR MinDate = ",
              "CALCULATE(ENDOFMONTH('DimTimeTable'[Date]), filter(ALL('DimTimeTable'),'DimTimeTable'[Date] = EDATE(MaxDate, -'@Months'[Months Value]))) + 1",
              "RETURN ",
              "    CALCULATE(",
              "        [Equity Funds Return Percentile Value],",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            MinDate,",
              "            MaxDate",
              "        ),",
              "        'DimFunds'[FundId] = Fund",
              "    )",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Equity Funds Return Percentile Value Cum",
            "expression": [
              " ",
              "",
              "VAR Period = '@Months'[Months Value]--'@Period'[@Period Value]",
              "",
              "VAR LastDay = CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "VAR BaseDay = ",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable'))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "",
              "",
              "VAR BaseAUM = CALCULATE([AUM], ALL(), 'DimTimeTable'[Date] = BaseDay,  'DimFunds'[FundId] = 10789)",
              "",
              "VAR T1 =",
              "CALCULATETABLE(",
              "    VALUES('DimFunds'[FundId])",
              ",",
              "    filter(",
              "        ALL('DimFunds'),",
              "        VAR AUM = CALCULATE([AUM], 'DimTimeTable'[Date] <= BaseDay)",
              "        RETURN",
              "        CALCULATE(",
              "        selectedvalue('dimmanager'[financialgroupname]) ",
              "        , crossfilter('dimmanager'[managerid], 'dimfunds'[managerid], both)",
              "        )   ",
              "        in {\"کیان\", \"ترنج\", \"مفید\", \"آگاه\", \"کاریزما\", \"فارابی\"}",
              "        || ",
              "        (aum >= .5 * baseaum && aum <= 2 * baseaum)",
              "        )",
              ", ",
              "    FILTER(",
              "        ALL('dimfunds')",
              "        , 'dimfunds'[fundsubtype] <> \"اهرمی\"",
              "        && 'dimfunds'[fundtype] = \"در سهام\"",
              "    )",
              "    //, ALL('dimfunds')",
              "    , REMOVEFILTERS('DimFunds')",
              "    , NOT (ISBLANK('factfunds'[yearreturn]) || 'factfunds'[yearreturn] = 0)",
              ")",
              "",
              "VAR T2 =",
              "ADDCOLUMNS(",
              "    T1,",
              "    \"PeriodReturn\",",
              "    VAR Fund = 'DimFunds'[FundId]",
              "    RETURN ",
              "    CALCULATE(",
              "        SWITCH(",
              "            TRUE(),",
              "            Period = 1, [% Month Return],",
              "            Period = 3, [% Quarter Return],",
              "            Period = 6, [% 6 Month Return],",
              "            Period = 12, [% Annual Return],",
              "            [% Return on NAV] * 100",
              "        ),",
              "        'DimTimeTable'[Date] <=LastDay,",
              "        'DimTimeTable'[Date] >=BaseDay",
              "//        ALL('FactReturns')",
              "    )",
              ")",
              "",
              "VAR T3 = ",
              "ADDCOLUMNS(",
              "    T2,",
              "    \"Rank\",",
              "    RANKX(T2, [PeriodReturn],,DESC, Skip)",
              ")",
              "",
              "VAR T4 = ",
              "FILTER(",
              "    T3,",
              "    ([Rank]-0) / COUNTROWS(T3) <= (1 - [@Percentile] / 100)",
              ")",
              "",
              "RETURN",
              "CALCULATE(MINX(T4, [PeriodReturn]))/100",
              "// CALCULATE(COUNTROWS(t4), filter(T4, ISBLANK([PeriodReturn])))",
              "//calculate(averagex(T4, [rank]))",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "name": "Fixed Income Funds Return Percentile Value",
            "expression": [
              " ",
              "",
              "VAR Period = '@Months'[Months Value]--'@Period'[@Period Value]",
              "",
              "VAR LastDay = CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "VAR BaseDay = ",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(FIRSTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "",
              "",
              "VAR BaseAUM = CALCULATE([AUM], ALL(), 'DimTimeTable'[Date] = BaseDay,  'DimFunds'[FundId] = 11518)",
              "",
              "VAR T1 =",
              "CALCULATETABLE(",
              "    VALUES('DimFunds'[FundId])",
              ",",
              "    filter(",
              "        ALL('DimFunds'),",
              "        VAR AUM = CALCULATE([AUM], 'DimTimeTable'[Date] <= BaseDay)",
              "        RETURN",
              "        CALCULATE(",
              "        selectedvalue('dimmanager'[financialgroupname]) ",
              "        , crossfilter('dimmanager'[managerid], 'dimfunds'[managerid], both)",
              "        )   ",
              "        in {\"کیان\", \"ترنج\", \"مفید\", \"آگاه\", \"کاریزما\", \"فارابی\"}",
              "        || ",
              "        (aum >= .5 * baseaum && aum <= 2 * baseaum)",
              "        )",
              ", ",
              "    FILTER(",
              "        ALL('dimfunds')",
              "        , 'dimfunds'[fundsubtype] = \"نوع اول\"",
              "        && 'dimfunds'[fundtype] = \"درآمد ثابت\"",
              "    )",
              "    //, ALL('dimfunds')",
              "    , REMOVEFILTERS('DimFunds')",
              "    , NOT (ISBLANK('factfunds'[yearreturn]) || 'factfunds'[yearreturn] = 0)",
              ")",
              "",
              "VAR T2 =",
              "ADDCOLUMNS(",
              "    T1,",
              "    \"PeriodReturn\",",
              "    VAR Fund = 'DimFunds'[FundId]",
              "    RETURN ",
              "    CALCULATE(",
              "        [% Return on Statistical NAV] * 100",
              "        ,",
              "        'DimTimeTable'[Date] <=LastDay,",
              "        'DimTimeTable'[Date] >=BaseDay",
              "//        ALL('FactReturns')",
              "    )",
              ")",
              "",
              "VAR T3 = ",
              "ADDCOLUMNS(",
              "    T2,",
              "    \"Rank\",",
              "    RANKX(T2, [PeriodReturn],,DESC, Skip)",
              ")",
              "",
              "VAR T4 = ",
              "FILTER(",
              "    T3,",
              "    ([Rank]-0) / COUNTROWS(T3) <= (1 - [@Percentile] / 100)",
              ")",
              "",
              "RETURN",
              "CALCULATE(MINX(T4, [PeriodReturn]))/100",
              "// CALCULATE(COUNTROWS(t4), filter(T4, ISBLANK([PeriodReturn])))",
              "//calculate(averagex(T4, [rank]))",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "Fixed Income Funds Return Percentile Value Cum",
            "expression": [
              " ",
              "",
              "VAR Period = '@Months'[Months Value]--'@Period'[@Period Value]",
              "",
              "VAR LastDay = CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              ")",
              "VAR BaseDay = ",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable'))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM2]))",
              "    )",
              "",
              "",
              "VAR BaseAUM = CALCULATE([AUM], ALL(), 'DimTimeTable'[Date] = BaseDay,  'DimFunds'[FundId] = 11518)",
              "",
              "VAR T1 =",
              "CALCULATETABLE(",
              "    VALUES('DimFunds'[FundId])",
              ",",
              "    filter(",
              "        ALL('DimFunds'),",
              "        VAR AUM = CALCULATE([AUM], 'DimTimeTable'[Date] <= BaseDay)",
              "        RETURN",
              "        CALCULATE(",
              "        selectedvalue('dimmanager'[financialgroupname]) ",
              "        , crossfilter('dimmanager'[managerid], 'dimfunds'[managerid], both)",
              "        )   ",
              "        in {\"کیان\", \"ترنج\", \"مفید\", \"آگاه\", \"کاریزما\", \"فارابی\"}",
              "        || ",
              "        (aum >= .5 * baseaum && aum <= 2 * baseaum)",
              "        )",
              ", ",
              "    FILTER(",
              "        ALL('dimfunds')",
              "        , 'dimfunds'[fundsubtype] = \"نوع اول\"",
              "        && 'dimfunds'[fundtype] = \"درآمد ثابت\"",
              "    )",
              "    //, ALL('dimfunds')",
              "    , REMOVEFILTERS('DimFunds')",
              "    , NOT (ISBLANK('factfunds'[yearreturn]) || 'factfunds'[yearreturn] = 0)",
              ")",
              "",
              "VAR T2 =",
              "ADDCOLUMNS(",
              "    T1,",
              "    \"PeriodReturn\",",
              "    VAR Fund = 'DimFunds'[FundId]",
              "    RETURN ",
              "    CALCULATE(",
              "        [% Return on Statistical NAV] * 100",
              "        ,",
              "        'DimTimeTable'[Date] <=LastDay,",
              "        'DimTimeTable'[Date] >=BaseDay",
              "//        ALL('FactReturns')",
              "    )",
              ")",
              "",
              "VAR T3 = ",
              "ADDCOLUMNS(",
              "    T2,",
              "    \"Rank\",",
              "    RANKX(T2, [PeriodReturn],,DESC, Skip)",
              ")",
              "",
              "VAR T4 = ",
              "FILTER(",
              "    T3,",
              "    ([Rank]-0) / COUNTROWS(T3) <= (1 - [@Percentile] / 100)",
              ")",
              "",
              "RETURN",
              "CALCULATE(MINX(T4, [PeriodReturn]))/100",
              "// CALCULATE(COUNTROWS(t4), filter(T4, ISBLANK([PeriodReturn])))",
              "//calculate(averagex(T4, [rank]))",
              "",
              "",
              "",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ]
      },
      {
        "name": "@TopX",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {5, 10, 20, COUNTROWS('DimFunds')}"
            }
          }
        ],
        "measures": [
          {
            "name": "@TopX",
            "expression": " SELECTEDVALUE('@TopX'[Value])"
          }
        ]
      },
      {
        "name": "@Include Private Potfolios",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Include Private Portfos",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Value],",
              "    \"Include Private Portfos\",",
              "    BLANK()",
              ")",
              "    "
            ]
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {True(), FALSE()}"
            }
          }
        ],
        "measures": [
          {
            "name": "AUM by parameter",
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Include Private Potfolios],",
              "    [AUM including Private Portfolios],",
              "    [AUM]",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "AUM"
          },
          {
            "name": "Include Private Potfolios",
            "expression": " SELECTEDVALUE('@Include Private Potfolios'[Value])"
          },
          {
            "name": "Market Share % of Non Bank-Affiliated by parameter",
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Include Private Potfolios],",
              "    [Market Share % of Non Bank-Affiliated (including Private Portfos)],",
              "    [Market Share % of Non Bank-Affiliated]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Market Share % (All) by parameter",
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Include Private Potfolios],",
              "    [Market Share % (All) (including Private Portfos)],",
              "    [Market Share % (All)]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          }
        ]
      },
      {
        "name": "@Period",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "@Period",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 6, 12}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Period Value",
            "expression": " SELECTEDVALUE('@Period'[@Period])"
          },
          {
            "name": "% Period Return Weighted",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = DIVIDE(",
              "CALCULATE(",
              "    SUMX(",
              "        FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0)),",
              "        [AUM] * [Period Return])),",
              "        CALCULATE([AUM], FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0))))",
              "RETURN r "
            ]
          },
          {
            "name": "Period Return",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    '@Period'[@Period Value] = 1, [% Month Return]/1,",
              "    '@Period'[@Period Value] = 3, [% Quarter Return]/1,",
              "    '@Period'[@Period Value] = 6, [% 6 Month Return]/1,",
              "    '@Period'[@Period Value] = 12, [% Annual Return]/1,",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "@Ranking",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 5}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Ranking",
            "expression": " SELECTEDVALUE('@Ranking'[Value])"
          },
          {
            "name": "Average Ranking",
            "expression": [
              " ",
              "AVERAGEX(",
              "    'DimManager',",
              "    [Ranking]",
              ")"
            ]
          },
          {
            "name": "Ranking",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    [@Ranking] = 1, [1 Year Rank],",
              "    [@Ranking] = 3, [3 Year Rank],",
              "    [@Ranking] = 5, [5 Year Rank],",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Clients Measures",
        "columns": [
          {
            "name": "Clients Measures/Partition",
            "dataType": "string",
            "sourceColumn": "Clients Measures/Partition"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Client Assets",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactShareHoldersTrade'[Value])) ",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactShareHoldersTrade'[Value]),'DimTimeTable'[Date] = MaxDate)",
              "RETURN NAV"
            ],
            "displayFolder": "Client Measures Folder"
          },
          {
            "name": "Net Subscription",
            "expression": [
              " ",
              "[Subscriptions (Rivarz)] - [Redemptions (Rivarz)]"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Net Unit Subscriptions",
            "description": "Subscriptions",
            "expression": [
              " ",
              "[Units Subscriptions (Rivarz)] - [Units Redemptions (Rivarz)]"
            ]
          },
          {
            "name": "Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Units Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    -SUM('FactShareHoldersTrade'[Volume]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Units Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Volume]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ],
            "displayFolder": "Subscriptions"
          },
          {
            "name": "Averarge Client Balance Value",
            "expression": [
              " ",
              "DIVIDE([Client Balance Value], [Client Count])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Averarge Client Balance Value (All Selected)",
            "expression": [
              "",
              "CALCULATE (",
              "    [Client Balance Value] / [Client Count],",
              "    ALL (",
              "        'DimShareHoldersProfile'[ShareHolderId],",
              "        'DimShareHoldersProfile'[BourseCode],",
              "        'DimShareHoldersProfile'[FullName]",
              "    )",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Client Balance",
            "expression": [
              "",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR MaxDate =",
              "    CALCULATE (",
              "        MAX ( 'FactShareHolders'[Date] ),",
              "        'DimCompany'[CompanyId] = Company",
              "    ) --VAR MaxDate = CALCULATE(MAX('DimTimeTable'[Date]), NOT('DimTimeTable'[IsNonWorking]))",
              "    ",
              "RETURN",
              "    CALCULATE (",
              "        SUM ( 'FactShareHolders'[VolumeBalance] ),",
              "        'DimCompany'[CompanyId] = Company,",
              "        KEEPFILTERS('DimShareHoldersProfile'[ShareHolderId] <> 59113),",
              "        'DimTimeTable'[Date] = MaxDate",
              "    )",
              "    ",
              "    ",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactShareHolders'[VolumeBalance])) ",
              "//         )",
              "// )",
              ""
            ]
          },
          {
            "name": "Client Balance %",
            "expression": [
              " ",
              "DIVIDE(",
              "    [Client Balance],",
              "    CALCULATE([Client Balance], ALL('DimShareHoldersProfile'))",
              ")"
            ]
          },
          {
            "name": "Client Balance Value",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR MaxDate = CALCULATE(MAX('FactShareHolders'[Date]), 'DimCompany'[CompanyId] =Company)",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactShareHolders'[VolumeBalance])) ",
              "//         )",
              "// )",
              "",
              "RETURN ",
              "CALCULATE(",
              "    SUMX(",
              "        CALCULATETABLE(DimShareHoldersProfile, KEEPFILTERS('DimShareHoldersProfile'[ShareHolderId] <> 59113)),",
              "        VAR Balance = CALCULATE(SELECTEDVALUE('FactShareHolders'[VolumeBalance]), 'DimTimeTable'[Date] = MaxDate, 'DimCompany'[CompanyId] = Company)",
              "        VAR Price = CALCULATE(SELECTEDVALUE('FactTrade'[ClosePrice]), 'DimTimeTable'[Date] = MaxDate, 'DimCompany'[CompanyId] = Company)",
              "        RETURN",
              "        PRICE * Balance",
              "    )",
              ")"
            ]
          },
          {
            "name": "Client Balance Value %",
            "expression": [
              " ",
              "DIVIDE(",
              "    [Client Balance Value],",
              "    CALCULATE([Client Balance Value], ALL('DimShareHoldersProfile'))",
              ")",
              "// [Client Balance Value] / CALCULATE([Client Balance Value], ALL('DimShareHoldersProfile'[KindCategory], 'DimShareHoldersProfile'[KindDesc], DimShareHoldersProfile[KindId], 'DimShareHoldersProfile'[FullName], 'DimShareHoldersProfile'[ShareHolderId], 'DimShareHoldersProfile'[BourseCode]))"
            ]
          },
          {
            "name": "Client Count",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "--VAR Company = SELECTEDVALUE('DimCompany'[CompanyId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR MaxDate = CALCULATE(MAX('FactShareHolders'[Date]), 'DimCompany'[CompanyId] = Company)",
              "",
              "RETURN ",
              "CALCULATE(",
              "    DISTINCTCOUNTNOBLANK('FactShareHolders'[ShareHolderId]),",
              "    'DimCompany'[CompanyId] = Company,",
              "    'DimShareHoldersProfile'[ShareHolderId] <> 59113,",
              "    'DimTimeTable'[Date] = MaxDate",
              ")"
            ]
          },
          {
            "name": "Client Count %",
            "expression": [
              " ",
              "[Client Count] / CALCULATE([Client Count], ALL('DimShareHoldersProfile'[KindCategory], 'DimShareHoldersProfile'[KindDesc], DimShareHoldersProfile[KindId], 'DimShareHoldersProfile'[FullName], 'DimShareHoldersProfile'[ShareHolderId]))"
            ]
          },
          {
            "name": "Client Count 2",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "RETURN",
              "AVERAGEX(",
              "    VALUES('DimTimeTable'[Date]),",
              "    CALCULATE(",
              "        DISTINCTCOUNTNOBLANK('FactShareHolders'[ShareHolderId]),",
              "        'DimCompany'[CompanyId] = Company,",
              "        'DimShareHoldersProfile'[ShareHolderId] <> 59113",
              "    )",
              ")"
            ]
          },
          {
            "name": "Client Value Delta",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    FILTER('DimTimeTable', COUNTROWS(RELATEDTABLE(FactTrade)) > 0 )",
              ")",
              "",
              "VAR Price = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTrade'[ClosePrice]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'DimCompany'[CompanyId] = Company",
              ")",
              "RETURN  Price * [Client Volume Delta] "
            ]
          },
          {
            "name": "Client Value Delta New",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR MaxDate = CALCULATE(MAX('FactShareHolders'[Date]), 'DimCompany'[CompanyId] = Company)",
              "VAR PeriodFirstDay = MIN('DimTimeTable'[Date])",
              "VAR LastDay = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    DATESBETWEEN(",
              "        'DimTimeTable'[Date],",
              "        BLANK(),",
              "        PeriodFirstDay - 1",
              "    )",
              "    , NOT 'DimTimeTable'[IsNonWorking]",
              ")",
              "VAR Price = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTrade'[ClosePrice]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'DimCompany'[CompanyId] = Company",
              ")",
              "VAR T1 =  // All Share Holders of the selected Company and shareholders over time",
              "CALCULATETABLE(",
              "    VALUES('FactShareHolders'[ShareHolderId]),",
              "    ALLEXCEPT('FactShareHolders', 'FactShareHolders'[CompanyId])",
              ")",
              "",
              "VAR Delta =",
              "IF(",
              "    ISBLANK(SELECTEDVALUE('DimShareHoldersProfile'[FullName])) || ISBLANK(SELECTEDVALUE('DimShareHoldersProfile'[FullName])),",
              "    SUMX(",
              "        T1,",
              "        CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              "    ),",
              "    CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay, 'DimCompany'[CompanyId] = Company)",
              ")",
              "",
              "RETURN Delta * Price"
            ]
          },
          {
            "name": "Client Value Delta New New",
            "expression": [
              " ",
              "VAR MaxDate = max('DimTimeTable'[Date])--CALCULATE(MAX('FactShareHolders'[Date]), 'DimCompany'[CompanyId] = SELECTEDVALUE('DimCompany'[CompanyId]))",
              "",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR Price = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTrade'[ClosePrice]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'DimCompany'[CompanyId] = Company",
              ")",
              "RETURN Price * [Client Volume Delta]"
            ]
          },
          {
            "name": "Client Value Delta Old",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "--VAR Company = SELECTEDVALUE('DimCompany'[CompanyId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "VAR MaxDate = CALCULATE(MAX('FactShareHolders'[Date]), 'DimCompany'[CompanyId] = Company)",
              "VAR Price = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTrade'[ClosePrice]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'DimCompany'[CompanyId] = Company",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    SUMX(",
              "        CALCULATETABLE(",
              "            VALUES('FactShareHolders'[ShareHolderId]),",
              "            ALLEXCEPT('FactShareHolders', 'FactShareHolders'[CompanyId])",
              "        ),",
              "        Price * [Client Volume Delta]",
              "    )",
              ")"
            ]
          },
          {
            "name": "Client Volume Delta",
            "expression": [
              " ",
              "SUM('FactShareHolders'[VolumeDelta])"
            ]
          },
          {
            "name": "Client Volume Delta %",
            "expression": [
              " ",
              "VAR PeriodFirstDay = CALCULATE(MIN('DimTimeTable'[Date]), NOT 'DimTimeTable'[IsNonWorking])",
              "RETURN ",
              "[Client Balance %] - CALCULATE([Client Balance %], 'DimTimeTable'[Date] = PeriodFirstDay)",
              "// -    DIVIDE([Client Balance] - [Client Volume Delta], CALCULATE([Client Balance] - [Client Volume Delta], All('DimShareHoldersProfile')))"
            ]
          },
          {
            "name": "Client Volume Delta GPT",
            "expression": [
              " ",
              "VAR PeriodFirstDay = MIN('DimTimeTable'[Date])",
              "VAR LastDay = ",
              "    CALCULATE(",
              "        MAX('DimTimeTable'[Date]),",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            PeriodFirstDay - 1",
              "        )",
              "        , NOT 'DimTimeTable'[IsNonWorking]",
              "    )",
              "",
              "VAR T1 = ",
              "    SUMMARIZE(",
              "        'FactShareHolders',",
              "        'FactShareHolders'[ShareHolderId],",
              "        \"CurrentBalance\", CALCULATE([Client Balance]),",
              "        \"LastDayBalance\", CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              "    )",
              "",
              "VAR Delta =",
              "    SUMX(",
              "        T1,",
              "        [LastDayBalance]",
              "    )",
              "",
              "RETURN Delta",
              ""
            ]
          },
          {
            "name": "Client Volume Delta New",
            "expression": [
              " ",
              "VAR T1 =  // All Share Holders of the selected Company and shareholders over time",
              "CALCULATETABLE(",
              "    VALUES('FactShareHolders'[ShareHolderId]),",
              "    ALLEXCEPT('FactShareHolders', 'FactShareHolders'[CompanyId])",
              ")",
              "VAR PeriodFirstDay = MIN('DimTimeTable'[Date]) ",
              "VAR LastDay = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    DATESBETWEEN(",
              "        'DimTimeTable'[Date],",
              "        BLANK(),",
              "        PeriodFirstDay - 1",
              "    )",
              "    , NOT 'DimTimeTable'[IsNonWorking]",
              ")",
              "VAR Delta =",
              "SUMX (",
              "    T1,",
              "    VAR CurrentBalance = CALCULATE([Client Balance])",
              "",
              "    VAR LastDayBalance = CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              "    RETURN CurrentBalance - LastDayBalance",
              ")",
              "RETURN Delta"
            ]
          },
          {
            "name": "Client Volume Delta Optimized",
            "expression": [
              " ",
              "VAR PeriodFirstDay = MIN('DimTimeTable'[Date])",
              "VAR LastDay = ",
              "    CALCULATE(",
              "        MAX('DimTimeTable'[Date]),",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            PeriodFirstDay - 1",
              "        )",
              "        , NOT 'DimTimeTable'[IsNonWorking]",
              "    )",
              "VAR T1 =  // All Share Holders of the selected Company and shareholders over time",
              "CALCULATETABLE(",
              "    VALUES('FactShareHolders'[ShareHolderId]),",
              "    ALLEXCEPT('FactShareHolders', 'FactShareHolders'[CompanyId])",
              ")",
              "",
              "VAR Delta =",
              "IF(",
              "    ISBLANK(SELECTEDVALUE('DimShareHoldersProfile'[ShareHolderId])),",
              "    SUMX(",
              "        T1,",
              "        CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              "    ),",
              "    CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              ")",
              "",
              "RETURN Delta"
            ]
          },
          {
            "name": "MAsdood",
            "expression": [
              " ",
              "CALCULATE(",
              "    [Client Balance],",
              "    CONTAINSSTRING('DimShareHoldersProfile'[FullName], \"وثیقه\")",
              ")"
            ]
          },
          {
            "name": "Total Masdood",
            "expression": " CALCULATE([MAsdood], ALL('DimShareHoldersProfile'))"
          },
          {
            "name": "Total Units",
            "expression": [
              " ",
              "CALCULATE([Client Balance], ALL('DimShareHoldersProfile'))--, 'DimShareHoldersProfile'[ShareHolderId] <> 59113)"
            ]
          },
          {
            "name": "Total Units Delta",
            "expression": [
              " ",
              "CALCULATE([Client Volume Delta], ALL('DimShareHoldersProfile'))--, 'DimShareHoldersProfile'[ShareHolderId] <>59113)"
            ]
          },
          {
            "name": "Client Volume Delta DAX",
            "expression": [
              " ",
              "VAR Fund = SELECTEDVALUE('DimFunds'[FundId])",
              "VAR Instrument = CALCULATETABLE(VALUES('DimFunds'[InstrumentId]), 'DimFunds'[FundId] = Fund)",
              "VAR Company = CALCULATE(SELECTEDVALUE('DimCompany'[CompanyId]), 'DimCompany'[InstrumentId] = Instrument)",
              "",
              "VAR PeriodFirstDay = MIN('DimTimeTable'[Date])",
              "VAR LastDay = ",
              "    CALCULATE(",
              "        MAX('DimTimeTable'[Date]),",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            PeriodFirstDay - 1",
              "        )",
              "        , NOT 'DimTimeTable'[IsNonWorking]",
              "    )",
              "VAR T1 =  // All Share Holders of the selected Company and shareholders over time",
              "CALCULATETABLE(",
              "    VALUES('FactShareHolders'[ShareHolderId]),",
              "    ALLEXCEPT('FactShareHolders', 'FactShareHolders'[CompanyId])",
              ")",
              "",
              "VAR Delta =",
              "IF(",
              "    ISBLANK(SELECTEDVALUE('DimShareHoldersProfile'[FullName])) || ISBLANK(SELECTEDVALUE('DimShareHoldersProfile'[FullName])),",
              "    SUMX(",
              "        T1,",
              "        CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay)",
              "    ),",
              "    CALCULATE([Client Balance]) - CALCULATE([Client Balance], 'DimTimeTable'[Date] = LastDay, 'DimCompany'[CompanyId] = Company)",
              ")",
              "",
              "RETURN Delta"
            ]
          }
        ]
      },
      {
        "name": "Competitors",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Competitors",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, 1, 1)"
            }
          }
        ],
        "measures": [
          {
            "name": "Competitors Value",
            "expression": " SELECTEDVALUE('Competitors'[Competitors], 0)"
          }
        ]
      },
      {
        "name": "@AUM",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, MAX('FactFunds'[AUM2]), 10^10)"
            }
          }
        ],
        "measures": [
          {
            "name": "Is AUM in range",
            "expression": [
              " ",
              "IF([AUM]>=[Min AUM] && [AUM] <= [Max AUM], 1,0)"
            ],
            "displayFolder": "AUM"
          },
          {
            "name": "Max AUM",
            "expression": " Max('@AUM'[Value])+0",
            "displayFolder": "AUM"
          },
          {
            "name": "Min AUM",
            "expression": " Min('@AUM'[Value])",
            "displayFolder": "AUM"
          }
        ]
      },
      {
        "name": "Manager AUMs",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "FinancialGroupName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "DimManager[FinancialGroupName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AUM",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AUM]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AUM including Private Portfolios",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AUM including Private Portfolios]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " ",
                "ADDCOLUMNS(",
                "    VALUES('DimManager'[FinancialGroupName]),",
                "    \"AUM\", CALCULATE([AUM New 3], 'DimTimeTable'[IsBeforeTheDayBeforeYesterday], NOT DimFunds[FundType] in {\"اختصاصی بازارگردانی\", \"جسورانه\", \"خصوصی\", \"پروژه‌ای\", \"املاک و مستغلات\"}),",
                "    \"AUM including Private Portfolios\", CALCULATE([AUM including Private Portfolios], 'DimTimeTable'[IsBeforeTheDayBeforeYesterday], NOT DimFunds[FundType] in {\"اختصاصی بازارگردانی\", \"جسورانه\", \"خصوصی\", \"پروژه‌ای\", \"املاک و مستغلات\"})",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "DimAsset",
        "columns": [
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "Asset",
            "dataType": "string",
            "sourceColumn": "Asset"
          },
          {
            "name": "AssetTypeId",
            "dataType": "int64",
            "sourceColumn": "AssetTypeId"
          },
          {
            "name": "AssetCompanyId",
            "dataType": "int64",
            "sourceColumn": "AssetCompanyId"
          },
          {
            "name": "AssetCompany",
            "dataType": "string",
            "sourceColumn": "AssetCompany"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimAsset = Source{[Schema=\"dbo\",Item=\"DimAsset\"]}[Data]",
                "in",
                "    dbo_DimAsset"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "test",
            "expression": " CALCULATE(count(DimAsset[AssetId]))"
          }
        ]
      },
      {
        "name": "FactShareStatus",
        "columns": [
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "ShareNo",
            "dataType": "int64",
            "sourceColumn": "ShareNo"
          },
          {
            "name": "Price",
            "dataType": "int64",
            "sourceColumn": "Price"
          },
          {
            "name": "AVGBuyPrice",
            "dataType": "double",
            "sourceColumn": "AVGBuyPrice"
          },
          {
            "name": "BreakEvenPrice",
            "dataType": "double",
            "sourceColumn": "BreakEvenPrice"
          },
          {
            "name": "TotalInvest",
            "dataType": "int64",
            "sourceColumn": "TotalInvest"
          },
          {
            "name": "ValueInDate",
            "dataType": "int64",
            "sourceColumn": "ValueInDate"
          },
          {
            "name": "PureValueInDate",
            "dataType": "int64",
            "sourceColumn": "PureValueInDate"
          },
          {
            "name": "PureDiffPrice",
            "dataType": "int64",
            "sourceColumn": "PureDiffPrice"
          },
          {
            "name": "PureDiffPercent",
            "dataType": "double",
            "sourceColumn": "PureDiffPercent"
          },
          {
            "name": "OwnershipPercent",
            "dataType": "double",
            "sourceColumn": "OwnershipPercent"
          },
          {
            "name": "LastDPS",
            "dataType": "int64",
            "sourceColumn": "LastDPS"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          },
          {
            "name": "PortfolioId",
            "dataType": "int64",
            "sourceColumn": "PortfolioId"
          },
          {
            "name": "SourceId",
            "dataType": "int64",
            "sourceColumn": "SourceId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactShareStatus = Source{[Schema=\"dbo\",Item=\"FactShareStatus\"]}[Data]",
                "in",
                "    dbo_FactShareStatus"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Portfolio Value",
            "expression": [
              "",
              "SUMX(",
              "    'FactShareStatus',",
              "    VAR t = 'FactShareStatus'[InstrumentId]",
              "    VAR d = //SELECTEDVALUE('DimTimeTable'[Date])",
              "    CALCULATE(",
              "        LASTNONBLANK(",
              "            DATESBETWEEN(",
              "                'DimTimeTable'[Date],",
              "                BLANK(),",
              "                CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "            ),",
              "            CALCULATE(COUNT('FactShareStatus'[TotalInvest]))",
              "        )",
              ") ",
              "    VAR p = CALCULATE([Ticker Price], 'DimTimeTable'[Date] = d , 'DimInstrument'[InstrumentId] = t)",
              "    RETURN",
              "    'FactShareStatus'[TotalInvest] ",
              "    //CALCULATE(COUNTROWS('FactTradeDetails'), DimTimeTable[Date] = d, 'DimInstrument'[InstrumentId] = t)+0",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Portfolio Value % AllSelected DimInstruments",
            "expression": [
              "",
              "DIVIDE(",
              "    [Portfolio Value],",
              "    CALCULATE(",
              "        [Portfolio Value] ,",
              "        --ALLEXCEPT('DimPortfolio', 'DimPortfolio'[PortfolioManager])--, 'DimPortfolio'[PortfolioManagerEn], 'DimPortfolio'[PortfolioManagerId])",
              "        --ALLEXCEPT('DimInstrument', 'DimInstrument'[Industry])",
              "        ALLSELECTED('DimInstrument')",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          }
        ]
      },
      {
        "name": "FactTrade",
        "columns": [
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "ClosePrice",
            "dataType": "double",
            "sourceColumn": "ClosePrice"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactTrade = Source{[Schema=\"dbo\",Item=\"FactTrade\"]}[Data]",
                "in",
                "    dbo_FactTrade"
              ]
            }
          }
        ]
      },
      {
        "name": "FactTradeDetails",
        "columns": [
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Time",
            "dataType": "dateTime",
            "sourceColumn": "Time"
          },
          {
            "name": "ClosePrice",
            "dataType": "double",
            "sourceColumn": "ClosePrice"
          },
          {
            "name": "AdjPrice",
            "dataType": "int64",
            "sourceColumn": "AdjPrice"
          },
          {
            "name": "TradeCount",
            "dataType": "int64",
            "sourceColumn": "TradeCount"
          },
          {
            "name": "PersonBuyerCount",
            "dataType": "int64",
            "sourceColumn": "PersonBuyerCount"
          },
          {
            "name": "CompanyBuyerCount",
            "dataType": "int64",
            "sourceColumn": "CompanyBuyerCount"
          },
          {
            "name": "PersonBuyVolume",
            "dataType": "int64",
            "sourceColumn": "PersonBuyVolume"
          },
          {
            "name": "CompanyBuyVolume",
            "dataType": "int64",
            "sourceColumn": "CompanyBuyVolume"
          },
          {
            "name": "PersonSellerCount",
            "dataType": "int64",
            "sourceColumn": "PersonSellerCount"
          },
          {
            "name": "CompanySellerCount",
            "dataType": "int64",
            "sourceColumn": "CompanySellerCount"
          },
          {
            "name": "PersonSellVolume",
            "dataType": "int64",
            "sourceColumn": "PersonSellVolume"
          },
          {
            "name": "CompanySellVolume",
            "dataType": "int64",
            "sourceColumn": "CompanySellVolume"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          },
          {
            "name": "ShareNo",
            "dataType": "double",
            "sourceColumn": "ShareNo"
          },
          {
            "name": "MarketCap",
            "dataType": "double",
            "sourceColumn": "MarketCap"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactTradeDetails = Source{[Schema=\"dbo\",Item=\"FactTradeDetails\"]}[Data]",
                "in",
                "    dbo_FactTradeDetails"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Ticker Price",
            "expression": [
              " ",
              "VAR t = SELECTEDVALUE('DimInstrument'[InstrumentId])",
              "VAR d = //SELECTEDVALUE('DimTimeTable'[Date])",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[AdjPrice]), 'FactTradeDetails'[InstrumentId] = t)",
              "    )",
              ") ",
              "",
              "RETURN",
              "CALCULATE(",
              "    SELECTEDVALUE('FactTradeDetails'[AdjPrice]), ",
              "    'DimTimeTable'[Date] = d, ",
              "    'DimInstrument'[InstrumentId] = t",
              ")"
            ]
          }
        ]
      },
      {
        "name": "DimIndustry",
        "columns": [
          {
            "name": "IndustryId",
            "dataType": "int64",
            "sourceColumn": "IndustryId"
          },
          {
            "name": "Industry",
            "dataType": "string",
            "sourceColumn": "Industry"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimIndustry = Source{[Schema=\"dbo\",Item=\"DimIndustry\"]}[Data]",
                "in",
                "    dbo_DimIndustry"
              ]
            }
          }
        ]
      },
      {
        "name": "DimIndex",
        "columns": [
          {
            "name": "IndexId",
            "dataType": "int64",
            "sourceColumn": "IndexId"
          },
          {
            "name": "IndexName",
            "dataType": "string",
            "sourceColumn": "IndexName"
          },
          {
            "name": "NameEn",
            "dataType": "string",
            "sourceColumn": "NameEn"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimIndex = Source{[Schema=\"dbo\",Item=\"DimIndex\"]}[Data]",
                "in",
                "    dbo_DimIndex"
              ]
            }
          }
        ]
      },
      {
        "name": "FactIndexValue",
        "columns": [
          {
            "name": "IndexId",
            "dataType": "int64",
            "sourceColumn": "IndexId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "CloseValue",
            "dataType": "int64",
            "sourceColumn": "CloseValue"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactIndexValue = Source{[Schema=\"dbo\",Item=\"FactIndexValue\"]}[Data]",
                "in",
                "    dbo_FactIndexValue"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% Index Return",
            "expression": [
              "",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactIndexValue'[CloseValue]))",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactIndexValue'[CloseValue]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactIndexValue'[CloseValue]), 'DimTimeTable'[Date] = BaseDate)",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactIndexValue'[CloseValue]), 'DimTimeTable'[Date] = MaxDate)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ]
          },
          {
            "name": "Return1",
            "expression": [
              "",
              "[% Index Return] + [Return]"
            ]
          }
        ]
      },
      {
        "name": "FactShareHolders",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "VolumeBalance",
            "dataType": "double",
            "sourceColumn": "VolumeBalance"
          },
          {
            "name": "VolumeDelta",
            "dataType": "double",
            "sourceColumn": "VolumeDelta"
          },
          {
            "name": "IsNew",
            "dataType": "boolean",
            "sourceColumn": "IsNew"
          },
          {
            "name": "IsLastDay",
            "dataType": "boolean",
            "sourceColumn": "IsLastDay"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"with ",
                "cte1 as ",
                "(SELECT a.[CompanyId]",
                "      ,a.[ShareHolderId]",
                "      ,a.[Date]",
                "      ,a.[VolumeBalance]",
                "    , a.[VolumeBalance] - isnull(b.[VolumeBalance],0) as VolumeDelta",
                "    ",
                "    from [FactShareHolders] A left join [FactShareHolders] B",
                "    on B.CompanyId = A.CompanyId AND B.ShareHolderId = A.ShareHolderId AND B.[Date] = (SELECT MAX([Date]) from [FactShareHolders] WHERE CompanyId = A.CompanyId AND ShareHolderId = A.ShareHolderId AND [Date] < A.Date)",
                "),",
                "",
                "cte2 as ",
                "(SELECT a.[CompanyId]",
                "      ,a.[ShareHolderId]",
                "      ,a.[Date]",
                "      ,a.[VolumeBalance]",
                "      , isnull((select VolumeBalance from FactShareHolders b where B.CompanyId = A.CompanyId AND B.ShareHolderId = A.ShareHolderId AND B.[Date] = (SELECT MIN([Date]) from [FactShareHolders] WHERE CompanyId = A.CompanyId AND ShareHolderId = A.ShareHolderId AND [Date] > A.Date)), 0) as NextDayBalance",
                "      --, isnull((select VolumeBalance from FactShareHolders b where B.CompanyId = A.CompanyId AND B.ShareHolderId = A.ShareHolderId AND B.[Date] = (SELECT MIN([Date]) from [DimTimeTable] WHERE [IsNonWorking] = 0 AND [Date] > A.Date)), 0) as NextDayBalance",
                "    from [FactShareHolders] A ",
                ")",
                "",
                "select cte1.*",
                ", case",
                "    when cte1.[VolumeBalance] = cte1.[VolumeDelta] then 1",
                "    else 0",
                "end as IsNew",
                ", case",
                "    when cte2.[NextDayBalance] = 0 then 1",
                "    else 0",
                "end as IsLastDay",
                "",
                "from cte1 left join cte2 on cte1.CompanyId = cte2.CompanyId and cte1.ShareHolderId = cte2.ShareHolderId and cte1.[Date] = cte2.[Date]\"]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"IsNew\", type logical}, {\"IsLastDay\", type logical}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ]
      },
      {
        "name": "Sold Out Clients",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "CompanyId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[CompanyId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ShareHolderId",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[ShareHolderId]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[Date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "VolumeBalance",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[VolumeBalance]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "VolumeDelta",
            "dataType": "double",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[VolumeDelta]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsNew",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[IsNew]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsLastDay",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "FactShareHolders[IsLastDay]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculatedTableColumn",
            "name": "Report Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Report Date]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " ",
                "ADDCOLUMNS(",
                "    FILTER(",
                "        'FactShareHolders', ",
                "        'FactShareHolders'[IsLastDay] = TRUE",
                "    ),",
                "    \"Report Date\",  ",
                "        CALCULATE(",
                "        MIN('DimTimeTable'[Date]),",
                "        FILTER(",
                "            'DimTimeTable', ",
                "            'DimTimeTable'[Date] > earlier('FactShareHolders'[Date])",
                "        )",
                "    )",
                "",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "DimInstrument",
        "columns": [
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "Instrument",
            "dataType": "string",
            "sourceColumn": "Instrument"
          },
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "InstrumentCode",
            "dataType": "string",
            "sourceColumn": "InstrumentCode"
          },
          {
            "name": "TypeId",
            "dataType": "int64",
            "sourceColumn": "TypeId"
          },
          {
            "name": "ExchangeId",
            "dataType": "int64",
            "sourceColumn": "ExchangeId"
          },
          {
            "name": "Exchange",
            "dataType": "string",
            "sourceColumn": "Exchange"
          },
          {
            "name": "MarketId",
            "dataType": "int64",
            "sourceColumn": "MarketId"
          },
          {
            "name": "Market",
            "dataType": "string",
            "sourceColumn": "Market"
          },
          {
            "name": "ExchangeState",
            "dataType": "int64",
            "sourceColumn": "ExchangeState"
          },
          {
            "name": "IndustryId",
            "dataType": "int64",
            "sourceColumn": "IndustryId"
          },
          {
            "name": "Industry",
            "dataType": "string",
            "sourceColumn": "Industry"
          },
          {
            "name": "CategoryId",
            "dataType": "int64",
            "sourceColumn": "CategoryId"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          },
          {
            "name": "IsDeleted",
            "dataType": "boolean",
            "sourceColumn": "IsDeleted"
          },
          {
            "type": "calculated",
            "name": "Instrument & Industry Label",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "'DimInstrument'[Instrument] &",
              "IF(",
              "    ISBLANK('DimInstrument'[Industry]),",
              "    \"\", ",
              "    \" (\" &",
              "    'DimInstrument'[Industry] &",
              "    \")\"",
              ")"
            ]
          },
          {
            "name": "AssetClassId",
            "dataType": "int64",
            "sourceColumn": "AssetClassId"
          },
          {
            "name": "AssetClassName",
            "dataType": "string",
            "sourceColumn": "AssetClassName"
          },
          {
            "name": "IsAffiliated",
            "dataType": "boolean",
            "sourceColumn": "IsAffiliated"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimInstrument = Source{[Schema=\"dbo\",Item=\"DimInstrument\"]}[Data]",
                "in",
                "    dbo_DimInstrument"
              ]
            }
          }
        ]
      },
      {
        "name": "FactReturns",
        "columns": [
          {
            "name": "Source",
            "dataType": "string",
            "sourceColumn": "Source"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          },
          {
            "name": "IndexId",
            "dataType": "int64",
            "sourceColumn": "IndexId"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description"
          },
          {
            "name": "TickerClosePrice",
            "dataType": "double",
            "sourceColumn": "TickerClosePrice"
          },
          {
            "name": "TickerAdjPrice",
            "dataType": "int64",
            "sourceColumn": "TickerAdjPrice"
          },
          {
            "name": "IndexValue",
            "dataType": "int64",
            "sourceColumn": "IndexValue"
          },
          {
            "name": "FundEfficiency",
            "dataType": "double",
            "sourceColumn": "FundEfficiency"
          },
          {
            "name": "FundMonthReturn",
            "dataType": "double",
            "sourceColumn": "FundMonthReturn"
          },
          {
            "name": "FundDayReturn",
            "dataType": "double",
            "sourceColumn": "FundDayReturn"
          },
          {
            "name": "FundWeekReturn",
            "dataType": "double",
            "sourceColumn": "FundWeekReturn"
          },
          {
            "name": "FundYearReturn",
            "dataType": "double",
            "sourceColumn": "FundYearReturn"
          },
          {
            "name": "FundQuarterReturn",
            "dataType": "double",
            "sourceColumn": "FundQuarterReturn"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"#(lf)SELECT#(lf)    'Funds' AS Source,#(lf)    ViwFundsPivot.[Date],#(lf)    ViwFundsPivot.FundId,#(lf)    DimFunds.InstrumentId AS InstrumentId,#(lf)    NULL AS IndexId,#(lf)    DimFunds.FundShortName AS Description,#(lf)    Efficiency AS FundEfficiency,#(lf)    MonthReturn AS FundMonthReturn,#(lf)    DayReturn AS FundDayReturn,#(lf)    WeekReturn AS FundWeekReturn,#(lf)    YearReturn AS FundYearReturn,#(lf)    QuarterReturn AS FundQuarterReturn,#(lf)    FactFundsSplit.SubscriptionPrice,#(lf)    FactFundsSplit.RedemptionPrice,#(lf)    FactFundsSplit.StatisticalPrice,#(lf)    Null as TickerClosePrice,#(lf)    Null as TickerAdjPrice, #(lf)    Null as IndexValue #(lf)FROM ViwFundsPivot#(lf)JOIN DimFunds ON ViwFundsPivot.FundId = DimFunds.FundId inner join FactFundsSplit on FactFundsSplit.[Date] = ViwFundsPivot.[Date] and FactFundsSplit.FundId = ViwFundsPivot.FundId#(lf)UNION ALL#(lf)#(lf)    SELECT#(lf)        'Tickers' AS Source,#(lf)        FactTradeDetails.[Date],#(lf)        NULL AS FundId,#(lf)        FactTradeDetails.InstrumentId,#(lf)        NULL AS IndexId,#(lf)        DimInstrument.Instrument AS Description,#(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        FactTradeDetails.ClosePrice,#(lf)        FactTradeDetails.AdjPrice,#(lf)        Null#(lf)    FROM FactTradeDetails#(lf)    JOIN DimInstrument ON FactTradeDetails.InstrumentId = DimInstrument.InstrumentId#(lf)#(lf)    UNION ALL#(lf)#(lf)    SELECT#(lf)        'Indexes' AS Source,#(lf)        FactIndexValue.[Date],#(lf)        NULL AS FundId,#(lf)        NULL AS InstrumentId,#(lf)        FactIndexValue.IndexId,#(lf)        DimIndex.IndexName AS Description,#(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        Null, #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue , #(lf)        FactIndexValue.CloseValue    #(lf)    FROM FactIndexValue#(lf)    JOIN DimIndex ON FactIndexValue.IndexId = DimIndex.IndexId#(lf)\", CreateNavigationProperties=false])",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% Fund Return on NAV",
            "expression": [
              "",
              "// added filter:",
              "// , 'FactReturns'[FundId] = Fund",
              "// to all Calculate functions so that if a fund and an index are selected in FactReturns, it would calculate funds performance only",
              "",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[RedemptionPrice]), 'FactReturns'[FundId] = Fund)",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[RedemptionPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "IF(",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both), 'FactReturns'[FundId] = Fund)= \"Fixed Income\",",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund),",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund)",
              ")",
              "",
              "VAR EndFinal = ",
              "IF(",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both), 'FactReturns'[FundId] = Fund)= \"Fixed Income\",",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund),",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund)",
              ")",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Fund Return on NAV Cum",
            "expression": [
              "",
              "// added filter:",
              "// , 'FActReturns'[FundId] = Fund",
              "// to all Calculate functions so that if a fund and an index are selected in FactReturns, it would calculate funds performance only",
              "",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])), ALLSELECTED('DimTimeTable'))",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[RedemptionPrice]), 'FactReturns'[FundId] = Fund)",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[RedemptionPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "IF(",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both), 'FactReturns'[FundId] = Fund)= \"Fixed Income\",",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund),",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund)",
              ")",
              "",
              "VAR EndFinal = ",
              "IF(",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both), 'FactReturns'[FundId] = Fund)= \"Fixed Income\",",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund),",
              "    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund)",
              ")",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R",
              "",
              "//VAR BaseDate = ",
              "//CALCULATE(",
              "//    LASTNONBLANK(",
              "//        DATESBETWEEN(",
              "//            'DimTimeTable'[Date],",
              "//            BLANK(),",
              "//            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])), ALLSELECTED('DimTimeTable'[Date]))",
              "//        ),",
              "//        CALCULATE(COUNT('FactReturns'[RedemptionPrice]))",
              "//    )",
              "//) ",
              "",
              "//VAR MaxDate = ",
              "//CALCULATE(",
              "//    LASTNONBLANK(",
              "//        DATESBETWEEN(",
              "//            'DimTimeTable'[Date],",
              "//            BLANK(),",
              "//            LASTDATE('DimTimeTable'[Date])",
              "//        ),",
              "//        CALCULATE(COUNT('FactReturns'[RedemptionPrice]))",
              "//        )",
              "//)",
              "",
              "//VAR BaseFinal = ",
              "//IF(",
              "//    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both))= \"Fixed Income\",",
              "//    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = BaseDate),",
              "//    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate)",
              "//)",
              "",
              "//VAR EndFinal = ",
              "//IF(",
              "//    CALCULATE(SELECTEDVALUE('DimFunds'[FundTypeEn]), CROSSFILTER('FactReturns'[FundId], 'DimFunds'[FundId],Both))= \"Fixed Income\",",
              "//    CALCULATE(SELECTEDVALUE('FactReturns'[StatisticalPrice]), 'DimTimeTable'[Date] = MaxDate),",
              "//    CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = MaxDate)",
              "//)",
              "",
              "//VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "//RETURN R"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Fund Alpha on NAV Cum",
            "expression": [
              "",
              "CALCULATE(",
              "\t[% Fund Return on NAV Cum]",
              ")",
              "-",
              "CALCULATE(",
              "\t[% Fund Return on NAV Cum]",
              "\t, 'FactReturns'[IndexId] = 67  // شاخص کل",
              "\t, ALL('FactReturns'[Description]),",
              "\tALL('FactReturns'[Source]",
              "))"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Fund Return on NAV Cum Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    MAX('DimTimeTable'[Date]) = MaxDate,",
              "    FORMAT([% Fund Return on NAV Cum], \"0.0%\"),",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% TEDPIX Return Cum",
            "expression": [
              "",
              "//CALCULATE(",
              "//    [% Fund Return on NAV Cum],",
              "//    'FactReturns'[indexId] = 67",
              "//    --All('FactReturns'[Description], 'FactReturns'[FundId], factr),",
              "//    , REMOVEFILTERS('FactReturns'[FundId], 'FactReturns'[InstrumentId])",
              "//    , ALL('DimFunds')",
              "//    , ALL('DimManager')",
              "",
              "//)",
              "",
              "VAR Index = 67",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])), ALLSELECTED('DimTimeTable'))",
              "        ),",
              "        //CALCULATE(COUNT('FactReturns'[IndexValue]), 'FactReturns'[IndexId] = Index, ALLEXCEPT('FactReturns', 'FactReturns'[Date]))",
              "CALCULATE(COUNT('FactIndexValue'[CloseValue]), 'FactIndexValue'[IndexId] = Index)//, ALLEXCEPT('FactReturns', 'FactReturns'[Date]))",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        //CALCULATE(COUNT('FactReturns'[IndexValue]), 'FactReturns'[IndexId] = Index, ALL('FactReturns'))",
              "        CALCULATE(COUNT('FactIndexValue'[CloseValue]), 'FactIndexValue'[IndexId] = Index)",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactReturns'[IndexValue]), ",
              "    'DimTimeTable'[Date] = BaseDate, ",
              "    'FactReturns'[IndexId] = Index,",
              "    REMOVEFILTERS('FactReturns')",
              "    //ALL('FactReturns')",
              ")",
              "",
              "VAR EndFinal = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactReturns'[IndexValue]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'FactReturns'[IndexId] = Index,",
              "    ALL('FactReturns')",
              ")",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% TEDPIX Return Cum Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "VAR Label =",
              "IF(",
              "    MAX('DimTimeTable'[Date]) = MaxDate,",
              "    FORMAT([% TEDPIX Return Cum], \"0.0%\"),",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Rebased 100 NAV (FactReturns)",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[RedemptionPrice]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR BaseClose = CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate)",
              "VAR CurrentDate = CALCULATE(SELECTEDVALUE('DimTimeTable'[Date]))",
              "-- VAR Rebased = DIVIDE(SUM('TurquoiseStocks'[Adj NAVPU]), BaseClose)*100",
              "VAR FinalClose = CALCULATE(SELECTEDVALUE('FactReturns'[RedemptionPrice]))",
              "VAR Rebased = DIVIDE(FinalClose, BaseClose) * 100",
              "",
              "RETURN IF(CurrentDate = CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable')), 100, Rebased)"
            ]
          },
          {
            "name": "Rebased 0 NAV (FactReturns)",
            "expression": [
              " ",
              "[Rebased 100 NAV (FactReturns)] /100 - if(ISBLANK([Rebased 100 NAV (FactReturns)]), BLANK(), 1) "
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Return on Index Range",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "VAR Y = if(year(EDATE(MaxDate, -'@Months'[Months Value])) < year(MaxDate), YEAR(MaxDate)-1, year(maxdate))",
              "VAR MinDate = ",
              "CALCULATE(ENDOFMONTH('DimTimeTable'[Date]), filter(ALL('DimTimeTable'),'DimTimeTable'[Date] = EDATE(MaxDate, -'@Months'[Months Value]))) + 1",
              "RETURN ",
              "CALCULATE(",
              "    [% TEDPIX Return Cum],",
              "    DATESBETWEEN(",
              "        'DimTimeTable'[Date],",
              "        MinDate,",
              "        MaxDate",
              "    ), ALL('FactReturns')",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Return on NAV Range",
            "expression": [
              " ",
              "// VAR Fund = SELECTEDVALUE('FactReturns'[FundId])",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]),",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "VAR Y = if(year(EDATE(MaxDate, -'@Months'[Months Value])) < year(MaxDate), YEAR(MaxDate)-1, year(maxdate))",
              "VAR MinDate = ",
              "CALCULATE(ENDOFMONTH('DimTimeTable'[Date]), filter(ALL('DimTimeTable'),'DimTimeTable'[Date] = EDATE(MaxDate, -'@Months'[Months Value]))) + 1",
              "RETURN ",
              "    CALCULATE(",
              "        [% Fund Return on NAV Cum],",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            MinDate,",
              "            MaxDate",
              "        ),",
              "        'DimFunds'[FundId] = Fund",
              "    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "name": "% Return on Price Cum",
            "expression": [
              " ",
              "// added filter:",
              "// , 'FactReturns'[FundId] = Fund",
              "// to all Calculate functions so that if a fund and an index are selected in FactReturns, it would calculate funds performance only",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])), ALLSELECTED('DimTimeTable'), 'FactReturns'[FundId] = Fund)",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[TickerAdjPrice]))",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[TickerAdjPrice]), 'FactReturns'[FundId] = Fund)",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactReturns'[TickerAdjPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactReturns'[TickerAdjPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(), DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Return on Price Cum Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable'[Date])",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    SELECTEDVALUE('DimTimeTable'[Date]) = MaxDate,",
              "    FORMAT([% Return on Price Cum], \"0.0%\"),",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ]
          },
          {
            "name": "% TEDPIX Return",
            "expression": [
              " ",
              "VAR Index = 67",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        //CALCULATE(COUNT('FactReturns'[IndexValue]), 'FactReturns'[IndexId] = Index, ALLEXCEPT('FactReturns', 'FactReturns'[Date]))",
              "CALCULATE(COUNT('FactIndexValue'[CloseValue]), 'FactIndexValue'[IndexId] = Index)//, ALLEXCEPT('FactReturns', 'FactReturns'[Date]))",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        //CALCULATE(COUNT('FactReturns'[IndexValue]), 'FactReturns'[IndexId] = Index, ALL('FactReturns'))",
              "        CALCULATE(COUNT('FactIndexValue'[CloseValue]), 'FactIndexValue'[IndexId] = Index)",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactReturns'[IndexValue]), ",
              "    'DimTimeTable'[Date] = BaseDate, ",
              "    'FactReturns'[IndexId] = Index,",
              "    REMOVEFILTERS('FactReturns')",
              "    //ALL('FactReturns')",
              ")",
              "",
              "VAR EndFinal = ",
              "CALCULATE(",
              "    SELECTEDVALUE('FactReturns'[IndexValue]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'FactReturns'[IndexId] = Index,",
              "    ALL('FactReturns')",
              ")",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Return on Price",
            "expression": [
              " ",
              "// added filter:",
              "// , 'FactReturns'[FundId] = Fund",
              "// to all Calculate functions so that if a fund and an index are selected in FactReturns, it would calculate funds performance only",
              "VAR Fund = CALCULATE(SELECTEDVALUE('FactReturns'[FundId]), NOT ISBLANK('FactReturns'[FundId]))",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])), 'FactReturns'[FundId] = Fund)",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[TickerAdjPrice]))",
              "    )",
              ") ",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactReturns'[TickerAdjPrice]), 'FactReturns'[FundId] = Fund)",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactReturns'[TickerAdjPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactReturns'[FundId] = Fund)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactReturns'[TickerAdjPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactReturns'[FundId] = Fund)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(), DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Equity Funds Return Percentile Value Cum Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    MAX('DimTimeTable'[Date]) = MaxDate,",
              "    FORMAT([Equity Funds Return Percentile Value Cum], \"0.0%\"),",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ]
          },
          {
            "name": "% Fixed Income Funds Return Percentile Value Cum Label",
            "expression": [
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    MAX('DimTimeTable'[Date]), ",
              "    ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR Label =",
              "IF(",
              "    MAX('DimTimeTable'[Date]) = MaxDate,",
              "    FORMAT([Fixed Income Funds Return Percentile Value Cum], \"0.0%\"),",
              "    --[% Fund Return on NAV Cum],",
              "    \" \"",
              ")",
              "RETURN Label",
              "",
              "",
              ""
            ]
          }
        ]
      },
      {
        "name": "@Months",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Months",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "GENERATESERIES(1, 12, 1)"
            }
          }
        ],
        "measures": [
          {
            "name": "Months Value",
            "expression": " SELECTEDVALUE('@Months'[Months])"
          }
        ]
      },
      {
        "name": "@Percentile",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, 100, 1)"
            }
          }
        ],
        "measures": [
          {
            "name": "@Percentile",
            "expression": [
              " ",
              "SELECTEDVALUE('@Percentile'[Value])"
            ]
          }
        ]
      },
      {
        "name": "Trades Measures",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 5}"
            }
          }
        ],
        "measures": [
          {
            "name": "% Individual Trade Turnover",
            "expression": [
              " ",
              "DIVIDE(",
              "    [Individual Buyers Value] + [Individual Seller Value], ",
              "    CALCULATE([AUM], NOT ISBLANK('DimFunds'[InstrumentId])) ",
              ") / 2"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Trade Turnover",
            "expression": [
              " ",
              "DIVIDE([Trade Value], CALCULATE([AUM], NOT ISBLANK('DimFunds'[InstrumentId]))",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "% Trade Turnover Competitors",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Trade Turnover], ",
              "    ALL('DimFunds'), ",
              "    'DimManager'[IsCompetitor]",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Business Buyers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanyBuyerCount]",
              ")"
            ]
          },
          {
            "name": "Business Buyers Value",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanyBuyVolume] * 'FactTradeDetails'[Value] / 'FactTradeDetails'[Volume]",
              ")"
            ]
          },
          {
            "name": "Business Buyers Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanyBuyVolume]",
              ")"
            ]
          },
          {
            "name": "Business Seller Value",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanySellVolume] * 'FactTradeDetails'[Value] / 'FactTradeDetails'[Volume]",
              ")"
            ]
          },
          {
            "name": "Business Seller Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanySellVolume]",
              ")"
            ]
          },
          {
            "name": "Business Sellers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[CompanySellerCount]",
              ")"
            ]
          },
          {
            "name": "Buyers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonBuyerCount]",
              ")"
            ]
          },
          {
            "name": "Buyers Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonBuyVolume]",
              ")"
            ]
          },
          {
            "name": "Firouzeh Individual Buyers Count",
            "expression": [
              " ",
              "CALCULATE(",
              "    [Individual Buyers Count],",
              "    'DimManager'[FinancialGroupName] = \"فیروزه\"",
              ")"
            ]
          },
          {
            "name": "Firouzeh Individual Buyers Count %",
            "expression": [
              " ",
              "DIVIDE(",
              "    [Firouzeh Individual Buyers Count],",
              "    CALCULATE(",
              "        [Individual Buyers Count],",
              "        FILTER(",
              "            ALLEXCEPT('DimFunds', DimFunds[FundType]),",
              "            'DimFunds'[TypeOfInvest] ",
              "        )   ",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Individual Buyers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonBuyerCount]",
              ")"
            ]
          },
          {
            "name": "Individual Buyers Count %",
            "expression": [
              " ",
              "DIVIDE(",
              "    [Individual Buyers Count],",
              "    CALCULATE(",
              "        [Individual Buyers Count],",
              "        FILTER(",
              "            ALLEXCEPT('DimFunds', DimFunds[FundType]),",
              "            'DimFunds'[TypeOfInvest] ",
              "        )   ",
              "    )",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Individual Buyers Count DoD %",
            "expression": [
              " ",
              "VAR CurrentDay = ",
              "SELECTEDVALUE('DimTimeTable'[Date])",
              "",
              "VAR LastDay = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CurrentDay - 1",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[PersonBuyerCount])",
              "        )",
              "    )",
              ")",
              "",
              "VAR CurrentDayBuyerCount = [Individual Buyers Count]",
              "VAR LastDayBuyerCount = ",
              "CALCULATE(",
              "    [Individual Buyers Count],",
              "    'DimTimeTable'[Date] = LastDay ",
              ")",
              "",
              "RETURN ",
              "DIVIDE(",
              "    CurrentDayBuyerCount,",
              "    LastDayBuyerCount",
              ") - 1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Individual Buyers Size",
            "expression": [
              " ",
              "[Individual Buyers Value] / [Individual Buyers Count]"
            ]
          },
          {
            "name": "Individual Buyers Value",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonBuyVolume] * 'FactTradeDetails'[Value] / 'FactTradeDetails'[Volume]",
              ")"
            ]
          },
          {
            "name": "Individual Buyers Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonBuyVolume]",
              ")"
            ]
          },
          {
            "name": "Individual Seller Value",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonSellVolume] * 'FactTradeDetails'[Value] / 'FactTradeDetails'[Volume]",
              ")"
            ]
          },
          {
            "name": "Individual Seller Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonSellerCount]",
              ")"
            ]
          },
          {
            "name": "Individual Sellers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonSellerCount]",
              ")"
            ]
          },
          {
            "name": "Individual Sellers Count DoD %",
            "expression": [
              " ",
              "VAR CurrentDay = ",
              "SELECTEDVALUE('DimTimeTable'[Date])",
              "",
              "VAR LastDay = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CurrentDay - 1",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[PersonSellerCount])",
              "        )",
              "    )",
              ")",
              "",
              "VAR CurrentDayBuyerCount = [Individual Sellers Count]",
              "VAR LastDayBuyerCount = ",
              "CALCULATE(",
              "    [Individual Sellers Count],",
              "    'DimTimeTable'[Date] = LastDay ",
              ")",
              "",
              "RETURN ",
              "DIVIDE(",
              "    CurrentDayBuyerCount,",
              "    LastDayBuyerCount",
              ") - 1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Sellers Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonSellerCount]",
              ")"
            ]
          },
          {
            "name": "Sellers Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[PersonSellVolume]",
              ")"
            ]
          },
          {
            "name": "Trade Count",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[TradeCount]",
              ")"
            ]
          },
          {
            "name": "Trade Value",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[Value]",
              ")"
            ]
          },
          {
            "name": "Trade Value DoD %",
            "expression": [
              " ",
              "VAR CurrentDay = ",
              "SELECTEDVALUE('DimTimeTable'[Date])",
              "",
              "VAR LastDay = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CurrentDay - 1",
              "        ),",
              "        CALCULATE(COUNT('FactTradeDetails'[Value])",
              "        )",
              "    )",
              ")",
              "",
              "VAR CurrentTradeValue = [Trade Value]",
              "VAR LastDayTradeValue = ",
              "CALCULATE(",
              "    [Trade Value],",
              "    'DimTimeTable'[Date] = LastDay ",
              ")",
              "",
              "RETURN ",
              "DIVIDE(",
              "    CurrentTradeValue,",
              "    LastDayTradeValue",
              ") - 1"
            ],
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Trade Volume",
            "expression": [
              " ",
              "SUMX(",
              "    'FactTradeDetails',",
              "    'FactTradeDetails'[Volume]",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Global Measures",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "{1}",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "Titles",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Titles",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          },
          {
            "type": "calculated",
            "name": "Compound Titles",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{\"Titles\"}"
            }
          }
        ],
        "measures": [
          {
            "name": "Title - Dates",
            "expression": [
              "",
              "VAR MinDay = MIN('DimTimeTable'[DateKey])",
              "VAR MaxDay = MAX('DimTimeTable'[DateKey])",
              "RETURN \"(\" & MinDay & \" to \" & MaxDay & \")\"",
              "",
              ""
            ]
          },
          {
            "name": "Title Subscriptions",
            "expression": [
              "",
              "\"Subscriptions - \" & [Title - Fund Type] & [Title - Fund Sub Type] & \" - \" & [Title - Dates]"
            ]
          },
          {
            "name": "Title - Fund Type",
            "expression": [
              "",
              "VAR NumToShow = 3",
              "VAR T1 =",
              "",
              "ADDCOLUMNS(",
              "    VALUES('DimFunds'[FundTypeEn]),",
              "    \"Rank\", ",
              "    RANKX(",
              "        VALUES('DimFunds'[FundTypeEn]),",
              "        [AUM],",
              "        ,",
              "        DESC",
              "    )",
              ")",
              "",
              "VAR T2 = ",
              "FILTER(",
              "    T1,",
              "    [Rank] <= NumToShow",
              ")",
              "        ",
              "//IF(",
              "//    ISFILTERED('DimFunds'[FundType]),",
              "//    CONCATENATEX(",
              "//        VALUES('DimFunds'[FundTypeEn]),",
              "//        'DimFunds'[FundTypeEn],",
              "//        \",\"",
              "//    ),",
              "//    \" - \" & \"All Funds -\"",
              "//)",
              "RETURN",
              "IF(",
              "    ISFILTERED('DimFunds'[FundType]),",
              "    CONCATENATEX(",
              "        T2,",
              "        'DimFunds'[FundTypeEn],",
              "        \", \"",
              "    ) &",
              "    IF(COUNTROWS(T1) > NumToShow, \", etc\"),",
              "    \" - \" & \"All Funds -\"",
              ")",
              ""
            ]
          },
          {
            "name": "Title Subscriptions - Trailing 3 Months",
            "expression": [
              "",
              "\"Subscriptions T3 - \" & [Title - Fund Type] & \" - \" & [Title - Dates]"
            ]
          },
          {
            "name": "Title - Fund Sub Type",
            "expression": [
              "",
              "IF(",
              "    ISFILTERED('DimFunds'[FundSubType]),",
              "    \"(\" & CONCATENATEX(",
              "        VALUES('DimFunds'[FundSubTypeEn]),",
              "        'DimFunds'[FundSubTypeEn], ",
              "        \", \"",
              "    ) & \")\",",
              "    \"\"",
              ")",
              "",
              ""
            ]
          },
          {
            "name": "Title - Portfo Names",
            "expression": [
              "",
              "VAR NumToShow = 3",
              "VAR T1 =",
              "",
              "ADDCOLUMNS(",
              "    VALUES('FactReturns'[Description]),",
              "    \"Rank\", ",
              "    RANKX(",
              "        VALUES('FactReturns'[Description]),",
              "        [AUM],",
              "        ,",
              "        DESC",
              "    )",
              ")",
              "",
              "VAR T2 = ",
              "FILTER(",
              "    T1,",
              "    [Rank] <= NumToShow",
              ")",
              "        ",
              "RETURN",
              "IF(",
              "    ISFILTERED('FactReturns'[Description]),",
              "    CONCATENATEX(",
              "        T2,",
              "        'FactReturns'[Description],",
              "        \", \"",
              "    ) &",
              "    IF(COUNTROWS(T1) > NumToShow, \", etc\"),",
              "    \" - \" & \"All Funds -\"",
              ")",
              ""
            ]
          }
        ]
      },
      {
        "name": "DimPortfolio",
        "columns": [
          {
            "name": "PortfolioId",
            "dataType": "int64",
            "sourceColumn": "PortfolioId"
          },
          {
            "name": "PortfolioName",
            "dataType": "string",
            "sourceColumn": "PortfolioName"
          },
          {
            "name": "PortfolioNameEn",
            "dataType": "string",
            "sourceColumn": "PortfolioNameEn"
          },
          {
            "name": "PRX",
            "dataType": "string",
            "sourceColumn": "PRX"
          },
          {
            "name": "PortfolioManagerId",
            "dataType": "int64",
            "sourceColumn": "PortfolioManagerId"
          },
          {
            "name": "PortfolioManager",
            "dataType": "string",
            "sourceColumn": "PortfolioManager"
          },
          {
            "name": "PortfolioManagerEn",
            "dataType": "string",
            "sourceColumn": "PortfolioManagerEn"
          },
          {
            "name": "Status",
            "dataType": "string",
            "sourceColumn": "Status"
          },
          {
            "name": "StatusEn",
            "dataType": "string",
            "sourceColumn": "StatusEn"
          },
          {
            "name": "Type",
            "dataType": "string",
            "sourceColumn": "Type"
          },
          {
            "name": "TypeEn",
            "dataType": "string",
            "sourceColumn": "TypeEn"
          },
          {
            "name": "RiskProfile",
            "dataType": "string",
            "sourceColumn": "RiskProfile"
          },
          {
            "name": "RiskProfileEn",
            "dataType": "string",
            "sourceColumn": "RiskProfileEn"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          },
          {
            "name": "CategoryEn",
            "dataType": "string",
            "sourceColumn": "CategoryEn"
          },
          {
            "name": "BroadcastList",
            "dataType": "string",
            "sourceColumn": "BroadcastList"
          },
          {
            "name": "BroadcastListEn",
            "dataType": "string",
            "sourceColumn": "BroadcastListEn"
          },
          {
            "name": "Introducer",
            "dataType": "string",
            "sourceColumn": "Introducer"
          },
          {
            "name": "IntroducerEn",
            "dataType": "string",
            "sourceColumn": "IntroducerEn"
          },
          {
            "name": "IsOnline",
            "dataType": "boolean",
            "sourceColumn": "IsOnline"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "RegionEn",
            "dataType": "string",
            "sourceColumn": "RegionEn"
          },
          {
            "name": "TEL",
            "dataType": "string",
            "sourceColumn": "TEL"
          },
          {
            "name": "Email",
            "dataType": "string",
            "sourceColumn": "Email"
          },
          {
            "name": "MoreInfo",
            "dataType": "string",
            "sourceColumn": "MoreInfo"
          },
          {
            "name": "IsCompany",
            "dataType": "boolean",
            "sourceColumn": "IsCompany"
          },
          {
            "type": "calculated",
            "name": "PortfolioType",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "'DimPortfolio'[IsCompany],",
              "\"Company\",",
              "\"PRX\"",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimPortfolio = Source{[Schema=\"dbo\",Item=\"DimPortfolio\"]}[Data]",
                "in",
                "    dbo_DimPortfolio"
              ]
            }
          }
        ]
      },
      {
        "name": "FactDPS",
        "columns": [
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "FiscalYear",
            "dataType": "string",
            "sourceColumn": "FiscalYear"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "EPS",
            "dataType": "double",
            "sourceColumn": "EPS"
          },
          {
            "name": "DPS",
            "dataType": "double",
            "sourceColumn": "DPS"
          },
          {
            "name": "Capital",
            "dataType": "double",
            "sourceColumn": "Capital"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactDPS = Source{[Schema=\"dbo\",Item=\"FactDPS\"]}[Data]",
                "in",
                "    dbo_FactDPS"
              ]
            }
          }
        ]
      },
      {
        "name": "FactCapitalIncrease",
        "columns": [
          {
            "name": "AssetId",
            "dataType": "int64",
            "sourceColumn": "AssetId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "PreviousCapital",
            "dataType": "double",
            "sourceColumn": "PreviousCapital"
          },
          {
            "name": "NewCapital",
            "dataType": "double",
            "sourceColumn": "NewCapital"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactCapitalIncrease = Source{[Schema=\"dbo\",Item=\"FactCapitalIncrease\"]}[Data]",
                "in",
                "    dbo_FactCapitalIncrease"
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "653d436e-826a-4021-a18c-5559f14b41a0",
        "fromTable": "DimFunds",
        "fromColumn": "ManagerId",
        "toTable": "DimManager",
        "toColumn": "ManagerId"
      },
      {
        "name": "d619a5ef-c1df-4cb9-818d-eafc003123f9",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "ShareHolderId",
        "toTable": "DimShareHoldersProfile",
        "toColumn": "ShareHolderId"
      },
      {
        "name": "713095e2-a744-4ca0-9886-cc42fba986cb",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "CompanyId",
        "toTable": "DimCompany",
        "toColumn": "CompanyId"
      },
      {
        "name": "a83990ff-984b-4271-9c7b-9bd274f49143",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "FundAssetId",
        "toTable": "DimFundAssets",
        "toColumn": "FundAssetId"
      },
      {
        "name": "ab2fb658-f51d-4735-9589-735b4d3aff96",
        "fromTable": "FactFunds",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "5c35a801-afd0-40e2-b1fb-ca985805c79a",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "1a1e2522-539c-4527-8bf7-88fd54842076",
        "fromTable": "FactFundsSplit",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "71d01ad5-5aeb-48b5-99f6-8dc9729b32a1",
        "fromTable": "FactFunds",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "b0c54b11-9ec5-411b-a33e-283ab505ede4",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "a8567a96-8ca5-4b2d-bb0a-a803b1cc8934",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "4e37cd05-a024-4158-aa48-a4550e401cc3",
        "fromTable": "FactFundsSplit",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "d63827ed-03fe-4e43-be18-6b22828fd757",
        "fromTable": "FactManagerAUM",
        "fromColumn": "DDate",
        "toTable": "DimTimeTable",
        "toColumn": "DateKey"
      },
      {
        "name": "8929441b-a055-43bb-8156-e5609878a5a4",
        "fromTable": "FactManagerAUM",
        "fromColumn": "ManagerId",
        "toTable": "DimManager",
        "toColumn": "ManagerId"
      },
      {
        "name": "9db6f0fb-61ef-4069-9a4d-4b44680f1a8d",
        "fromTable": "FactShareStatus",
        "fromColumn": "AssetId",
        "toTable": "DimAsset",
        "toColumn": "AssetId"
      },
      {
        "name": "3aa30891-d6b1-4fb6-8ea3-72f94a7e772d",
        "fromTable": "FactTrade",
        "fromColumn": "AssetId",
        "toTable": "DimAsset",
        "toColumn": "AssetId"
      },
      {
        "name": "9aaa1f37-7565-4f5c-b766-0cbad988564a",
        "fromTable": "FactShareHolders",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "500aec78-4201-426b-bc40-ea79561b051d",
        "fromTable": "Sold Out Clients",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "ed9c26ed-ec14-4f46-84c6-2c7c4ce5f88b",
        "fromTable": "FactShareHolders",
        "fromColumn": "ShareHolderId",
        "toTable": "DimShareHoldersProfile",
        "toColumn": "ShareHolderId"
      },
      {
        "name": "a3c32d52-90b8-44db-aa55-1d2ef139b73a",
        "fromTable": "Sold Out Clients",
        "fromColumn": "ShareHolderId",
        "toTable": "DimShareHoldersProfile",
        "toColumn": "ShareHolderId"
      },
      {
        "name": "d4f20adc-c69e-46f0-99fe-08c1176c4b74",
        "fromTable": "Sold Out Clients",
        "fromColumn": "CompanyId",
        "toTable": "DimCompany",
        "toColumn": "CompanyId"
      },
      {
        "name": "f7e14484-c2c4-4608-b6c6-61971cbcd541",
        "fromTable": "FactShareHolders",
        "fromColumn": "CompanyId",
        "toTable": "DimCompany",
        "toColumn": "CompanyId"
      },
      {
        "name": "72e6fdf6-2277-4d3e-bb05-96c129274ad5",
        "fromCardinality": "one",
        "fromTable": "DimCompany",
        "fromColumn": "InstrumentId",
        "toTable": "DimInstrument",
        "toColumn": "InstrumentId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "6c229887-68ca-455d-9f16-d4385c7293af",
        "fromTable": "FactTrade",
        "fromColumn": "InstrumentId",
        "toTable": "DimInstrument",
        "toColumn": "InstrumentId"
      },
      {
        "name": "97b023c1-e102-46b7-b449-a993532079e3",
        "fromTable": "FactTradeDetails",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "c7270c50-a117-4fd5-9721-cb4539bc72ef",
        "fromTable": "FactTradeDetails",
        "fromColumn": "InstrumentId",
        "toTable": "DimInstrument",
        "toColumn": "InstrumentId"
      },
      {
        "name": "20ab4a0a-2a32-4021-92a2-82cc5aa1b73c",
        "fromTable": "FactTrade",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "2b9ad1c4-bf98-424e-9fe6-2b129f6f368a",
        "fromTable": "DimFunds",
        "fromColumn": "InstrumentId",
        "toTable": "DimInstrument",
        "toColumn": "InstrumentId",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "320454be-1af1-4995-8989-c43205f77624",
        "fromTable": "FactIndexValue",
        "fromColumn": "IndexId",
        "toTable": "DimIndex",
        "toColumn": "IndexId"
      },
      {
        "name": "153590f8-ea80-4f4f-8178-76baf76d694a",
        "fromTable": "FactIndexValue",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "a196a662-9c9d-47a9-b9d2-e26c9dcfb478",
        "fromTable": "FactReturns",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "ffc2d295-7cb2-4326-840a-93bcfacb9fac",
        "fromTable": "FactReturns",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "ce548627-b463-41e3-bf14-bbe8d3abe31f",
        "fromTable": "FactShareStatus",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "cefa7ce0-0904-454e-ab6f-cd7a5636403d",
        "fromTable": "FactShareStatus",
        "fromColumn": "PortfolioId",
        "toTable": "DimPortfolio",
        "toColumn": "PortfolioId"
      },
      {
        "name": "5899f20a-3441-4d95-bbe9-d1be839f1263",
        "fromTable": "FactShareStatus",
        "fromColumn": "InstrumentId",
        "toTable": "DimInstrument",
        "toColumn": "InstrumentId"
      },
      {
        "name": "24bcda68-8537-4d77-b396-51d81b78558f",
        "fromTable": "DimInstrument",
        "fromColumn": "IndustryId",
        "toTable": "DimIndustry",
        "toColumn": "IndustryId"
      }
    ],
    "perspectives": [
      {
        "name": "Unit Holders",
        "tables": [
          {
            "name": "DimShareHoldersProfile",
            "columns": [
              {
                "name": "Affiliated"
              },
              {
                "name": "BirthDate"
              },
              {
                "name": "Born"
              },
              {
                "name": "BourseCode"
              },
              {
                "name": "FatherName"
              },
              {
                "name": "FullName"
              },
              {
                "name": "Gender"
              },
              {
                "name": "IdNo"
              },
              {
                "name": "IsAffiliated"
              },
              {
                "name": "KindCategory"
              },
              {
                "name": "KindDesc"
              },
              {
                "name": "KindId"
              },
              {
                "name": "NationalId"
              },
              {
                "name": "ShareHolderId"
              }
            ]
          },
          {
            "name": "FactShareHoldersTrade",
            "columns": [
              {
                "name": "CompanyId"
              },
              {
                "name": "Date"
              },
              {
                "name": "InsertTime"
              },
              {
                "name": "Price"
              },
              {
                "name": "ShareHolderId"
              },
              {
                "name": "ShareKindId"
              },
              {
                "name": "Trade Side Desc"
              },
              {
                "name": "TradeSide"
              },
              {
                "name": "Value"
              },
              {
                "name": "Volume"
              },
              {
                "name": "VolumeBalance"
              }
            ]
          },
          {
            "name": "FactShareStatus",
            "columns": [
              {
                "name": "AssetId"
              },
              {
                "name": "AVGBuyPrice"
              },
              {
                "name": "BreakEvenPrice"
              },
              {
                "name": "Date"
              },
              {
                "name": "InsertTime"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "LastDPS"
              },
              {
                "name": "OwnershipPercent"
              },
              {
                "name": "Price"
              },
              {
                "name": "PureDiffPercent"
              },
              {
                "name": "PureDiffPrice"
              },
              {
                "name": "PureValueInDate"
              },
              {
                "name": "ShareNo"
              },
              {
                "name": "TotalInvest"
              },
              {
                "name": "ValueInDate"
              },
              {
                "name": "PortfolioId"
              },
              {
                "name": "SourceId"
              }
            ]
          },
          {
            "name": "DimCompany",
            "columns": [
              {
                "name": "Company"
              },
              {
                "name": "CompanyId"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "IsETF"
              },
              {
                "name": "ShortName"
              }
            ]
          },
          {
            "name": "DimTimeTable",
            "columns": [
              {
                "name": "Date"
              },
              {
                "name": "DateKey"
              },
              {
                "name": "DateNumber"
              },
              {
                "name": "DayNameOfWeek"
              },
              {
                "name": "DayNameOfWeek2"
              },
              {
                "name": "DayNumberOfMonth"
              },
              {
                "name": "DayNumberOfWeek"
              },
              {
                "name": "DayNumberOfYear"
              },
              {
                "name": "EDATE"
              },
              {
                "name": "EDATE1"
              },
              {
                "name": "FDATE"
              },
              {
                "name": "FYearMonth"
              },
              {
                "name": "FYearMonthNum"
              },
              {
                "name": "IsBeforeTheDayBeforeYesterday"
              },
              {
                "name": "IsBeforeToday"
              },
              {
                "name": "IsBeforeYesterday"
              },
              {
                "name": "IsNonWorking"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month2"
              },
              {
                "name": "MonthOfYear"
              },
              {
                "name": "NormDate"
              },
              {
                "name": "Quarter"
              },
              {
                "name": "QuarterOfYear"
              },
              {
                "name": "SixMonths"
              },
              {
                "name": "WeekNumber"
              },
              {
                "name": "WeekNumberOfYear"
              },
              {
                "name": "Year"
              }
            ]
          },
          {
            "name": "FactShareHolders",
            "columns": [
              {
                "name": "CompanyId"
              },
              {
                "name": "Date"
              },
              {
                "name": "IsLastDay"
              },
              {
                "name": "IsNew"
              },
              {
                "name": "ShareHolderId"
              },
              {
                "name": "VolumeBalance"
              },
              {
                "name": "VolumeDelta"
              }
            ]
          },
          {
            "name": "Sold Out Clients",
            "columns": [
              {
                "name": "CompanyId"
              },
              {
                "name": "Date"
              },
              {
                "name": "IsLastDay"
              },
              {
                "name": "IsNew"
              },
              {
                "name": "Report Date"
              },
              {
                "name": "ShareHolderId"
              },
              {
                "name": "VolumeBalance"
              },
              {
                "name": "VolumeDelta"
              }
            ]
          },
          {
            "name": "DimFunds",
            "columns": [
              {
                "name": "AUM"
              },
              {
                "name": "ColorCode"
              },
              {
                "name": "Custodian"
              },
              {
                "name": "FiscalYear"
              },
              {
                "name": "FundEnName"
              },
              {
                "name": "FundEnShortName"
              },
              {
                "name": "FundId"
              },
              {
                "name": "FundLink"
              },
              {
                "name": "FundName"
              },
              {
                "name": "FundShortName"
              },
              {
                "name": "FundSubType"
              },
              {
                "name": "FundSubTypeEn"
              },
              {
                "name": "FundType"
              },
              {
                "name": "FundTypeEn"
              },
              {
                "name": "Guarantor"
              },
              {
                "name": "InitiationDate"
              },
              {
                "name": "InvestmentManager"
              },
              {
                "name": "ManagerId"
              },
              {
                "name": "MarketMaker"
              },
              {
                "name": "TypeOfInvest"
              },
              {
                "name": "DividendIntervalPeriod"
              }
            ]
          },
          {
            "name": "DimInstrument",
            "columns": [
              {
                "name": "AssetId"
              },
              {
                "name": "Category"
              },
              {
                "name": "CategoryId"
              },
              {
                "name": "Exchange"
              },
              {
                "name": "ExchangeId"
              },
              {
                "name": "ExchangeState"
              },
              {
                "name": "Industry"
              },
              {
                "name": "IndustryId"
              },
              {
                "name": "Instrument"
              },
              {
                "name": "InstrumentCode"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "IsDeleted"
              },
              {
                "name": "Market"
              },
              {
                "name": "MarketId"
              },
              {
                "name": "TypeId"
              },
              {
                "name": "AssetClassId"
              },
              {
                "name": "AssetClassName"
              },
              {
                "name": "IsAffiliated"
              }
            ]
          }
        ]
      },
      {
        "name": "Sabad",
        "tables": [
          {
            "name": "DimAsset",
            "columns": [
              {
                "name": "Asset"
              },
              {
                "name": "AssetCompany"
              },
              {
                "name": "AssetCompanyId"
              },
              {
                "name": "AssetId"
              },
              {
                "name": "AssetTypeId"
              }
            ],
            "measures": [
              {
                "name": "test"
              }
            ]
          },
          {
            "name": "DimInstrument",
            "columns": [
              {
                "name": "AssetId"
              },
              {
                "name": "Category"
              },
              {
                "name": "CategoryId"
              },
              {
                "name": "Exchange"
              },
              {
                "name": "ExchangeId"
              },
              {
                "name": "ExchangeState"
              },
              {
                "name": "Industry"
              },
              {
                "name": "IndustryId"
              },
              {
                "name": "Instrument"
              },
              {
                "name": "InstrumentCode"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "IsDeleted"
              },
              {
                "name": "Market"
              },
              {
                "name": "MarketId"
              },
              {
                "name": "TypeId"
              },
              {
                "name": "Instrument & Industry Label"
              }
            ]
          },
          {
            "name": "DimTimeTable",
            "columns": [
              {
                "name": "Date"
              },
              {
                "name": "DateKey"
              },
              {
                "name": "DateNumber"
              },
              {
                "name": "DayNameOfWeek"
              },
              {
                "name": "DayNameOfWeek2"
              },
              {
                "name": "DayNumberOfMonth"
              },
              {
                "name": "DayNumberOfWeek"
              },
              {
                "name": "DayNumberOfYear"
              },
              {
                "name": "EDATE"
              },
              {
                "name": "EDATE1"
              },
              {
                "name": "FDATE"
              },
              {
                "name": "FYearMonth"
              },
              {
                "name": "FYearMonthNum"
              },
              {
                "name": "GDay"
              },
              {
                "name": "GMonth"
              },
              {
                "name": "GMonthName"
              },
              {
                "name": "GQuarter"
              },
              {
                "name": "GYear"
              },
              {
                "name": "IsBeforeTheDayBeforeYesterday"
              },
              {
                "name": "IsBeforeToday"
              },
              {
                "name": "IsBeforeYesterday"
              },
              {
                "name": "IsNonWorking"
              },
              {
                "name": "IsTodayOrBefore"
              },
              {
                "name": "Month"
              },
              {
                "name": "Month2"
              },
              {
                "name": "MonthOfYear"
              },
              {
                "name": "NormDate"
              },
              {
                "name": "Quarter"
              },
              {
                "name": "QuarterOfYear"
              },
              {
                "name": "SixMonths"
              },
              {
                "name": "Slicer Date"
              },
              {
                "name": "Slicer Date (TheDateBeforeYesterday)"
              },
              {
                "name": "WeekNumber"
              },
              {
                "name": "WeekNumberOfYear"
              },
              {
                "name": "Year"
              }
            ],
            "hierarchies": [
              {
                "name": "Date Hierarchy"
              }
            ]
          },
          {
            "name": "FactShareStatus",
            "columns": [
              {
                "name": "AssetId"
              },
              {
                "name": "AVGBuyPrice"
              },
              {
                "name": "BreakEvenPrice"
              },
              {
                "name": "Date"
              },
              {
                "name": "InsertTime"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "LastDPS"
              },
              {
                "name": "OwnershipPercent"
              },
              {
                "name": "PortfolioId"
              },
              {
                "name": "Price"
              },
              {
                "name": "PureDiffPercent"
              },
              {
                "name": "PureDiffPrice"
              },
              {
                "name": "PureValueInDate"
              },
              {
                "name": "ShareNo"
              },
              {
                "name": "SourceId"
              },
              {
                "name": "TotalInvest"
              },
              {
                "name": "ValueInDate"
              }
            ],
            "measures": [
              {
                "name": "Portfolio Value"
              },
              {
                "name": "Portfolio Value % AllSelected DimInstruments"
              }
            ]
          },
          {
            "name": "DimPortfolio",
            "columns": [
              {
                "name": "BroadcastList"
              },
              {
                "name": "BroadcastListEn"
              },
              {
                "name": "Category"
              },
              {
                "name": "CategoryEn"
              },
              {
                "name": "Email"
              },
              {
                "name": "Introducer"
              },
              {
                "name": "IntroducerEn"
              },
              {
                "name": "IsOnline"
              },
              {
                "name": "MoreInfo"
              },
              {
                "name": "PortfolioId"
              },
              {
                "name": "PortfolioManager"
              },
              {
                "name": "PortfolioManagerEn"
              },
              {
                "name": "PortfolioManagerId"
              },
              {
                "name": "PortfolioName"
              },
              {
                "name": "PortfolioNameEn"
              },
              {
                "name": "PRX"
              },
              {
                "name": "Region"
              },
              {
                "name": "RegionEn"
              },
              {
                "name": "RiskProfile"
              },
              {
                "name": "RiskProfileEn"
              },
              {
                "name": "Status"
              },
              {
                "name": "StatusEn"
              },
              {
                "name": "TEL"
              },
              {
                "name": "Type"
              },
              {
                "name": "TypeEn"
              },
              {
                "name": "IsCompany"
              },
              {
                "name": "PortfolioType"
              }
            ]
          },
          {
            "name": "DimIndustry",
            "columns": [
              {
                "name": "Industry"
              },
              {
                "name": "IndustryId"
              }
            ]
          },
          {
            "name": "DimCompany",
            "columns": [
              {
                "name": "Company"
              },
              {
                "name": "CompanyId"
              },
              {
                "name": "InstrumentId"
              },
              {
                "name": "IsETF"
              },
              {
                "name": "ShortName"
              }
            ]
          }
        ]
      }
    ],
    "roles": [
      {
        "name": "Full Access",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "IIDIC\\507485",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1521"
          },
          {
            "memberName": "IIDIC\\507481",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1390"
          },
          {
            "memberName": "IIDIC\\402VC042",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2653"
          },
          {
            "memberName": "IIDIC\\507153",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1647"
          },
          {
            "memberName": "IIDIC\\507201",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1731"
          },
          {
            "memberName": "IIDIC\\507268",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1393"
          },
          {
            "memberName": "IIDIC\\507275",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1462"
          },
          {
            "memberName": "IIDIC\\507382",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1734"
          },
          {
            "memberName": "IIDIC\\507484",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1520"
          },
          {
            "memberName": "IIDIC\\507333",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1737"
          }
        ]
      },
      {
        "name": "Fipiran",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "IIDIC\\507485",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1521"
          },
          {
            "memberName": "IIDIC\\507481",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1390"
          },
          {
            "memberName": "IIDIC\\507440",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1253"
          },
          {
            "memberName": "IIDIC\\507392",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1710"
          },
          {
            "memberName": "IIDIC\\10045",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1414"
          },
          {
            "memberName": "IIDIC\\140201",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2052"
          },
          {
            "memberName": "IIDIC\\402bi038",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2647"
          },
          {
            "memberName": "IIDIC\\402bi060",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2708"
          },
          {
            "memberName": "IIDIC\\402MG040",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2644"
          },
          {
            "memberName": "IIDIC\\402sa051",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2660"
          },
          {
            "memberName": "IIDIC\\410036",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1756"
          },
          {
            "memberName": "IIDIC\\507333",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1737"
          }
        ],
        "tablePermissions": [
          {
            "name": "DimShareHoldersProfile",
            "metadataPermission": "none"
          },
          {
            "name": "FactShareHoldersTrade",
            "metadataPermission": "none"
          },
          {
            "name": "FactFunds (Asset Allocation)",
            "columnPermissions": [
              {
                "name": "FundId",
                "metadataPermission": "none"
              },
              {
                "name": "Date",
                "metadataPermission": "none"
              },
              {
                "name": "FundDataTypeId",
                "metadataPermission": "none"
              },
              {
                "name": "FundAssetId",
                "metadataPermission": "none"
              },
              {
                "name": "Value",
                "metadataPermission": "none"
              }
            ]
          },
          {
            "name": "FactShareStatus",
            "metadataPermission": "none"
          },
          {
            "name": "FactShareHolders",
            "metadataPermission": "none"
          },
          {
            "name": "Sold Out Clients",
            "metadataPermission": "none"
          },
          {
            "name": "Clients Measures",
            "metadataPermission": "none"
          }
        ]
      },
      {
        "name": "Asset Manager",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "IIDIC\\402sa051",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-2660"
          },
          {
            "memberName": "IIDIC\\507201",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1731"
          },
          {
            "memberName": "IIDIC\\507268",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1393"
          },
          {
            "memberName": "IIDIC\\507275",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1462"
          },
          {
            "memberName": "IIDIC\\507382",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1734"
          },
          {
            "memberName": "IIDIC\\507481",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1390"
          },
          {
            "memberName": "IIDIC\\507484",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1520"
          },
          {
            "memberName": "IIDIC\\507485",
            "memberId": "S-1-5-21-1537697263-3382915313-1145834991-1521"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}