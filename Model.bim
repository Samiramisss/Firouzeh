{
  "name": "SemanticModel",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/192 168 220 10;DW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.220.10",
            "database": "DW"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.220.10;DW",
          "Username": "reportuser",
          "EncryptConnection": false
        }
      },
      {
        "type": "structured",
        "name": "SQL/192 168 221 10;BI",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "192.168.221.10",
            "database": "BI"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "kind": "SQL",
          "path": "192.168.221.10;BI",
          "Username": "sa",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "DimFundAssets",
        "columns": [
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "FundAsset",
            "dataType": "string",
            "sourceColumn": "FundAsset"
          },
          {
            "name": "EnName",
            "dataType": "string",
            "sourceColumn": "EnName"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundAssets = Source{[Schema=\"dbo\",Item=\"DimFundAssets\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundAssets,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFundDataTypes",
        "columns": [
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundDataType",
            "dataType": "string",
            "sourceColumn": "FundDataType"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFundDataTypes = Source{[Schema=\"dbo\",Item=\"DimFundDataTypes\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFundDataTypes,{\"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "FundName",
            "dataType": "string",
            "sourceColumn": "FundName"
          },
          {
            "name": "FundEnName",
            "dataType": "string",
            "sourceColumn": "FundEnName"
          },
          {
            "name": "FundShortName",
            "dataType": "string",
            "sourceColumn": "FundShortName"
          },
          {
            "name": "FundEnShortName",
            "dataType": "string",
            "sourceColumn": "FundEnShortName"
          },
          {
            "name": "FundType",
            "dataType": "string",
            "sourceColumn": "FundType"
          },
          {
            "name": "FundTypeEn",
            "dataType": "string",
            "sourceColumn": "FundTypeEn"
          },
          {
            "name": "FundLink",
            "dataType": "string",
            "sourceColumn": "FundLink"
          },
          {
            "name": "TypeOfInvest",
            "dataType": "boolean",
            "sourceColumn": "TypeOfInvest"
          },
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Guarantor",
            "dataType": "string",
            "sourceColumn": "Guarantor"
          },
          {
            "name": "InitiationDate",
            "dataType": "string",
            "sourceColumn": "InitiationDate"
          },
          {
            "name": "MarketMaker",
            "dataType": "string",
            "sourceColumn": "MarketMaker"
          },
          {
            "name": "Custodian",
            "dataType": "string",
            "sourceColumn": "Custodian"
          },
          {
            "name": "InvestmentManager",
            "dataType": "string",
            "sourceColumn": "InvestmentManager"
          },
          {
            "name": "FiscalYear",
            "dataType": "string",
            "sourceColumn": "FiscalYear"
          },
          {
            "name": "FundSubType",
            "dataType": "string",
            "sourceColumn": "FundSubType"
          },
          {
            "name": "FundSubTypeEn",
            "dataType": "string",
            "sourceColumn": "FundSubTypeEn"
          },
          {
            "type": "calculated",
            "name": "ColorCode",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " RELATED(DimManager[ColorCode])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimFunds = Source{[Schema=\"dbo\",Item=\"DimFunds\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimFunds,{\"DimManager\", \"FactFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimTimeTable",
        "columns": [
          {
            "name": "Date",
            "dataType": "dateTime",
            "description": "تاریخ میلادی",
            "sourceColumn": "Date"
          },
          {
            "name": "DateKey",
            "dataType": "string",
            "sourceColumn": "DateKey"
          },
          {
            "name": "FDATE",
            "dataType": "string",
            "sourceColumn": "FDATE"
          },
          {
            "name": "EDATE",
            "dataType": "string",
            "sourceColumn": "EDATE"
          },
          {
            "name": "EDATE1",
            "dataType": "string",
            "sourceColumn": "EDATE1"
          },
          {
            "name": "NormDate",
            "dataType": "int64",
            "sourceColumn": "NormDate"
          },
          {
            "name": "DateNumber",
            "dataType": "int64",
            "sourceColumn": "DateNumber"
          },
          {
            "name": "Year",
            "dataType": "int64",
            "sourceColumn": "Year"
          },
          {
            "name": "QuarterOfYear",
            "dataType": "string",
            "sourceColumn": "QuarterOfYear"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter"
          },
          {
            "name": "MonthOfYear",
            "dataType": "string",
            "sourceColumn": "MonthOfYear"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month"
          },
          {
            "name": "Month2",
            "dataType": "string",
            "sourceColumn": "Month2"
          },
          {
            "name": "WeekNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "WeekNumberOfYear"
          },
          {
            "name": "DayNumberOfMonth",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfMonth"
          },
          {
            "name": "DayNumberOfYear",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfYear"
          },
          {
            "name": "DayNumberOfWeek",
            "dataType": "int64",
            "sourceColumn": "DayNumberOfWeek"
          },
          {
            "name": "DayNameOfWeek",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek"
          },
          {
            "name": "DayNameOfWeek2",
            "dataType": "string",
            "sourceColumn": "DayNameOfWeek2"
          },
          {
            "name": "SixMonths",
            "dataType": "int64",
            "sourceColumn": "SixMonths"
          },
          {
            "name": "IsNonWorking",
            "dataType": "boolean",
            "sourceColumn": "IsNonWorking"
          },
          {
            "name": "WeekNumber",
            "dataType": "int64",
            "sourceColumn": "WeekNumber"
          },
          {
            "type": "calculated",
            "name": "FYearMonth",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "left('DimTimeTable'[DateKey], 7)"
            ]
          },
          {
            "type": "calculated",
            "name": "FYearMonthNum",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " INT(LEFT('DimTimeTable'[FYearMonth],4) & RIGHT('DimTimeTable'[FYearMonth],2))"
          },
          {
            "type": "calculated",
            "name": "IsBeforeTheDayBeforeYesterday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] <TODAY() - 2, TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeToday",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF('DimTimeTable'[Date] < TODAY(), TRUE(), FALSE())"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "IsBeforeYesterday",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimTimeTable = Source{[Schema=\"dbo\",Item=\"DimTimeTable\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimTimeTable,{\"FactCurrency\", \"FactFunds\", \"FactShareHolders\", \"FactTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimManager",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "Manager",
            "dataType": "string",
            "sourceColumn": "Manager"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "ManagerEnName",
            "dataType": "string",
            "sourceColumn": "ManagerEnName"
          },
          {
            "name": "ENShortName",
            "dataType": "string",
            "sourceColumn": "ENShortName"
          },
          {
            "name": "FinancialGroupName",
            "dataType": "string",
            "sourceColumn": "FinancialGroupName"
          },
          {
            "name": "FinancialGroupNameEN",
            "dataType": "string",
            "sourceColumn": "FinancialGroupNameEN"
          },
          {
            "name": "IsBanking",
            "dataType": "boolean",
            "sourceColumn": "IsBanking"
          },
          {
            "name": "PrivateSector",
            "dataType": "boolean",
            "sourceColumn": "PrivateSector"
          },
          {
            "name": "ColorCode",
            "dataType": "string",
            "sourceColumn": "ColorCode"
          },
          {
            "name": "FoundDate",
            "dataType": "dateTime",
            "sourceColumn": "FoundDate"
          },
          {
            "name": "IsCompetitor",
            "dataType": "boolean",
            "sourceColumn": "IsCompetitor"
          },
          {
            "type": "calculated",
            "name": "AUM",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR m = 'DimManager'[FinancialGroupName]",
              "VAR T = ",
              "FILTER(",
              "    ALL('DimManager'),",
              "    DimManager[FinancialGroupName] = m",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    SUMX(",
              "        T",
              "        , CALCULATE([AUM_2]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Column",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR t = CALCULATE(max('DimTimeTable'[Date]), all(), ALLSELECTED('DimTimeTable'))",
              "// 'DimManager'[Manager Shorter Name] ",
              "// & \", \"  & unichar(10240) &",
              "// FORMAT([AUM including Private Portfolios]/10^12, \"#,0#\") ",
              "return CALCULATE([AUM including Private Portfolios], 'DimTimeTable'[Date] = t)",
              "//  \" ,\" & ",
              "//  FORMAT(CALCULATE([AUM % of Total]), \"0%\") ",
              "// // & \" ,#\" & CALCULATE(rankx(ALLSELECTED('DimManager'), [AUM]))",
              "// // & \" ,\" ",
              "// // & ",
              "// // 'DimManager'[Manager Shorter Name]"
            ]
          },
          {
            "type": "calculated",
            "name": "Competitors Only",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[IsCompetitor],",
              "    \"Competitiors Only\",",
              "    BLANK()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "IsCompetitor1",
            "dataType": "boolean",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    [ManagerId] IN {124, 126, 45, 68, 31, 38},",
              "    TRUE(),",
              "    FALSE()",
              ")"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Manager Group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    'DimManager'[IsCompetitor1], \"Competitor\",",
              "    'DimManager'[ManagerId] = 55, \"Turquoise\",",
              "    \"Other\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Short Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"س.گ.\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"س.گ.\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"ک.گ.\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"ک.گ.\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"ت.س.\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"م.س.\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"س.\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"گ.س.\")",
              "RETURN S8"
            ]
          },
          {
            "type": "calculated",
            "name": "Manager Shorter Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "VAR S1 = SUBSTITUTE([Manager], \"سبدگردان\", \"\")",
              "VAR S2 = SUBSTITUTE(S1, \"سبد گردان\", \"\")",
              "VAR S3 = SUBSTITUTE(S2, \"کارگزاری\", \"\")",
              "VAR S4 = SUBSTITUTE(S3, \"کار گزاری\", \"\")",
              "VAR S5 = SUBSTITUTE(S4, \"تامین سرمایه\", \"\")",
              "VAR S6 = SUBSTITUTE(S5, \"مشاور سرمایه گذاری\", \"\")",
              "VAR S7 = SUBSTITUTE(S6, \"سرمایه گذاری\", \"\")",
              "VAR S8 = SUBSTITUTE(S7, \"گروه سرمایه گذاری\", \"\")",
              "RETURN IF(CONTAINSSTRING(S8, \"کاریزما\") , \"کاریزما\", S8)"
            ]
          },
          {
            "type": "calculated",
            "name": "Non Bank Affiliated",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    NOT('DimManager'[IsBanking]),",
              "    \"Non Bank Affiliated\",",
              "    --BLANK()",
              "    \"Bank Affiliated\"",
              ")",
              "    "
            ]
          },
          {
            "type": "calculated",
            "name": "Private",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    'DimManager'[PrivateSector],",
              "    \"Private\",",
              "    --BLANK()",
              "    \"Non-Private\"",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimManager = Source{[Schema=\"dbo\",Item=\"DimManager\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimManager,{\"DimFunds\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimShareHoldersProfile",
        "columns": [
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "BourseCode",
            "dataType": "string",
            "sourceColumn": "BourseCode"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "sourceColumn": "FullName"
          },
          {
            "name": "BirthDate",
            "dataType": "string",
            "sourceColumn": "BirthDate"
          },
          {
            "name": "IdNo",
            "dataType": "string",
            "sourceColumn": "IdNo"
          },
          {
            "name": "Born",
            "dataType": "string",
            "sourceColumn": "Born"
          },
          {
            "name": "NationalId",
            "dataType": "string",
            "sourceColumn": "NationalId"
          },
          {
            "name": "FatherName",
            "dataType": "string",
            "sourceColumn": "FatherName"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "KindCategory",
            "dataType": "string",
            "sourceColumn": "KindCategory"
          },
          {
            "name": "KindId",
            "dataType": "int64",
            "sourceColumn": "KindId"
          },
          {
            "name": "KindDesc",
            "dataType": "string",
            "sourceColumn": "KindDesc"
          },
          {
            "name": "IsAffiliated",
            "dataType": "boolean",
            "sourceColumn": "IsAffiliated"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimShareHoldersProfile = Source{[Schema=\"dbo\",Item=\"DimShareHoldersProfile\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimShareHoldersProfile,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DimCompany",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "Company",
            "dataType": "string",
            "sourceColumn": "Company"
          },
          {
            "name": "ShortName",
            "dataType": "string",
            "sourceColumn": "ShortName"
          },
          {
            "name": "IsETF",
            "dataType": "boolean",
            "sourceColumn": "IsETF"
          },
          {
            "name": "InstrumentId",
            "dataType": "int64",
            "sourceColumn": "InstrumentId"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_DimCompany = Source{[Schema=\"dbo\",Item=\"DimCompany\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_DimCompany,{\"FactShareHolders\", \"FactShareHoldersTrade\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactManagerAUM",
        "columns": [
          {
            "name": "ManagerId",
            "dataType": "int64",
            "sourceColumn": "ManagerId"
          },
          {
            "name": "DDate",
            "dataType": "string",
            "sourceColumn": "DDate"
          },
          {
            "name": "AUM",
            "dataType": "double",
            "sourceColumn": "AUM"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactManagerAUM = Source{[Schema=\"dbo\",Item=\"FactManagerAUM\"]}[Data]",
                "in",
                "    dbo_FactManagerAUM"
              ]
            }
          }
        ]
      },
      {
        "name": "FactFundsSplit",
        "columns": [
          {
            "name": "Id",
            "dataType": "int64",
            "sourceColumn": "Id"
          },
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "IsSplit",
            "dataType": "int64",
            "sourceColumn": "IsSplit"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "UnitIssueSubDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueSubDay"
          },
          {
            "name": "UnitIssueRedDay",
            "dataType": "double",
            "sourceColumn": "UnitIssueRedDay"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactFundsSplit = Source{[Schema=\"dbo\",Item=\"FactFundsSplit\"]}[Data]",
                "in",
                "    dbo_FactFundsSplit"
              ]
            }
          }
        ]
      },
      {
        "name": "FactShareHoldersTrade",
        "columns": [
          {
            "name": "CompanyId",
            "dataType": "int64",
            "sourceColumn": "CompanyId"
          },
          {
            "name": "ShareHolderId",
            "dataType": "int64",
            "sourceColumn": "ShareHolderId"
          },
          {
            "name": "TradeSide",
            "dataType": "boolean",
            "sourceColumn": "TradeSide"
          },
          {
            "name": "ShareKindId",
            "dataType": "int64",
            "sourceColumn": "ShareKindId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Price",
            "dataType": "int64",
            "sourceColumn": "Price"
          },
          {
            "name": "Volume",
            "dataType": "double",
            "sourceColumn": "Volume"
          },
          {
            "name": "VolumeBalance",
            "dataType": "double",
            "sourceColumn": "VolumeBalance"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          },
          {
            "name": "InsertTime",
            "dataType": "dateTime",
            "sourceColumn": "InsertTime"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/192 168 220 10;DW\",",
                "    dbo_FactShareHoldersTrade = Source{[Schema=\"dbo\",Item=\"FactShareHoldersTrade\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(dbo_FactShareHoldersTrade,{\"DimCompany\", \"DimShareHoldersProfile\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FactFunds",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "1YearRank",
            "dataType": "double",
            "sourceColumn": "1YearRank"
          },
          {
            "name": "3 YearRank",
            "dataType": "double",
            "sourceColumn": "3 YearRank"
          },
          {
            "name": "5YearRank",
            "dataType": "double",
            "sourceColumn": "5YearRank"
          },
          {
            "name": "6MonthReturn",
            "dataType": "double",
            "sourceColumn": "6MonthReturn"
          },
          {
            "name": "Alpha",
            "dataType": "double",
            "sourceColumn": "Alpha"
          },
          {
            "name": "AUM",
            "dataType": "double",
            "sourceColumn": "AUM"
          },
          {
            "name": "BankDeposite",
            "dataType": "double",
            "sourceColumn": "BankDeposite"
          },
          {
            "name": "Beta",
            "dataType": "double",
            "sourceColumn": "Beta"
          },
          {
            "name": "Bonds",
            "dataType": "double",
            "sourceColumn": "Bonds"
          },
          {
            "name": "CommodityCD",
            "dataType": "double",
            "sourceColumn": "CommodityCD"
          },
          {
            "name": "DayReturn",
            "dataType": "double",
            "sourceColumn": "DayReturn"
          },
          {
            "name": "DividendDuration",
            "dataType": "double",
            "sourceColumn": "DividendDuration"
          },
          {
            "name": "Efficiency",
            "dataType": "double",
            "sourceColumn": "Efficiency"
          },
          {
            "name": "EstimatedEarningRate",
            "dataType": "double",
            "sourceColumn": "EstimatedEarningRate"
          },
          {
            "name": "InvestedUnits",
            "dataType": "double",
            "sourceColumn": "InvestedUnits"
          },
          {
            "name": "MonthReturn",
            "dataType": "double",
            "sourceColumn": "MonthReturn"
          },
          {
            "name": "OtherAssets",
            "dataType": "double",
            "sourceColumn": "OtherAssets"
          },
          {
            "name": "OtherShares",
            "dataType": "double",
            "sourceColumn": "OtherShares"
          },
          {
            "name": "QuarterReturn",
            "dataType": "double",
            "sourceColumn": "QuarterReturn"
          },
          {
            "name": "RedemptionPrice",
            "dataType": "double",
            "sourceColumn": "RedemptionPrice"
          },
          {
            "name": "StatisticalPrice",
            "dataType": "double",
            "sourceColumn": "StatisticalPrice"
          },
          {
            "name": "SubscriptionPrice",
            "dataType": "double",
            "sourceColumn": "SubscriptionPrice"
          },
          {
            "name": "Top5shares",
            "dataType": "double",
            "sourceColumn": "Top5shares"
          },
          {
            "name": "Units",
            "dataType": "double",
            "sourceColumn": "Units"
          },
          {
            "name": "UnitsRedDay",
            "dataType": "double",
            "sourceColumn": "UnitsRedDay"
          },
          {
            "name": "UnitsRedFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsRedFromFirst"
          },
          {
            "name": "UnitsSubDay",
            "dataType": "double",
            "sourceColumn": "UnitsSubDay"
          },
          {
            "name": "UnitsSubFromFirst",
            "dataType": "double",
            "sourceColumn": "UnitsSubFromFirst"
          },
          {
            "name": "WeekReturn",
            "dataType": "double",
            "sourceColumn": "WeekReturn"
          },
          {
            "name": "YearReturn",
            "dataType": "double",
            "sourceColumn": "YearReturn"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"-- Create a temporary table with dynamic SQL#(lf)DECLARE @columns NVARCHAR(MAX), @query NVARCHAR(MAX);#(lf)#(lf)-- Get the distinct values of EnName to use as columns in PIVOT#(lf)SELECT @columns = STRING_AGG(QUOTENAME(EnName), ',')#(lf)FROM (SELECT DISTINCT EnName FROM [DW].[dbo].[DimFundAssets]) AS DistinctEnNames;#(lf)#(lf)-- Build the dynamic SQL query for PIVOT#(lf)SET @query = N'#(lf)SELECT *#(lf)FROM (#(lf)    SELECT#(lf)        A.[FundId],#(lf)        A.[Date],#(lf)        A.[FundDataTypeId],#(lf)        B.[EnName],#(lf)        A.[Value]#(lf)    FROM#(lf)        [DW].[dbo].[FactFunds] A#(lf)    INNER JOIN#(lf)        [DW].[dbo].[DimFundAssets] B ON A.FundAssetId = B.FundAssetId#(lf)    WHERE#(lf)        A.[FundDataTypeId] = 4#(lf)) AS SourceTable#(lf)PIVOT (#(lf)    MAX(Value) FOR EnName IN (' + @columns + ')#(lf)) AS PivotTable;';#(lf)#(lf)-- Execute the dynamic SQL query#(lf)EXEC sp_executesql @query;#(lf)\"])",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "1 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[1YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[1YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "3 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[3 YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[3 YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          },
          {
            "name": "5 Year Rank",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[5YearRank]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN",
              "CALCULATE(AVERAGE('FactFunds'[5YearRank]), 'DimTimeTable'[Date] = MaxDate)"
            ]
          }
        ]
      },
      {
        "name": "FactFunds (Asset Allocation)",
        "columns": [
          {
            "name": "FundId",
            "dataType": "int64",
            "sourceColumn": "FundId"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FundDataTypeId",
            "dataType": "int64",
            "sourceColumn": "FundDataTypeId"
          },
          {
            "name": "FundAssetId",
            "dataType": "int64",
            "sourceColumn": "FundAssetId"
          },
          {
            "name": "Value",
            "dataType": "double",
            "sourceColumn": "Value"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(\"192.168.220.10\", \"DW\", [Query=\"SELECT#(lf)    A.[FundId],#(lf)    A.[Date],#(lf)    A.[FundDataTypeId],#(lf)    A.[FundAssetId],#(lf)    A.[Value]#(lf)FROM#(lf)    [DW].[dbo].[FactFunds] A#(lf)WHERE#(lf)    A.[FundDataTypeId] = 2;\"])",
                "in",
                "    Source"
              ]
            }
          }
        ]
      },
      {
        "name": "Fipiran Measures",
        "columns": [
          {
            "name": "Column1",
            "dataType": "string",
            "sourceColumn": "Column1"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "% 6 Month Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[6MonthReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[6MonthReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[6MonthReturn])), 'FactFunds'[6MonthReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% 6 Month Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[6MonthReturn]),",
              "                'FactFunds'[6MonthReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[6MonthReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Annual Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[YearReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0)",
              "RETURN r "
            ]
          },
          {
            "name": "% Annual Return (Average) old",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[YearReturn]),",
              "                'FactFunds'[YearReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[YearReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable'), not(ISBLANK('FactFunds'[YearReturn])), 'FactFunds'[YearReturn] <> 0",
              ")",
              "",
              ""
            ]
          },
          {
            "name": "AUM_2",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactFunds'[AUM]),'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "RETURN NAV"
            ]
          },
          {
            "name": "% Annual Return Weighted",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    SUMX(",
              "        'DimFunds',",
              "        [AUM_2] * [% Annual Return]), ",
              "    'DimTimeTable'[Date] = MaxDate, ",
              "    'FactFunds'[FundDataTypeId] = 4",
              ") / ",
              "CALCULATE([AUM_2], 'DimTimeTable'[Date] = MaxDate, ",
              "    'FactFunds'[FundDataTypeId] = 4)",
              "RETURN r "
            ]
          },
          {
            "name": "% Average 6 Month Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% 6 Month Return]),",
              "                [% 6 Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% 6 Month Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average 6 Month Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% 6 Month Return]),",
              "                [% 6 Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% 6 Month Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average 6 Month Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average 6 Month Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([6 Month Rank (Old)])     <= [@TopX])",
              ")"
            ]
          },
          {
            "name": "% Average Annual Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType], 'DimFunds'[FundName])",
              "    ",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Annual Return]),",
              "                [% Annual Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Annual Return]",
              "        )",
              "    )",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundEnName])",
              "//     --, ALLSELECTED('DimManager')",
              "//  -- , '@TopX'[Value] = 1000",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Annual Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "    --ALLEXCEPT('DimFunds', 'DimFunds'[FundType], 'DimFunds'[FundName])",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Annual Return]),",
              "                [% Annual Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Annual Return]",
              "        )",
              "    )",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              "//     , ALLEXCEPT('DimFunds', 'DimFunds'[FundEnName])",
              "//     --, ALLSELECTED('DimManager')",
              "//  -- , '@TopX'[Value] = 1000",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Annual Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Annual Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Annual Rank (Old)])     <= [@TopX])",
              ")",
              ""
            ]
          },
          {
            "name": "% Average Month Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Month Return]),",
              "                [% Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Month Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Month Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Month Return]),",
              "                [% Month Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Month Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Month Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Month Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Month Rank (Old)]) <= [@TopX])",
              ")"
            ]
          },
          {
            "name": "% Average Quarter Return (All Same Type)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Quarter Return]),",
              "                [% Quarter Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Quarter Return]",
              "        )",
              "    )",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Quarter Return (All Selected)",
            "expression": [
              " ",
              "VAR T = ",
              "CALCULATETABLE(",
              "     'DimFunds',",
              "    ALLSELECTED()",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        T,",
              "        IF(",
              "            OR(",
              "                ISBLANK([% Quarter Return]),",
              "                [% Quarter Return] = 0",
              "            ),",
              "            BLANK(),",
              "            [% Quarter Return]",
              "        )",
              "    )",
              "",
              ")",
              "",
              "RETURN r"
            ]
          },
          {
            "name": "% Average Quarter Return (Top X)",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Average Quarter Return (All Selected)]",
              "    , all('DimFunds')",
              "    , ALLSELECTED('DimFunds')",
              "    , ALLSELECTED('DimManager')",
              "    , ALLSELECTED('DimTimeTable'),",
              "    FILTER('DimFunds', CALCULATE([Quarter Rank (Old)])     <= [@TopX])",
              ")"
            ]
          },
          {
            "name": "% Day Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[DayReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[DayReturn]), 'FactFunds'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "RETURN r"
            ]
          },
          {
            "name": "% Day Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    // AVERAGE('FactFunds'[DayReturn]),",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[DayReturn]),",
              "                'FactFunds'[DayReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[DayReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Fund Type AUM Ratio",
            "expression": [
              " ",
              "[AUM_2]/CALCULATE([AUM_2], ALL('DimFunds'[FundType]))"
            ]
          },
          {
            "name": "% Month Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[MonthReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[MonthReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[MonthReturn])), 'FactFunds'[MonthReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% Month Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[MonthReturn]),",
              "                'FactFunds'[MonthReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[MonthReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Net Subscription Value",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              ")",
              "RETURN ",
              "DIVIDE(",
              "    [Net Subscription Value], ",
              "    CALCULATE([AUM_2]), ",
              "    BLANK()",
              ") "
            ]
          },
          {
            "name": "% Quarter Return",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "MAX(DimTimeTable[Date])",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('FactFunds'[QuarterReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "//         )",
              "// )",
              "",
              "VAR r = ",
              "CALCULATE(AVERAGE('FactFunds'[QuarterReturn]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4, NOT(ISBLANK('FactFunds'[QuarterReturn])), 'FactFunds'[QuarterReturn] <> 0)",
              "RETURN r"
            ]
          },
          {
            "name": "% Quarter Return (Average)",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX(",
              "        'FactFunds',",
              "        IF(",
              "            OR(",
              "                ISBLANK('FactFunds'[QuarterReturn]),",
              "                'FactFunds'[QuarterReturn] = 0",
              "            ),",
              "            BLANK(),",
              "            'FactFunds'[QuarterReturn]",
              "        )",
              "    ),",
              "    ALLSELECTED('DimTimeTable')",
              ")"
            ]
          },
          {
            "name": "% Return on NAV",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[RedemptionPrice]))",
              "    )",
              ")",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[RedemptionPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[RedemptionPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[RedemptionPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ]
          },
          {
            "name": "% Return on Statistical NAV",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[StatisticalPrice]))",
              "    )",
              ")",
              "",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            LASTDATE('DimTimeTable'[Date])",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[StatisticalPrice]))",
              "        )",
              ")",
              "",
              "VAR BaseFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[StatisticalPrice]), 'DimTimeTable'[Date] = BaseDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "",
              "VAR EndFinal = ",
              "CALCULATE(SELECTEDVALUE('FactFunds'[StatisticalPrice]), 'DimTimeTable'[Date] = MaxDate, 'FactFunds'[FundDataTypeId] = 4)",
              "",
              "VAR R = IF(OR(ISBLANK(EndFinal), ISBLANK(BaseFinal)), BLANK(),DIVIDE(EndFinal-BaseFinal, BaseFinal))",
              "",
              "RETURN R"
            ]
          },
          {
            "name": "6 Month Rank (Old)",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Month Return])))",
              "                , [% 6 Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Annual Rank (Old)",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Month Return])))",
              "                , [% Annual Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "annual rank new",
            "expression": [
              " ",
              "VAR T =",
              "    calculateTable(",
              "        DimFunds,",
              "        AllSelected('DimFunds')",
              "    )",
              "VAR rnk = ",
              "    RANKX(",
              "        T,",
              "        [% Annual Return],",
              "        ,",
              "        DESC,",
              "        Dense",
              "    )",
              "RETURN",
              "rnk"
            ]
          },
          {
            "name": "AUM (Currency)",
            "expression": [
              " ",
              "[AUM_2]"
            ]
          },
          {
            "name": "AUM % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM_2],",
              "    CALCULATE([AUM_2], ALLSELECTED('DimFunds'))",
              ")"
            ]
          },
          {
            "name": "AUM by Asset Class",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds (Asset Allocation)'[Value])) ",
              "        )",
              ")",
              "",
              "VAR AUM =",
              "CALCULATE(SUMX('FactFunds (Asset Allocation)',[AUM_2] * 'FactFunds (Asset Allocation)'[Value]/100),'DimTimeTable'[Date] = MaxDate)",
              "RETURN AUM"
            ]
          },
          {
            "name": "AUM by Asset Class % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM by Asset Class],",
              "    CALCULATE([AUM by Asset Class], ALLSELECTED('DimFundAssets'))",
              ")"
            ]
          },
          {
            "name": "AUM including Private Portfolios",
            "expression": [
              " ",
              "[AUM_2] + [AUM of Private Porfolios]"
            ]
          },
          {
            "name": "AUM Including Private Portfolios % of Total",
            "expression": [
              " ",
              "DIVIDE(",
              "    [AUM_2],",
              "    CALCULATE([AUM including Private Portfolios], ALLSELECTED('DimFunds'))",
              ")"
            ]
          },
          {
            "name": "AUM Including Private Portfolios Rank (Selected Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "         ALLSELECTED('DimManager'[FinancialGroupName]),",
              "        [AUM including Private Portfolios]",
              "    )"
            ]
          },
          {
            "name": "AUM Line",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE((FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "RETURN",
              "IF(",
              "    OR(",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = BaseDate,",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = EndDate",
              "    ),",
              "    [AUM_2],",
              "    BLANK()",
              ")"
            ]
          },
          {
            "name": "AUM New",
            "expression": [
              " ",
              "SUMX (",
              "    'DimManager',",
              "    SUMX(",
              "        FILTER('DimFunds', 'DimFunds'[ManagerId] = EARLIER('DimManager'[ManagerId])),",
              "        CALCULATE(",
              "            SELECTEDVALUE('FactFunds'[AUM]),",
              "            'FactFunds'[Date] = MAX('FactFunds'[Date])",
              "        )",
              "    )",
              ")",
              "         "
            ]
          },
          {
            "name": "AUM of Private Porfolios",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNTROWS('FactManagerAUM'))",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactManagerAUM'[AUM]),'DimTimeTable'[Date] = MaxDate)",
              "RETURN NAV"
            ]
          },
          {
            "name": "AUM Rank (All Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "        ALL('DimManager'[FinancialGroupName]),",
              "        [AUM including Private Portfolios]",
              "    )",
              "    "
            ]
          },
          {
            "name": "AUM Rank (Selected Managers)",
            "expression": [
              " ",
              "    RANKX(",
              "         ALLSELECTED('DimManager'[FinancialGroupName]),",
              "        [AUM_2]",
              "    )"
            ]
          },
          {
            "name": "Average 6 Month Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% 6 Month Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average All Fund AUM",
            "expression": [
              " ",
              "CALCULATE([AUM_2] / CALCULATE(count('DimFunds'[FundId])), ALL('DimManager'), ALLEXCEPT('DimFunds','DimFunds'[FundType], 'DimFunds'[FundTypeEn]))"
            ]
          },
          {
            "name": "Average All Return",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [Return]),",
              "    ALL('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ]
          },
          {
            "name": "Average Fund AUM",
            "expression": [
              " ",
              "[AUM_2] / CALCULATE(count('DimFunds'[FundId]))"
            ]
          },
          {
            "name": "Average Fund AUM per Unit Holde",
            "expression": [
              " ",
              "[AUM_2] / CALCULATE(SUM('FactFunds'[InvestedUnits]))"
            ]
          },
          {
            "name": "Average Month Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Month Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average Quarter Funds Return by Type",
            "expression": [
              " ",
              "CALCULATE(",
              "    [% Quarter Return (Average)],",
              "    ALLEXCEPT('DimFunds', 'DimFunds'[FundType])",
              ")"
            ]
          },
          {
            "name": "Average Return on NAV",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [% Return on NAV]),",
              "    ALL('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ]
          },
          {
            "name": "Average Selected Return",
            "expression": [
              " ",
              "CALCULATE(",
              "    AVERAGEX('DimFunds', [Return]),",
              "    ALLSELECTED('DimFunds'[FundId], 'DimFunds'[FundName], 'DimFunds'[FundShortName])",
              ")"
            ]
          },
          {
            "name": "Count of Firouzeh Funds",
            "expression": [
              " ",
              "CALCULATE(",
              "    COUNTROWS('DimFunds'),",
              "    'DimFunds'[Manager] = \"سبدگردان توسعه فیروزه\"",
              ")"
            ]
          },
          {
            "name": "Manager Color Code",
            "expression": [
              " ",
              "IF(",
              "    COUNTROWS('DimFunds') > 0,",
              "    CALCULATE(SELECTEDVALUE('DimFunds'[ColorCode])),",
              "    \"#BBC4C5\"",
              ")"
            ]
          },
          {
            "name": "Market Share %",
            "expression": [
              " ",
              " VAR MaxDate = ",
              "// CALCULATE(",
              "//     LASTNONBLANK(",
              "//         DATESBETWEEN(",
              "//             'DimTimeTable'[Date],",
              "//             BLANK(),",
              "//             CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "//         ),",
              "//         CALCULATE(COUNT('ViwFund_All'[AUM]), 'ViwFund_All'[FundDataTypeId] = 4) ",
              "//         ) , ALLSELECTED('DimTimeTable')",
              "// )",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "RETURN ",
              "DIVIDE(",
              "    CALCULATE([AUM_2])--CALCULATE([AUM], 'DimTimeTable'[Date] = MaxDate, ALLSELECTED('DimTimeTable'))",
              "    ,",
              "    CALCULATE([AUM_2], ALLSELECTED('DimFunds'), ALLSELECTED('FactFunds'), ALLSELECTED('DimManager'), ALLSELECTED('DimFunds'),'DimTimeTable'[Date] = MaxDate),",
              "    0",
              "    )"
            ]
          },
          {
            "name": "Market Share % of Non Bank-Affiliated",
            "expression": [
              " ",
              "DIVIDE(",
              "    CALCULATE([AUM New]),",
              "    CALCULATE([AUM New], ALL('DimManager'), NOT('DimManager'[IsBanking])),",
              "    0",
              ")"
            ]
          },
          {
            "name": "Month Rank (Old)",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Month Return])))",
              "                , [% Month Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "NAV i BT",
            "expression": " [AUM_2] / 10 ^ 10"
          },
          {
            "name": "Net Subscription Value",
            "expression": [
              " ",
              "[Subscriptions Value] - [Redemptions Value]"
            ]
          },
          {
            "name": "Net Subscriptions Value Cum",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              ")",
              "RETURN ",
              "CALCULATE(",
              "    [Net Subscription Value],",
              "    'DimTimeTable'[Date] >= BaseDate,",
              "    'DimTimeTable'[Date] <= EndDate",
              ")"
            ]
          },
          {
            "name": "New Units",
            "expression": [
              " ",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[Units]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[Units]  ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        )",
              "    )",
              "RETURN",
              "    NewUnits"
            ]
          },
          {
            "name": "New Units %",
            "expression": [
              " ",
              "VAR PeriodStartDate =",
              "    CALCULATE (",
              "        LASTNONBLANK (",
              "            DATESBETWEEN (",
              "                'DimTimeTable'[Date],",
              "                BLANK (),",
              "                CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "            ),",
              "            CALCULATE ( COUNT ( 'FactFunds'[AUM] ) )",
              "        ),",
              "        ALLSELECTED ( 'DimTimeTable' )",
              "    )",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[AUM]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[AUM] ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        )",
              "    )",
              "VAR BaseUnits =",
              "CALCULATE(",
              "    SUMX(",
              "        'FactFunds',",
              "        'FactFunds'[AUM] * 'FactFunds'[SubscriptionPrice]),",
              "        'FactFunds'[Date] = PeriodStartDate,",
              "        ALLSELECTED('DimTimeTable'),",
              "        'FactFunds'[FundDataTypeId] = 4",
              ")",
              "RETURN DIVIDE(IF(ISBLANK(NewUnits), 0, NewUnits) , BaseUnits, 0)"
            ]
          },
          {
            "name": "New Units % of Current Units",
            "expression": [
              " ",
              "VAR PeriodStartDate =",
              "    CALCULATE (",
              "        LASTNONBLANK (",
              "            DATESBETWEEN (",
              "                'DimTimeTable'[Date],",
              "                BLANK (),",
              "                CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "            ),",
              "            CALCULATE ( COUNT ( 'FactFunds'[Units] ) )",
              "        ),",
              "        ALLSELECTED ( 'DimTimeTable' )",
              "    )",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[Units]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[Units] ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        )",
              "    )",
              "VAR BaseUnits =",
              "CALCULATE(",
              "    SUMX(",
              "        'FactFunds',",
              "        'FactFunds'[Units] * 'FactFunds'[SubscriptionPrice]),",
              "        'FactFunds'[Date] = MAX('DimTimeTable'[Date]),",
              "        'FactFunds'[FundDataTypeId] = 4",
              ")",
              "RETURN DIVIDE(IF(ISBLANK(NewUnits), 0, NewUnits) , BaseUnits, 0)"
            ]
          },
          {
            "name": "New Units Cum %",
            "expression": [
              " ",
              "VAR PeriodStartDate =",
              "    CALCULATE (",
              "        LASTNONBLANK (",
              "            DATESBETWEEN (",
              "                'DimTimeTable'[Date],",
              "                BLANK (),",
              "                CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "            ),",
              "            CALCULATE ( COUNT ( 'FactFunds'[Units] ) )",
              "        ),",
              "        ALLSELECTED ( 'DimTimeTable' )",
              "    )",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[Units]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[Units] ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        ),",
              "        DATESBETWEEN (",
              "            'DimTimeTable'[Date],",
              "            PeriodStartDate,",
              "            MAX ( 'DimTimeTable'[Date] )",
              "        ),",
              "        ALL ( 'FactFunds'[Date] )",
              "    )",
              "VAR BaseUnits =",
              "CALCULATE(",
              "    SUMX(",
              "        'FactFunds',",
              "        'FactFunds'[Units] * 'FactFunds'[SubscriptionPrice]),",
              "        'FactFunds'[Date] = PeriodStartDate,",
              "        ALLSELECTED('DimTimeTable'),",
              "        'FactFunds'[FundDataTypeId] = 4",
              ")",
              "RETURN DIVIDE(IF(ISBLANK(NewUnits), 0, NewUnits) , BaseUnits, 0)"
            ]
          },
          {
            "name": "Quarter Rank (Old)",
            "expression": [
              " ",
              "IF(",
              "    SELECTEDVALUE('DimFunds'[ManagerId]) = 38,",
              "    0,",
              "    IF(ISBLANK([% Month Return]),",
              "        BLANK(),",
              "        CALCULATE(",
              "            RANKX(",
              "                FILTER(ALLEXCEPT('DimFunds', DimFunds[FundType]), NOT(ISBLANK([% Month Return])))",
              "                , [% Quarter Return]",
              "                ,",
              "                , DESC",
              "                , Skip",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "name": "Rank (by AUM) 1",
            "expression": [
              " ",
              "        CALCULATE(countrows(VALUES('DimManager'[FinancialGroupName])), ALLSELECTED('DimManager'))"
            ]
          },
          {
            "name": "New Units Cum",
            "expression": [
              " ",
              "// VAR PeriodStartDate =",
              "//     CALCULATE (",
              "//         LASTNONBLANK (",
              "//             DATESBETWEEN (",
              "//                 'DimTimeTable'[Date],",
              "//                 BLANK (),",
              "//                 CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "//             ),",
              "//             CALCULATE ( COUNT ( 'ViwFund_All'[کل واحدهاي سرمايه‌گذاري شده] ) )",
              "//         ),",
              "//         ALLSELECTED ( 'DimTimeTable' )",
              "//     )",
              "// VAR NewUnits =",
              "//     CALCULATE (",
              "//         SUMX (",
              "//             'ViwFund_All',",
              "//             'ViwFund_All'[قيمت صدور واحد]",
              "//                 * (",
              "//                     'ViwFund_All'[کل واحدهاي سرمايه‌گذاري شده]",
              "//                         - CALCULATE (",
              "//                             SELECTEDVALUE ( 'ViwFund_All'[کل واحدهاي سرمايه‌گذاري شده] ),",
              "//                             --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "//                             FILTER (",
              "//                                 ALL ( ViwFund_All ),",
              "//                                 'ViwFund_All'[Date]",
              "//                                     = CALCULATE (",
              "//                                         MAX ( 'ViwFund_All'[Date] ),",
              "//                                         'ViwFund_All'[Date] < EARLIEST ( 'ViwFund_All'[Date] ),",
              "//                                         'ViwFund_All'[FundId] = EARLIEST ( ViwFund_All[FundId] ),",
              "//                                         ALL ( 'ViwFund_All' ),",
              "//                                         'ViwFund_All'[FundDataTypeId] = 4",
              "//                                     )",
              "//                                     && 'ViwFund_All'[FundId] = EARLIEST ( ViwFund_All[FundId] )",
              "//                                     && 'ViwFund_All'[FundDataTypeId] = 4",
              "//                             )",
              "//                         ) --)",
              "//                         --  )",
              "//                 )",
              "//         ),",
              "//         DATESBETWEEN (",
              "//             'DimTimeTable'[Date],",
              "//             PeriodStartDate,",
              "//             MAX ( 'DimTimeTable'[Date] )",
              "//         ),",
              "//         ALL ( 'ViwFund_All'[Date] )",
              "//     )",
              "VAR PeriodStartDate =",
              "    CALCULATE (",
              "        LASTNONBLANK (",
              "            DATESBETWEEN (",
              "                'DimTimeTable'[Date],",
              "                BLANK (),",
              "                CALCULATE ( FIRSTDATE ( 'DimTimeTable'[Date] ) )",
              "            ),",
              "            CALCULATE ( COUNT ( 'FactFunds'[Units] ) )",
              "        ),",
              "        ALLSELECTED ( 'DimTimeTable' )",
              "    )",
              "VAR NewUnits =",
              "    CALCULATE (",
              "        SUMX (",
              "            'FactFunds',",
              "            'FactFunds'[SubscriptionPrice]",
              "                * (",
              "                    'FactFunds'[Units]",
              "                        - CALCULATE (",
              "                            SELECTEDVALUE ( 'FactFunds'[Units] ),",
              "                            --   SELECTEDVALUE('ViwFund_All'[Date]),",
              "                            FILTER (",
              "                                ALL ( FactFunds ),",
              "                                'FactFunds'[Date]",
              "                                    = CALCULATE (",
              "                                        MAX ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[Date] < EARLIEST ( 'FactFunds'[Date] ),",
              "                                        'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] ),",
              "                                        ALL ( 'FactFunds' ),",
              "                                        'FactFunds'[FundDataTypeId] = 4",
              "                                    )",
              "                                    && 'FactFunds'[FundId] = EARLIEST ( FactFunds[FundId] )",
              "                                    && 'FactFunds'[FundDataTypeId] = 4",
              "                            )",
              "                        ) --)",
              "                        --  )",
              "                )",
              "        ),",
              "        DATESBETWEEN (",
              "            'DimTimeTable'[Date],",
              "            PeriodStartDate,",
              "            MAX ( 'DimTimeTable'[Date] )",
              "        ),",
              "        ALL ( 'FactFunds'[Date] )",
              "    )",
              "VAR BaseUnits =",
              "CALCULATE(",
              "    SUMX(",
              "        'FactFunds',",
              "        'FactFunds'[Units] * 'FactFunds'[SubscriptionPrice]),",
              "        'FactFunds'[Date] = PeriodStartDate,",
              "        ALLSELECTED('DimTimeTable'),",
              "        'FactFunds'[FundDataTypeId] = 4",
              ")",
              "RETURN",
              "    NewUnits"
            ]
          },
          {
            "name": "Rank (by Return)",
            "expression": [
              " ",
              "    RANKX(",
              "        CALCULATETABLE(VALUES('DimFunds'[Manager]), ALL('DimFunds')),",
              "        [% Annual Return]",
              ")"
            ]
          },
          {
            "name": "Rebased 100 NAV",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR BaseClose = CALCULATE(SUM('FactFunds'[AUM]), 'DimTimeTable'[Date] = BaseDate)",
              "VAR CurrentDate = CALCULATE(SELECTEDVALUE('DimTimeTable'[Date]))",
              "VAR FinalClose = CALCULATE(SUM('FactFunds'[AUM]), 'DimTimeTable'[Date] = CurrentDate)",
              "VAR Rebased = DIVIDE(FinalClose, BaseClose) * 100",
              "",
              "RETURN IF(CurrentDate = CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable')), 100, Rebased)"
            ]
          },
          {
            "name": "Rebased 100 NAV Line",
            "expression": [
              " ",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE((FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "VAR EndDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "RETURN",
              "IF(",
              "    OR(",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = BaseDate,",
              "        SELECTEDVALUE('DimTimeTable'[Date]) = EndDate",
              "    ),",
              "    [Rebased 100 NAV],",
              "    BLANK()",
              ")"
            ]
          },
          {
            "name": "Rebased 100 Units",
            "expression": [
              " ",
              "",
              "VAR BaseDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(PREVIOUSDAY(FIRSTDATE('DimTimeTable'[Date])))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[AUM]))",
              "    )",
              "    , ALLSELECTED('DimTimeTable')",
              ")",
              "",
              "VAR BaseClose = CALCULATE(SELECTEDVALUE('FactFunds'[AUM]), 'DimTimeTable'[Date] = BaseDate)",
              "VAR CurrentDate = CALCULATE(SELECTEDVALUE('DimTimeTable'[Date]))",
              "VAR FinalClose = CALCULATE(SELECTEDVALUE('FactFunds'[AUM]))",
              "VAR Rebased = DIVIDE(FinalClose, BaseClose) * 100",
              "",
              "RETURN IF(CurrentDate = CALCULATE(FIRSTDATE('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable')), 100, Rebased)"
            ]
          },
          {
            "name": "Redemptions",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactFunds'[UnitsRedDay])",
              ")"
            ]
          },
          {
            "name": "Redemptions Value",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('FactFunds', 'FactFunds'[UnitsRedDay] * 'FactFunds'[RedemptionPrice])",
              ")"
            ]
          },
          {
            "name": "Return",
            "expression": [
              " ",
              "",
              "VAR BaseDate = CALCULATE(MIN('DimTimeTable'[Date]), ALLSELECTED('DimTimeTable'))",
              "",
              "VAR CurrentDate = CALCULATE(max('DimTimeTable'[Date]))",
              "",
              "VAR R = ",
              "",
              "    CALCULATE(",
              "        PRODUCTX(",
              "            'FactFunds', ",
              "            1 + [% Day Return] / 100), ",
              "            'DimTimeTable'[Date] <= CurrentDate,",
              "            'DimTimeTable'[Date] >= BaseDate",
              "",
              "    ) ",
              "",
              "RETURN IF(ISBLANK(R), BLANK(), (R-1) * 100) "
            ]
          },
          {
            "name": "Subscriptions",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactFunds'[UnitsSubDay])",
              ")"
            ]
          },
          {
            "name": "Subscriptions Value",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUMX('FactFunds', 'FactFunds'[UnitsSubDay] * 'FactFunds'[SubscriptionPrice])",
              ")"
            ]
          },
          {
            "name": "Top X 6 Month Return",
            "expression": [
              " ",
              "if (",
              "    CALCULATE([6 Month Rank (Old)])     <= [@TopX]",
              "    , [% 6 Month Return]",
              "    , blank()",
              ")"
            ]
          },
          {
            "name": "Top X Annual Return",
            "expression": [
              " ",
              "if (",
              "    CALCULATE([Annual Rank (Old)])     <= [@TopX]",
              "    , [% Annual Return]",
              "    , blank()",
              ")"
            ]
          },
          {
            "name": "Top X Month Return",
            "expression": [
              " ",
              "if (",
              "    CALCULATE([Month Rank (Old)]) <= [@TopX]",
              "    , [% Month Return]",
              "    , blank()",
              ")"
            ]
          },
          {
            "name": "Top X Quarter Return",
            "expression": [
              " ",
              "if (",
              "    CALCULATE([Quarter Rank (Old)])     <= [@TopX]",
              "    , [% Quarter Return]",
              "    , blank()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "@TopX",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {5, 10, 20, COUNTROWS('DimFunds')}"
            }
          }
        ],
        "measures": [
          {
            "name": "@TopX",
            "expression": " SELECTEDVALUE('@TopX'[Value])"
          }
        ]
      },
      {
        "name": "@Include Private Potfolios",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "type": "calculated",
            "name": "Include Private Portfos",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Value],",
              "    \"Include Private Portfos\",",
              "    BLANK()",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {True(), FALSE()}"
            }
          }
        ],
        "measures": [
          {
            "name": "AUM by parameter",
            "expression": [
              " ",
              "IF(",
              "    '@Include Private Potfolios'[Include Private Potfolios],",
              "    [AUM including Private Portfolios],",
              "    [AUM_2]",
              ")"
            ]
          },
          {
            "name": "Include Private Potfolios",
            "expression": " SELECTEDVALUE('@Include Private Potfolios'[Value])"
          }
        ]
      },
      {
        "name": "@Period",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "@Period",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 6, 12}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Period Value",
            "expression": " SELECTEDVALUE('@Period'[@Period])"
          },
          {
            "name": "% Period Return Weighted",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactFunds'[YearReturn]), 'FactFunds'[FundDataTypeId] = 4) ",
              "        )",
              ")",
              "",
              "VAR r = DIVIDE(",
              "CALCULATE(",
              "    SUMX(",
              "        FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0)),",
              "        [AUM_2] * [Period Return])),",
              "        CALCULATE([AUM_2], FILTER('DimFunds', AND(NOT(ISBLANK([Period Return])), [Period Return] <>0))))",
              "RETURN r "
            ]
          },
          {
            "name": "Period Return",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    '@Period'[@Period Value] = 1, [% Month Return],",
              "    '@Period'[@Period Value] = 3, [% Quarter Return],",
              "    '@Period'[@Period Value] = 6, [% 6 Month Return],",
              "    '@Period'[@Period Value] = 12, [% Annual Return],",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "@Ranking",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " {1, 3, 5}"
            }
          }
        ],
        "measures": [
          {
            "name": "@Ranking",
            "expression": " SELECTEDVALUE('@Ranking'[Value])"
          },
          {
            "name": "Average Ranking",
            "expression": [
              " ",
              "AVERAGEX(",
              "    'DimManager',",
              "    [Ranking]",
              ")"
            ]
          },
          {
            "name": "Ranking",
            "expression": [
              " ",
              "SWITCH(",
              "    TRUE(),",
              "    [@Ranking] = 1, [1 Year Rank],",
              "    [@Ranking] = 3, [3 Year Rank],",
              "    [@Ranking] = 5, [5 Year Rank],",
              "    BLANK()",
              ")"
            ]
          }
        ]
      },
      {
        "name": "Clients Measures",
        "columns": [
          {
            "name": "Clients Measures",
            "dataType": "string",
            "sourceColumn": "Clients Measures"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Client Assets",
            "expression": [
              " ",
              "VAR MaxDate = ",
              "CALCULATE(",
              "    LASTNONBLANK(",
              "        DATESBETWEEN(",
              "            'DimTimeTable'[Date],",
              "            BLANK(),",
              "            CALCULATE(LASTDATE('DimTimeTable'[Date]))",
              "        ),",
              "        CALCULATE(COUNT('FactShareHoldersTrade'[Value])) ",
              "        )",
              ")",
              "",
              "VAR NAV = ",
              "CALCULATE(SUM('FactShareHoldersTrade'[Value]),'DimTimeTable'[Date] = MaxDate)",
              "RETURN NAV"
            ]
          },
          {
            "name": "Net Subscription",
            "expression": [
              " ",
              "[Subscriptions (Rivarz)] - [Redemptions (Rivarz)]"
            ]
          },
          {
            "name": "Net Unit Subscriptions",
            "expression": [
              " ",
              "[Units Subscriptions (Rivarz)] - [Units Redemptions (Rivarz)]"
            ]
          },
          {
            "name": "Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ]
          },
          {
            "name": "Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Value]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ]
          },
          {
            "name": "Units Redemptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    -SUM('FactShareHoldersTrade'[Volume]),",
              "    NOT('FactShareHoldersTrade'[TradeSide])",
              ")"
            ]
          },
          {
            "name": "Units Subscriptions (Rivarz)",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShareHoldersTrade'[Volume]),",
              "    ('FactShareHoldersTrade'[TradeSide]",
              "))"
            ]
          }
        ]
      },
      {
        "name": "Competitors",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Competitors",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": " GENERATESERIES(0, 1, 1)"
            }
          }
        ],
        "measures": [
          {
            "name": "Competitors Value",
            "expression": " SELECTEDVALUE('Competitors'[Competitors], 0)"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "653d436e-826a-4021-a18c-5559f14b41a0",
        "fromTable": "DimFunds",
        "fromColumn": "ManagerId",
        "toTable": "DimManager",
        "toColumn": "ManagerId"
      },
      {
        "name": "d619a5ef-c1df-4cb9-818d-eafc003123f9",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "ShareHolderId",
        "toTable": "DimShareHoldersProfile",
        "toColumn": "ShareHolderId"
      },
      {
        "name": "713095e2-a744-4ca0-9886-cc42fba986cb",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "CompanyId",
        "toTable": "DimCompany",
        "toColumn": "CompanyId"
      },
      {
        "name": "a83990ff-984b-4271-9c7b-9bd274f49143",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "FundAssetId",
        "toTable": "DimFundAssets",
        "toColumn": "FundAssetId"
      },
      {
        "name": "ab2fb658-f51d-4735-9589-735b4d3aff96",
        "fromTable": "FactFunds",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "5c35a801-afd0-40e2-b1fb-ca985805c79a",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "1a1e2522-539c-4527-8bf7-88fd54842076",
        "fromTable": "FactFundsSplit",
        "fromColumn": "FundId",
        "toTable": "DimFunds",
        "toColumn": "FundId"
      },
      {
        "name": "71d01ad5-5aeb-48b5-99f6-8dc9729b32a1",
        "fromTable": "FactFunds",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "b0c54b11-9ec5-411b-a33e-283ab505ede4",
        "fromTable": "FactFunds (Asset Allocation)",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "a8567a96-8ca5-4b2d-bb0a-a803b1cc8934",
        "fromTable": "FactShareHoldersTrade",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "4e37cd05-a024-4158-aa48-a4550e401cc3",
        "fromTable": "FactFundsSplit",
        "fromColumn": "Date",
        "toTable": "DimTimeTable",
        "toColumn": "Date"
      },
      {
        "name": "d63827ed-03fe-4e43-be18-6b22828fd757",
        "fromTable": "FactManagerAUM",
        "fromColumn": "DDate",
        "toTable": "DimTimeTable",
        "toColumn": "DateKey"
      },
      {
        "name": "08d28904-87f1-432f-9f35-b524fb7104f8",
        "fromCardinality": "one",
        "fromTable": "DimManager",
        "fromColumn": "ManagerId",
        "toTable": "FactManagerAUM",
        "toColumn": "ManagerId",
        "isActive": false,
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "600"
      }
    ]
  },
  "id": "SemanticModel"
}